{"id":"google/cloud/firestore/client","name":"Client","title":["Google","Cloud","Firestore","Client"],"description":"<h1 id=\"client\">Client</h1>\n\n<p>The Cloud Firestore Client used is to access and manipulate the\ncollections and documents in the Firestore database.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L47","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a document reference\nnyc_ref = firestore.doc \"cities/NYC\"\n\nfirestore.batch do |b|\n  b.update(nyc_ref, { name: \"New York City\" })\nend"}],"methods":[{"id":"project_id-instance","type":"instance","name":"project_id","title":["Google","Cloud","Firestore","Client#project_id"],"description":"<p>The project identifier for the Cloud Firestore database.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L62","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"project identifier."}]},{"id":"database_id-instance","type":"instance","name":"database_id","title":["Google","Cloud","Firestore","Client#database_id"],"description":"<p>The database identifier for the Cloud Firestore database.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L70","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"database identifier."}]},{"id":"cols-instance","type":"instance","name":"cols","title":["Google","Cloud","Firestore","Client#cols"],"description":"<p>Retrieves a list of collections.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L102","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get the root collections\nfirestore.cols.each do |col|\n  puts col.collection_id\nend"}],"params":[{"name":"yield","types":["block"],"description":"The block for accessing the collections.","optional":true,"nullable":false},{"name":"yield.collection","types":["CollectionReference"],"description":"A collection.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator&lt;<a data-custom-type=\"google/cloud/firestore/collectionreference\">CollectionReference</a>&gt;"],"description":"collection list."}]},{"id":"col-instance","type":"instance","name":"col","title":["Google","Cloud","Firestore","Client#col"],"description":"<p>Retrieves a collection.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L131","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get the cities collection\ncities_col = firestore.col \"cities\"\n\n# Get the document for NYC\nnyc_ref = cities_col.doc \"NYC\""}],"params":[{"name":"collection_path","types":["String"],"description":"A string representing the path of the\ncollection, relative to the document root of the database.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/collectionreference\">CollectionReference</a>"],"description":"A collection."}]},{"id":"doc-instance","type":"instance","name":"doc","title":["Google","Cloud","Firestore","Client#doc"],"description":"<p>Retrieves a document reference.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L159","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a document\nnyc_ref = firestore.doc \"cities/NYC\"\n\nputs nyc_ref.document_id"}],"params":[{"name":"document_path","types":["String"],"description":"A string representing the path of the\ndocument, relative to the document root of the database.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/documentreference\">DocumentReference</a>"],"description":"A document."}]},{"id":"get_all-instance","type":"instance","name":"get_all","title":["Google","Cloud","Firestore","Client#get_all"],"description":"<p>Retrieves a list of document snapshots.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L193","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get and print city documents\ncities = [\"cities/NYC\", \"cities/SF\", \"cities/LA\"]\nfirestore.get_all(cities).each do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"docs","types":["String","DocumentReference","Array<String|DocumentReference>"],"description":"One or more strings representing the path of the document, or\ndocument reference objects.","optional":false,"nullable":false},{"name":"yield","types":["block"],"description":"The block for accessing the document snapshots.","optional":true,"nullable":false},{"name":"yield.document","types":["DocumentSnapshot"],"description":"A document snapshot.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator&lt;<a data-custom-type=\"google/cloud/firestore/documentsnapshot\">DocumentSnapshot</a>&gt;"],"description":"document snapshots list."}]},{"id":"document_id-instance","type":"instance","name":"document_id","title":["Google","Cloud","Firestore","Client#document_id"],"description":"<p>Creates a field path object representing the sentinel ID of a\ndocument. It can be used in queries to sort or filter by the document\nID. See <a data-custom-type=\"google/cloud/firestore/fieldpath\" data-method=\"document_id-class\">FieldPath#document_id</a>.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L235","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.order(firestore.document_id)\n                  .start_at(\"NYC\")\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/fieldpath\">FieldPath</a>"],"description":"The field path object."}]},{"id":"field_path-instance","type":"instance","name":"field_path","title":["Google","Cloud","Firestore","Client#field_path"],"description":"<p>Creates a field path object representing a nested field for\ndocument data.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L259","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\nuser_snap = firestore.doc(\"users/frank\").get\n\nnested_field_path = firestore.field_path :favorites, :food\nuser_snap.get(nested_field_path) #=> \"Pizza\""}],"params":[{"name":"fields","types":["String","Symbol","Array<String|Symbol>"],"description":"One or more\nstrings representing the path of the data to select. Each field must\nbe provided separately.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/fieldpath\">FieldPath</a>"],"description":"The field path object."}]},{"id":"field_delete-instance","type":"instance","name":"field_delete","title":["Google","Cloud","Firestore","Client#field_delete"],"description":"<p>Creates a field value object representing the deletion of a field in\ndocument data.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L280","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a document reference\nnyc_ref = firestore.doc \"cities/NYC\"\n\nnyc_ref.update({ name: \"New York City\",\n                 trash: firestore.field_delete })"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/fieldvalue\">FieldValue</a>"],"description":"The delete field value object."}]},{"id":"field_server_time-instance","type":"instance","name":"field_server_time","title":["Google","Cloud","Firestore","Client#field_server_time"],"description":"<p>Creates a field value object representing set a field’s value to\nthe server timestamp when accessing the document data.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L301","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a document reference\nnyc_ref = firestore.doc \"cities/NYC\"\n\nnyc_ref.update({ name: \"New York City\",\n                 updated_at: firestore.field_server_time })"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/fieldvalue\">FieldValue</a>"],"description":"The server time field value object."}]},{"id":"batch-instance","type":"instance","name":"batch","title":["Google","Cloud","Firestore","Client#batch"],"description":"<p>Perform multiple changes at the same time.</p>\n\n<p>All changes are accumulated in memory until the block completes.\nUnlike transactions, batches don’t lock on document reads, should only\nfail if users provide preconditions, and are not automatically\nretried. See <a data-custom-type=\"google/cloud/firestore/batch\">Batch</a>.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L341","resources":[{"title":"Transactions and Batched Writes","link":"https://firebase.google.com/docs/firestore/manage-data/transactions"}],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\nfirestore.batch do |b|\n  # Set the data for NYC\n  b.set(\"cities/NYC\", { name: \"New York City\" })\n\n  # Update the population for SF\n  b.update(\"cities/SF\", { population: 1000000 })\n\n  # Delete LA\n  b.delete(\"cities/LA\")\nend"}],"params":[{"name":"yield","types":["block"],"description":"The block for reading data and making changes.","optional":true,"nullable":false},{"name":"yield.batch","types":["Batch"],"description":"The write batch object for making changes.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/commitresponse\">CommitResponse</a>"],"description":"The response from committing the changes."}]},{"id":"transaction-instance","type":"instance","name":"transaction","title":["Google","Cloud","Firestore","Client#transaction"],"description":"<p>Create a transaction to perform multiple reads and writes that are\nexecuted atomically at a single logical point in time in a database.</p>\n\n<p>All changes are accumulated in memory until the block completes.\nTransactions will be automatically retried when documents change\nbefore the transaction is committed. See <a data-custom-type=\"google/cloud/firestore/transaction\">Transaction</a>.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/client.rb#L383","resources":[{"title":"Transactions and Batched Writes","link":"https://firebase.google.com/docs/firestore/manage-data/transactions"}],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\nfirestore.transaction do |tx|\n  # Set the data for NYC\n  tx.set(\"cities/NYC\", { name: \"New York City\" })\n\n  # Update the population for SF\n  tx.update(\"cities/SF\", { population: 1000000 })\n\n  # Delete LA\n  tx.delete(\"cities/LA\")\nend"}],"params":[{"name":"max_retries","types":["Integer"],"description":"The maximum number of retries for\ntransactions failed due to errors. Default is 5. Optional.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for reading data and making changes.","optional":true,"nullable":false},{"name":"yield.transaction","types":["Transaction"],"description":"The transaction object for\nmaking changes.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/commitresponse\">CommitResponse</a>"],"description":"The response from committing the changes."}]}]}