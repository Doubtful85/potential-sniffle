{"id":"google/cloud/firestore/query","name":"Query","title":["Google","Cloud","Firestore","Query"],"description":"<h1 id=\"query\">Query</h1>\n\n<p>Represents a query to the Firestore API.</p>\n\n<p>Instances of this class are immutable. All methods that refine the query\nreturn new instances.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L43","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Create a query\nquery = firestore.col(:cities).select(:population)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"methods":[{"id":"select-instance","type":"instance","name":"select","title":["Google","Cloud","Firestore","Query#select"],"description":"<p>Restricts documents matching the query to return only data for the\nprovided fields.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L87","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.select(:population)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"fields","types":["FieldPath","String","Symbol"],"description":"A field path to\nfilter results with and return only the specified fields. One or\nmore field paths can be specified.</p>\n\n<p>If a <a data-custom-type=\"google/cloud/firestore/fieldpath\">FieldPath</a> object is not provided then the field will be\ntreated as a dotted string, meaning the string represents individual\nfields joined by “.”. Fields containing <code>~</code>, <code>*</code>, <code>/</code>, <code>[</code>, <code>]</code>, and\n<code>.</code> cannot be in a dotted string, and should provided using a\n<a data-custom-type=\"google/cloud/firestore/fieldpath\">FieldPath</a> object instead.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>select</code> called on it."}]},{"id":"where-instance","type":"instance","name":"where","title":["Google","Cloud","Firestore","Query#where"],"description":"<p>Filters the query on a field.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L215","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.where(:population, :>=, 1000000)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"field","types":["FieldPath","String","Symbol"],"description":"A field path to filter\nresults with.</p>\n\n<p>If a <a data-custom-type=\"google/cloud/firestore/fieldpath\">FieldPath</a> object is not provided then the field will be\ntreated as a dotted string, meaning the string represents individual\nfields joined by “.”. Fields containing <code>~</code>, <code>*</code>, <code>/</code>, <code>[</code>, <code>]</code>, and\n<code>.</code> cannot be in a dotted string, and should provided using a\n<a data-custom-type=\"google/cloud/firestore/fieldpath\">FieldPath</a> object instead.","optional":false,"nullable":false},{"name":"operator","types":["String","Symbol"],"description":"The operation to compare the field\nto. Acceptable values include:</p>\n\n<ul>\n  <li>less than: <code>&lt;</code>, <code>lt</code></li>\n  <li>less than or equal: <code>&lt;=</code>, <code>lte</code></li>\n  <li>greater than: <code>&gt;</code>, <code>gt</code></li>\n  <li>greater than or equal: <code>&gt;=</code>, <code>gte</code></li>\n  <li>equal: <code>=</code>, <code>==</code>, <code>eq</code>, <code>eql</code>, <code>is</code></li>\n</ul>","optional":false,"nullable":false},{"name":"value","types":["Object"],"description":"A value the field is compared to.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>where</code> called on it."}]},{"id":"order-instance","type":"instance","name":"order","title":["Google","Cloud","Firestore","Query#order"],"description":"<p>Specifies an “order by” clause on a field.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L276","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.order(:name)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"},{"caption":"<p>Order by name descending:</p>","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.order(:name, :desc)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"field","types":["FieldPath","String","Symbol"],"description":"A field path to order results\nwith.</p>\n\n<p>If a <a data-custom-type=\"google/cloud/firestore/fieldpath\">FieldPath</a> object is not provided then the field will be\ntreated as a dotted string, meaning the string represents individual\nfields joined by “.”. Fields containing <code>~</code>, <code>*</code>, <code>/</code>, <code>[</code>, <code>]</code>, and\n<code>.</code> cannot be in a dotted string, and should provided using a\n<a data-custom-type=\"google/cloud/firestore/fieldpath\">FieldPath</a> object instead.","optional":false,"nullable":false},{"name":"direction","types":["String","Symbol"],"description":"The direction to order the results\nby. Values that start with “a” are considered <code>ascending</code>. Values\nthat start with “d” are considered <code>descending</code>. Default is\n<code>ascending</code>. Optional.","optional":true,"default":":asc","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>order</code> called on it."}]},{"id":"offset-instance","type":"instance","name":"offset","title":["Google","Cloud","Firestore","Query#offset"],"description":"<p>Skips to an offset in a query. If the current query already has\nspecified an offset, this will overwrite it.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L315","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.limit(5).offset(10)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"num","types":["Integer"],"description":"The number of results to skip.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>offset</code> called on it."}]},{"id":"limit-instance","type":"instance","name":"limit","title":["Google","Cloud","Firestore","Query#limit"],"description":"<p>Limits a query to return a fixed number of results. If the current\nquery already has a limit set, this will overwrite it.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L347","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.offset(10).limit(5)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"num","types":["Integer"],"description":"The maximum number of results to return.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>limit</code> called on it."}]},{"id":"start_at-instance","type":"instance","name":"start_at","title":["Google","Cloud","Firestore","Query#start_at"],"description":"<p>Starts query results at a set of field values. The result set will\ninclude the document specified by <code>values</code>.</p>\n\n<p>If the current query already has specified <code>start_at</code> or\n<code>start_after</code>, this will overwrite it.</p>\n\n<p>The values provided here are for the field paths provides to <code>order</code>.\nValues provided to <code>start_at</code> without an associated field path\nprovided to <code>order</code> will result in an error.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L386","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.start_at(\"NYC\").order(firestore.document_id)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"values","types":["Object"],"description":"The field value to start the query at.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>start_at</code> called on it."}]},{"id":"start_after-instance","type":"instance","name":"start_after","title":["Google","Cloud","Firestore","Query#start_after"],"description":"<p>Starts query results after a set of field values. The result set will\nnot include the document specified by <code>values</code>.</p>\n\n<p>If the current query already has specified <code>start_at</code> or\n<code>start_after</code>, this will overwrite it.</p>\n\n<p>The values provided here are for the field paths provides to <code>order</code>.\nValues provided to <code>start_after</code> without an associated field path\nprovided to <code>order</code> will result in an error.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L428","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.start_after(\"NYC\").order(firestore.document_id)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"values","types":["Object"],"description":"The field value to start the query after.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>start_after</code> called on it."}]},{"id":"end_before-instance","type":"instance","name":"end_before","title":["Google","Cloud","Firestore","Query#end_before"],"description":"<p>Ends query results before a set of field values. The result set will\nnot include the document specified by <code>values</code>.</p>\n\n<p>If the current query already has specified <code>end_before</code> or\n<code>end_at</code>, this will overwrite it.</p>\n\n<p>The values provided here are for the field paths provides to <code>order</code>.\nValues provided to <code>end_before</code> without an associated field path\nprovided to <code>order</code> will result in an error.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L469","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.end_before(\"NYC\").order(firestore.document_id)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"values","types":["Object"],"description":"The field value to end the query before.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>end_before</code> called on it."}]},{"id":"end_at-instance","type":"instance","name":"end_at","title":["Google","Cloud","Firestore","Query#end_at"],"description":"<p>Ends query results at a set of field values. The result set will\ninclude the document specified by <code>values</code>.</p>\n\n<p>If the current query already has specified <code>end_before</code> or\n<code>end_at</code>, this will overwrite it.</p>\n\n<p>The values provided here are for the field paths provides to <code>order</code>.\nValues provided to <code>end_at</code> without an associated field path provided\nto <code>order</code> will result in an error.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L510","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.end_at(\"NYC\").order(firestore.document_id)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"values","types":["Object"],"description":"The field value to end the query at.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/query\">Query</a>"],"description":"New query with <code>end_at</code> called on it."}]},{"id":"get-instance","type":"instance","name":"get","title":["Google","Cloud","Firestore","Query#get"],"description":"<p>Retrieves document snapshots for the query.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query.rb#L544","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Create a query\nquery = cities_col.select(:population)\n\nquery.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"params":[{"name":"yield","types":["block"],"description":"The block for accessing the document snapshots.","optional":true,"nullable":false},{"name":"yield.document","types":["DocumentReference"],"description":"A document snapshot.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator&lt;<a data-custom-type=\"google/cloud/firestore/documentreference\">DocumentReference</a>&gt;"],"description":"A list of document snapshots."}]}]}