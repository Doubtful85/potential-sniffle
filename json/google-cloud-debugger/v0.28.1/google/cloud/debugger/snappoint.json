{"id":"google/cloud/debugger/snappoint","name":"Snappoint","title":["Google","Cloud","Debugger","Snappoint"],"description":"<h1 id=\"snappoint\">Snappoint</h1>\n\n<p>A kind of <a data-custom-type=\"google/cloud/debugger/breakpoint\">Google::Cloud::Debugger::Breakpoint</a> that can be evaluated\nto capture the state of the program at time of evaluation. This is\nessentially a <a data-custom-type=\"google/cloud/debugger/breakpoint\">Google::Cloud::Debugger::Breakpoint</a> with action attrubte\nset to <code>:CAPTURE</code></p>","source":"google-cloud-debugger/lib/google/cloud/debugger/snappoint.rb#L29","resources":[],"examples":[],"methods":[{"id":"evaluate-instance","type":"instance","name":"evaluate","title":["Google","Cloud","Debugger","Snappoint#evaluate"],"description":"<p>Evaluate the breakpoint unless itâ€™s already marked as completed.\nStore evaluted expressions and stack frame variables in\n@evaluated_expressions, @stack_frames. Mark breakpoint complete if\nsuccessfully evaluated.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/snappoint.rb#L78","resources":[],"examples":[],"params":[{"name":"call_stack_bindings","types":["Array<Binding>"],"description":"An array of Ruby Binding\nobjects, from the call stack that leads to the triggering of the\nbreakpoints.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"True if evaluated successfully; false otherwise."}]}]}