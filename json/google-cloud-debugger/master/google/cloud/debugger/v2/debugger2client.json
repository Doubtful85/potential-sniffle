{"id":"google/cloud/debugger/v2/debugger2client","name":"Debugger2Client","title":["Google","Cloud","Debugger","V2","Debugger2Client"],"description":"<p>The Debugger service provides the API that allows users to collect run-time\ninformation from a running application, without stopping or slowing it down\nand without modifying its state.  An application may include one or\nmore replicated processes performing the same work.</p>\n\n<p>A debugged application is represented using the Debuggee concept. The\nDebugger service provides a way to query for available debuggees, but does\nnot provide a way to create one.  A debuggee is created using the Controller\nservice, usually by running a debugger agent with the application.</p>\n\n<p>The Debugger service enables the client to set one or more Breakpoints on a\nDebuggee and collect the results of the set Breakpoints.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/v2/debugger2_client.rb#L49","resources":[],"examples":[],"methods":[{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Debugger","V2","Debugger2Client#initialize"],"description":"","source":"google-cloud-debugger/lib/google/cloud/debugger/v2/debugger2_client.rb#L101","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/debugger/v2/debugger2client\">Debugger2Client</a>"],"description":"a new instance of Debugger2Client"}]},{"id":"set_breakpoint-instance","type":"instance","name":"set_breakpoint","title":["Google","Cloud","Debugger","V2","Debugger2Client#set_breakpoint"],"description":"<p>Sets the breakpoint to the debuggee.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/v2/debugger2_client.rb#L238","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/debugger/v2\"\n\ndebugger2_client = Google::Cloud::Debugger::V2::Debugger2.new\n\n# TODO: Initialize +debuggee_id+:\ndebuggee_id = ''\n\n# TODO: Initialize +breakpoint+:\nbreakpoint = {}\n\n# TODO: Initialize +client_version+:\nclient_version = ''\nresponse = debugger2_client.set_breakpoint(debuggee_id, breakpoint, client_version)"}],"params":[{"name":"debuggee_id","types":["String"],"description":"ID of the debuggee where the breakpoint is to be set.","optional":false,"nullable":false},{"name":"breakpoint","types":["Google::Devtools::Clouddebugger::V2::Breakpoint | Hash"],"description":"Breakpoint specification to set.\nThe field +location+ of the breakpoint must be set.\nA hash of the same form as <code>Google::Devtools::Clouddebugger::V2::Breakpoint</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"client_version","types":["String"],"description":"The client version making the call.\nSchema: +domain/type/version+ (e.g., +google.com/intellij/v1+).","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Devtools::Clouddebugger::V2::SetBreakpointResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/devtools/clouddebugger/v2/setbreakpointresponse\">Google::Devtools::Clouddebugger::V2::SetBreakpointResponse</a>"],"description":""}]},{"id":"get_breakpoint-instance","type":"instance","name":"get_breakpoint","title":["Google","Cloud","Debugger","V2","Debugger2Client#get_breakpoint"],"description":"<p>Gets breakpoint information.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/v2/debugger2_client.rb#L285","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/debugger/v2\"\n\ndebugger2_client = Google::Cloud::Debugger::V2::Debugger2.new\n\n# TODO: Initialize +debuggee_id+:\ndebuggee_id = ''\n\n# TODO: Initialize +breakpoint_id+:\nbreakpoint_id = ''\n\n# TODO: Initialize +client_version+:\nclient_version = ''\nresponse = debugger2_client.get_breakpoint(debuggee_id, breakpoint_id, client_version)"}],"params":[{"name":"debuggee_id","types":["String"],"description":"ID of the debuggee whose breakpoint to get.","optional":false,"nullable":false},{"name":"breakpoint_id","types":["String"],"description":"ID of the breakpoint to get.","optional":false,"nullable":false},{"name":"client_version","types":["String"],"description":"The client version making the call.\nSchema: +domain/type/version+ (e.g., +google.com/intellij/v1+).","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Devtools::Clouddebugger::V2::GetBreakpointResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/devtools/clouddebugger/v2/getbreakpointresponse\">Google::Devtools::Clouddebugger::V2::GetBreakpointResponse</a>"],"description":""}]},{"id":"delete_breakpoint-instance","type":"instance","name":"delete_breakpoint","title":["Google","Cloud","Debugger","V2","Debugger2Client#delete_breakpoint"],"description":"<p>Deletes the breakpoint from the debuggee.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/v2/debugger2_client.rb#L331","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/debugger/v2\"\n\ndebugger2_client = Google::Cloud::Debugger::V2::Debugger2.new\n\n# TODO: Initialize +debuggee_id+:\ndebuggee_id = ''\n\n# TODO: Initialize +breakpoint_id+:\nbreakpoint_id = ''\n\n# TODO: Initialize +client_version+:\nclient_version = ''\ndebugger2_client.delete_breakpoint(debuggee_id, breakpoint_id, client_version)"}],"params":[{"name":"debuggee_id","types":["String"],"description":"ID of the debuggee whose breakpoint to delete.","optional":false,"nullable":false},{"name":"breakpoint_id","types":["String"],"description":"ID of the breakpoint to delete.","optional":false,"nullable":false},{"name":"client_version","types":["String"],"description":"The client version making the call.\nSchema: +domain/type/version+ (e.g., +google.com/intellij/v1+).","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":null,"description":"[]","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"list_breakpoints-instance","type":"instance","name":"list_breakpoints","title":["Google","Cloud","Debugger","V2","Debugger2Client#list_breakpoints"],"description":"<p>Lists all breakpoints for the debuggee.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/v2/debugger2_client.rb#L393","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/debugger/v2\"\n\ndebugger2_client = Google::Cloud::Debugger::V2::Debugger2.new\n\n# TODO: Initialize +debuggee_id+:\ndebuggee_id = ''\n\n# TODO: Initialize +client_version+:\nclient_version = ''\nresponse = debugger2_client.list_breakpoints(debuggee_id, client_version)"}],"params":[{"name":"debuggee_id","types":["String"],"description":"ID of the debuggee whose breakpoints to list.","optional":false,"nullable":false},{"name":"client_version","types":["String"],"description":"The client version making the call.\nSchema: +domain/type/version+ (e.g., +google.com/intellij/v1+).","optional":false,"nullable":false},{"name":"include_all_users","types":["true","false"],"description":"When set to +true+, the response includes the list of breakpoints set by\nany user. Otherwise, it includes only breakpoints set by the caller.","optional":true,"default":"nil","nullable":true},{"name":"include_inactive","types":["true","false"],"description":"When set to +true+, the response includes active and inactive\nbreakpoints. Otherwise, it includes only active breakpoints.","optional":true,"default":"nil","nullable":true},{"name":"action","types":["Google::Devtools::Clouddebugger::V2::ListBreakpointsRequest::BreakpointActionValue | Hash"],"description":"When set, the response includes only breakpoints with the specified action.\nA hash of the same form as <code>Google::Devtools::Clouddebugger::V2::ListBreakpointsRequest::BreakpointActionValue</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"strip_results","types":["true","false"],"description":"This field is deprecated. The following fields are always stripped out of\nthe result: +stack_frames+, +evaluated_expressions+ and +variable_table+.","optional":true,"default":"nil","nullable":true},{"name":"wait_token","types":["String"],"description":"A wait token that, if specified, blocks the call until the breakpoints\nlist has changed, or a server selected timeout has expired.  The value\nshould be set from the last response. The error code\n+google.rpc.Code.ABORTED+ (RPC) is returned on wait timeout, which\nshould be called again with the same +wait_token+.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Devtools::Clouddebugger::V2::ListBreakpointsResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/devtools/clouddebugger/v2/listbreakpointsresponse\">Google::Devtools::Clouddebugger::V2::ListBreakpointsResponse</a>"],"description":""}]},{"id":"list_debuggees-instance","type":"instance","name":"list_debuggees","title":["Google","Cloud","Debugger","V2","Debugger2Client#list_debuggees"],"description":"<p>Lists all the debuggees that the user has access to.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/v2/debugger2_client.rb#L446","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/debugger/v2\"\n\ndebugger2_client = Google::Cloud::Debugger::V2::Debugger2.new\n\n# TODO: Initialize +project+:\nproject = ''\n\n# TODO: Initialize +client_version+:\nclient_version = ''\nresponse = debugger2_client.list_debuggees(project, client_version)"}],"params":[{"name":"project","types":["String"],"description":"Project number of a Google Cloud project whose debuggees to list.","optional":false,"nullable":false},{"name":"client_version","types":["String"],"description":"The client version making the call.\nSchema: +domain/type/version+ (e.g., +google.com/intellij/v1+).","optional":false,"nullable":false},{"name":"include_inactive","types":["true","false"],"description":"When set to +true+, the result includes all debuggees. Otherwise, the\nresult includes only debuggees that are active.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Devtools::Clouddebugger::V2::ListDebuggeesResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/devtools/clouddebugger/v2/listdebuggeesresponse\">Google::Devtools::Clouddebugger::V2::ListDebuggeesResponse</a>"],"description":""}]}]}