{"id":"google/cloud/debugger/v2/debugger2","name":"Debugger2","title":["Google","Cloud","Debugger","V2","Debugger2"],"description":"<p>rubocop:enable LineLength</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/v2.rb#L77","resources":[],"examples":[],"methods":[{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","Debugger","V2","Debugger2.new"],"description":"<p>The Debugger service provides the API that allows users to collect run-time\ninformation from a running application, without stopping or slowing it down\nand without modifying its state.  An application may include one or\nmore replicated processes performing the same work.</p>\n\n<p>A debugged application is represented using the Debuggee concept. The\nDebugger service provides a way to query for available debuggees, but does\nnot provide a way to create one.  A debuggee is created using the Controller\nservice, usually by running a debugger agent with the application.</p>\n\n<p>The Debugger service enables the client to set one or more Breakpoints on a\nDebuggee and collect the results of the set Breakpoints.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/v2.rb#L121","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"nil","nullable":true},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[]}]}