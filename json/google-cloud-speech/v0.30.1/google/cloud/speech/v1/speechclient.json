{"id":"google/cloud/speech/v1/speechclient","name":"SpeechClient","title":["Google","Cloud","Speech","V1","SpeechClient"],"description":"<p>Service that implements Google Cloud Speech API.</p>","source":"google-cloud-speech/lib/google/cloud/speech/v1/speech_client.rb#L40","resources":[],"examples":[],"methods":[{"id":"streaming_recognize-instance","type":"instance","name":"streaming_recognize","title":["Google","Cloud","Speech","V1","SpeechClient#streaming_recognize"],"description":"<p>Performs bidirectional streaming speech recognition: receive results\nwhile sending audio. This method is only available via the gRPC API\n(not REST).</p>\n\n<p>Provides information to the recognizer that specifies how to\n  process the request.\n  A hash of the same form as\n  +Google::Cloud::Speech::V1::StreamingRecognitionConfig+\n  can also be provided.</p>","source":"google-cloud-speech/lib/google/cloud/speech/v1/helpers.rb#L69","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/speech\"\n\nspeech_client = Google::Cloud::Speech.new\nstreaming_config = {\n  config: {\n    encoding: :linear16,\n    language_code: \"en-US\",\n    sample_rate_hertz: 16000\n  }\n}\nstream = speech_client.streaming_recognize(streaming_config)\n\n# Stream 5 seconds of audio from the microphone\n# Actual implementation of microphone input varies by platform\n5.times do\n  stream.send MicrophoneInput.read(32000)\nend\n\nstream.stop\nstream.wait_until_complete!\n\nresults = stream.results\nresult = results.first.alternatives.first\nresult.transcript #=> \"how old is the Brooklyn Bridge\"\nresult.confidence #=> 0.9826789498329163"}],"params":[{"name":"streaming_config","types":["Google::Cloud::Speech::V1::StreamingRecognitionConfig","Hash"],"description":"","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/speech/v1/stream\">Google::Cloud::Speech::V1::Stream</a>"],"description":"An object that streams the requests and responses."}]},{"id":"get_operation-instance","type":"instance","name":"get_operation","title":["Google","Cloud","Speech","V1","SpeechClient#get_operation"],"description":"<p>Gets the latest state of a long-running operation. Clients can use\nthis method to poll the operation result at intervals as recommended\nby the API service.</p>","source":"google-cloud-speech/lib/google/cloud/speech/v1/helpers.rb#L120","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/speech\"\n\nspeech_client = Google::Cloud::Speech.new version: :v1\n\nop = speech_client.get_operation \"-\"\n\n# Process error operations.\nlog_error op.error if op.error?\n\nif op.done?\n  # Process completed operations.\n  log_finished op.response, op.metadata\nelse\n  # Process pending operations.\n  log_pending op.name, op.metadata\nend"}],"params":[{"name":"name","types":["String"],"description":"The name of the operation resource.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Speech","V1","SpeechClient#initialize"],"description":"","source":"google-cloud-speech/lib/google/cloud/speech/v1/speech_client.rb#L96","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/speech/v1/speechclient\">SpeechClient</a>"],"description":"a new instance of SpeechClient"}]},{"id":"recognize-instance","type":"instance","name":"recognize","title":["Google","Cloud","Speech","V1","SpeechClient#recognize"],"description":"<p>Performs synchronous speech recognition: receive results after all audio\nhas been sent and processed.</p>","source":"google-cloud-speech/lib/google/cloud/speech/v1/speech_client.rb#L233","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/speech\"\n\nspeech_client = Google::Cloud::Speech.new(version: :v1)\nencoding = :FLAC\nsample_rate_hertz = 44100\nlanguage_code = \"en-US\"\nconfig = {\n  encoding: encoding,\n  sample_rate_hertz: sample_rate_hertz,\n  language_code: language_code\n}\nuri = \"gs://bucket_name/file_name.flac\"\naudio = { uri: uri }\nresponse = speech_client.recognize(config, audio)"}],"params":[{"name":"config","types":["Google::Cloud::Speech::V1::RecognitionConfig | Hash"],"description":"<em>Required</em> Provides information to the recognizer that specifies how to\nprocess the request.\nA hash of the same form as <code>Google::Cloud::Speech::V1::RecognitionConfig</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"audio","types":["Google::Cloud::Speech::V1::RecognitionAudio | Hash"],"description":"<em>Required</em> The audio data to be recognized.\nA hash of the same form as <code>Google::Cloud::Speech::V1::RecognitionAudio</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Speech::V1::RecognizeResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/speech/v1/recognizeresponse\">Google::Cloud::Speech::V1::RecognizeResponse</a>"],"description":""}]},{"id":"long_running_recognize-instance","type":"instance","name":"long_running_recognize","title":["Google","Cloud","Speech","V1","SpeechClient#long_running_recognize"],"description":"<p>Performs asynchronous speech recognition: receive results via the\ngoogle.longrunning.Operations interface. Returns either an\n+Operation.error+ or an +Operation.response+ which contains\na +LongRunningRecognizeResponse+ message.</p>","source":"google-cloud-speech/lib/google/cloud/speech/v1/speech_client.rb#L307","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/speech\"\n\nspeech_client = Google::Cloud::Speech.new(version: :v1)\nencoding = :FLAC\nsample_rate_hertz = 44100\nlanguage_code = \"en-US\"\nconfig = {\n  encoding: encoding,\n  sample_rate_hertz: sample_rate_hertz,\n  language_code: language_code\n}\nuri = \"gs://bucket_name/file_name.flac\"\naudio = { uri: uri }\n\n# Register a callback during the method call.\noperation = speech_client.long_running_recognize(config, audio) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"config","types":["Google::Cloud::Speech::V1::RecognitionConfig | Hash"],"description":"<em>Required</em> Provides information to the recognizer that specifies how to\nprocess the request.\nA hash of the same form as <code>Google::Cloud::Speech::V1::RecognitionConfig</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"audio","types":["Google::Cloud::Speech::V1::RecognitionAudio | Hash"],"description":"<em>Required</em> The audio data to be recognized.\nA hash of the same form as <code>Google::Cloud::Speech::V1::RecognitionAudio</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]}]}