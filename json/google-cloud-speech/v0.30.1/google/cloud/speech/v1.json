{"id":"google/cloud/speech/v1","name":"V1","title":["Google","Cloud","Speech","V1"],"description":"<h1 id=\"ruby-client-for-google-cloud-speech-api-alpha\">Ruby Client for Google Cloud Speech API (<a href=\"https://github.com/GoogleCloudPlatform/google-cloud-ruby#versioning\">Alpha</a>)</h1>\n\n<p><a href=\"https://cloud.google.com/speech\">Google Cloud Speech API</a>:\nGoogle Cloud Speech API.</p>\n<ul>\n  <li><a href=\"https://cloud.google.com/speech\">Product Documentation</a></li>\n</ul>\n\n<h2 id=\"quick-start\">Quick Start</h2>\n<p>In order to use this library, you first need to go through the following\nsteps:</p>\n\n<ol>\n  <li><a href=\"https://console.cloud.google.com/project\">Select or create a Cloud Platform project.</a></li>\n  <li><a href=\"https://cloud.google.com/billing/docs/how-to/modify-project#enable_billing_for_a_project\">Enable billing for your project.</a></li>\n  <li><a href=\"https://console.cloud.google.com/apis/library/speech.googleapis.com\">Enable the Google Cloud Speech API.</a></li>\n  <li><a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud/master/guides/authentication\">Setup Authentication.</a></li>\n</ol>\n\n<h3 id=\"preview\">Preview</h3>\n<h4 id=\"speechclient\">SpeechClient</h4>\n<pre><code class=\"language-rb\">require \"google/cloud/speech\"\n\nspeech_client = Google::Cloud::Speech.new(version: :v1)\nlanguage_code = \"en-US\"\nsample_rate_hertz = 44100\nencoding = :FLAC\nconfig = {\n  language_code: language_code,\n  sample_rate_hertz: sample_rate_hertz,\n  encoding: encoding\n}\nuri = \"gs://bucket-name/hello.flac\"\naudio = { uri: uri }\nresponse = speech_client.recognize(config, audio)\n</code></pre>\n\n<h3 id=\"next-steps\">Next Steps</h3>\n<ul>\n  <li>Read the <a href=\"https://cloud.google.com/speech\">Google Cloud Speech API Product documentation</a>\nto learn more about the product and see How-to Guides.</li>\n  <li>View this <a href=\"https://github.com/GoogleCloudPlatform/google-cloud-ruby/blob/master/README.md\">repositoryâ€™s main README</a>\nto see the full list of Cloud APIs that we cover.</li>\n</ul>\n\n<h2 id=\"enabling-logging\">Enabling Logging</h2>\n\n<p>To enable logging for this library, set the logger for the underlying <a href=\"https://github.com/grpc/grpc/tree/master/src/ruby\">gRPC</a> library.\nThe logger that you set may be a Ruby stdlib <a href=\"https://ruby-doc.org/stdlib-2.5.0/libdoc/logger/rdoc/Logger.html\"><code>Logger</code></a> as shown below,\nor a <a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud-logging/latest/google/cloud/logging/logger\"><code>Google::Cloud::Logging::Logger</code></a>\nthat will write logs to <a href=\"https://cloud.google.com/logging/\">Stackdriver Logging</a>. See <a href=\"https://github.com/grpc/grpc/blob/master/src/ruby/lib/grpc/logconfig.rb\">grpc/logconfig.rb</a>\nand the gRPC <a href=\"https://github.com/grpc/grpc/blob/master/src/ruby/spec/spec_helper.rb\">spec_helper.rb</a> for additional information.</p>\n\n<p>Configuring a Ruby stdlib logger:</p>\n\n<pre><code class=\"language-ruby\">require \"logger\"\n\nmodule MyLogger\n  LOGGER = Logger.new $stderr, level: Logger::WARN\n  def logger\n    LOGGER\n  end\nend\n\n# Define a gRPC module-level logger method before grpc/logconfig.rb loads.\nmodule GRPC\n  extend MyLogger\nend\n</code></pre>","source":"google-cloud-speech/lib/google/cloud/speech/v1.rb#L92","resources":[],"examples":[],"methods":[{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","Speech","V1.new"],"description":"<p>Service that implements Google Cloud Speech API.</p>","source":"google-cloud-speech/lib/google/cloud/speech/v1.rb#L127","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"nil","nullable":true},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[]}]}