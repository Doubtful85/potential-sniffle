{"id":"google/cloud/datastore/v1/datastoreclient","name":"DatastoreClient","title":["Google","Cloud","Datastore","V1","DatastoreClient"],"description":"<p>Each RPC normalizes the partition IDs of the keys in its input entities,\nand always returns entities with keys with normalized partition IDs.\nThis applies to all keys and entities, including those in values, except keys\nwith both an empty path and an empty or unset partition ID. Normalization of\ninput keys sets the project ID (if not already set) to the project ID from\nthe request.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L43","resources":[],"examples":[],"methods":[{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Datastore","V1","DatastoreClient#initialize"],"description":"","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L95","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/datastore/v1/datastoreclient\">DatastoreClient</a>"],"description":"a new instance of DatastoreClient"}]},{"id":"lookup-instance","type":"instance","name":"lookup","title":["Google","Cloud","Datastore","V1","DatastoreClient#lookup"],"description":"<p>Looks up entities by key.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L239","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore_client = Google::Cloud::Datastore.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +keys+:\nkeys = []\nresponse = datastore_client.lookup(project_id, keys)"}],"params":[{"name":"project_id","types":["String"],"description":"The ID of the project against which to make the request.","optional":false,"nullable":false},{"name":"keys","types":["Array<Google::Datastore::V1::Key | Hash>"],"description":"Keys of entities to look up.\nA hash of the same form as <code>Google::Datastore::V1::Key</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"read_options","types":["Google::Datastore::V1::ReadOptions | Hash"],"description":"The options for this lookup request.\nA hash of the same form as <code>Google::Datastore::V1::ReadOptions</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Datastore::V1::LookupResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/datastore/v1/lookupresponse\">Google::Datastore::V1::LookupResponse</a>"],"description":""}]},{"id":"run_query-instance","type":"instance","name":"run_query","title":["Google","Cloud","Datastore","V1","DatastoreClient#run_query"],"description":"<p>Queries for entities.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L297","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore_client = Google::Cloud::Datastore.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +partition_id+:\npartition_id = {}\nresponse = datastore_client.run_query(project_id, partition_id)"}],"params":[{"name":"project_id","types":["String"],"description":"The ID of the project against which to make the request.","optional":false,"nullable":false},{"name":"partition_id","types":["Google::Datastore::V1::PartitionId | Hash"],"description":"Entities are partitioned into subsets, identified by a partition ID.\nQueries are scoped to a single partition.\nThis partition ID is normalized with the standard default context\npartition ID.\nA hash of the same form as <code>Google::Datastore::V1::PartitionId</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"read_options","types":["Google::Datastore::V1::ReadOptions | Hash"],"description":"The options for this query.\nA hash of the same form as <code>Google::Datastore::V1::ReadOptions</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"query","types":["Google::Datastore::V1::Query | Hash"],"description":"The query to run.\nA hash of the same form as <code>Google::Datastore::V1::Query</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"gql_query","types":["Google::Datastore::V1::GqlQuery | Hash"],"description":"The GQL query to run.\nA hash of the same form as <code>Google::Datastore::V1::GqlQuery</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Datastore::V1::RunQueryResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/datastore/v1/runqueryresponse\">Google::Datastore::V1::RunQueryResponse</a>"],"description":""}]},{"id":"begin_transaction-instance","type":"instance","name":"begin_transaction","title":["Google","Cloud","Datastore","V1","DatastoreClient#begin_transaction"],"description":"<p>Begins a new transaction.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L341","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore_client = Google::Cloud::Datastore.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\nresponse = datastore_client.begin_transaction(project_id)"}],"params":[{"name":"project_id","types":["String"],"description":"The ID of the project against which to make the request.","optional":false,"nullable":false},{"name":"transaction_options","types":["Google::Datastore::V1::TransactionOptions | Hash"],"description":"Options for a new transaction.\nA hash of the same form as <code>Google::Datastore::V1::TransactionOptions</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Datastore::V1::BeginTransactionResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/datastore/v1/begintransactionresponse\">Google::Datastore::V1::BeginTransactionResponse</a>"],"description":""}]},{"id":"commit-instance","type":"instance","name":"commit","title":["Google","Cloud","Datastore","V1","DatastoreClient#commit"],"description":"<p>Commits a transaction, optionally creating, deleting or modifying some\nentities.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L404","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore_client = Google::Cloud::Datastore.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +mode+:\nmode = :MODE_UNSPECIFIED\n\n# TODO: Initialize +mutations+:\nmutations = []\nresponse = datastore_client.commit(project_id, mode, mutations)"}],"params":[{"name":"project_id","types":["String"],"description":"The ID of the project against which to make the request.","optional":false,"nullable":false},{"name":"mode","types":["Google::Datastore::V1::CommitRequest::Mode"],"description":"The type of commit to perform. Defaults to +TRANSACTIONAL+.","optional":false,"nullable":false},{"name":"mutations","types":["Array<Google::Datastore::V1::Mutation | Hash>"],"description":"The mutations to perform.</p>\n\n<p>When mode is +TRANSACTIONAL+, mutations affecting a single entity are\napplied in order. The following sequences of mutations affecting a single\nentity are not permitted in a single +Commit+ request:</p>\n\n<ul>\n  <li>+insert+ followed by +insert+</li>\n  <li>+update+ followed by +insert+</li>\n  <li>+upsert+ followed by +insert+</li>\n  <li>+delete+ followed by +update+</li>\n</ul>\n\n<p>When mode is +NON_TRANSACTIONAL+, no two mutations may affect a single\nentity.\nA hash of the same form as <code>Google::Datastore::V1::Mutation</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"transaction","types":["String"],"description":"The identifier of the transaction associated with the commit. A\ntransaction identifier is returned by a call to\nGoogle::Datastore::V1::Datastore::BeginTransaction.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Datastore::V1::CommitResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/datastore/v1/commitresponse\">Google::Datastore::V1::CommitResponse</a>"],"description":""}]},{"id":"rollback-instance","type":"instance","name":"rollback","title":["Google","Cloud","Datastore","V1","DatastoreClient#rollback"],"description":"<p>Rolls back a transaction.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L448","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore_client = Google::Cloud::Datastore.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +transaction+:\ntransaction = ''\nresponse = datastore_client.rollback(project_id, transaction)"}],"params":[{"name":"project_id","types":["String"],"description":"The ID of the project against which to make the request.","optional":false,"nullable":false},{"name":"transaction","types":["String"],"description":"The transaction identifier, returned by a call to\nGoogle::Datastore::V1::Datastore::BeginTransaction.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Datastore::V1::RollbackResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/datastore/v1/rollbackresponse\">Google::Datastore::V1::RollbackResponse</a>"],"description":""}]},{"id":"allocate_ids-instance","type":"instance","name":"allocate_ids","title":["Google","Cloud","Datastore","V1","DatastoreClient#allocate_ids"],"description":"<p>Allocates IDs for the given keys, which is useful for referencing an entity\nbefore it is inserted.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L491","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore_client = Google::Cloud::Datastore.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +keys+:\nkeys = []\nresponse = datastore_client.allocate_ids(project_id, keys)"}],"params":[{"name":"project_id","types":["String"],"description":"The ID of the project against which to make the request.","optional":false,"nullable":false},{"name":"keys","types":["Array<Google::Datastore::V1::Key | Hash>"],"description":"A list of keys with incomplete key paths for which to allocate IDs.\nNo key may be reserved/read-only.\nA hash of the same form as <code>Google::Datastore::V1::Key</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Datastore::V1::AllocateIdsResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/datastore/v1/allocateidsresponse\">Google::Datastore::V1::AllocateIdsResponse</a>"],"description":""}]},{"id":"reserve_ids-instance","type":"instance","name":"reserve_ids","title":["Google","Cloud","Datastore","V1","DatastoreClient#reserve_ids"],"description":"<p>Prevents the supplied keys’ IDs from being auto-allocated by Cloud\nDatastore.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/v1/datastore_client.rb#L536","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore_client = Google::Cloud::Datastore.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +keys+:\nkeys = []\nresponse = datastore_client.reserve_ids(project_id, keys)"}],"params":[{"name":"project_id","types":["String"],"description":"The ID of the project against which to make the request.","optional":false,"nullable":false},{"name":"keys","types":["Array<Google::Datastore::V1::Key | Hash>"],"description":"A list of keys with complete key paths whose numeric IDs should not be\nauto-allocated.\nA hash of the same form as <code>Google::Datastore::V1::Key</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"database_id","types":["String"],"description":"If not empty, the ID of the database against which to make the request.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Datastore::V1::ReserveIdsResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/datastore/v1/reserveidsresponse\">Google::Datastore::V1::ReserveIdsResponse</a>"],"description":""}]}]}