{"id":"google/cloud/pubsub/subscription","name":"Subscription","title":["Google","Cloud","Pubsub","Subscription"],"description":"<h1 id=\"subscription\">Subscription</h1>\n\n<p>A named resource representing the stream of messages from a single,\nspecific <a data-custom-type=\"google/cloud/pubsub/topic\">Topic</a>, to be delivered to the subscribing application.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L39","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.pull\nmsgs.each { |msg| msg.acknowledge! }"}],"methods":[{"id":"name-instance","type":"instance","name":"name","title":["Google","Cloud","Pubsub","Subscription#name"],"description":"<p>The name of the subscription.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L70","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"topic-instance","type":"instance","name":"topic","title":["Google","Cloud","Pubsub","Subscription#topic"],"description":"<p>The <a data-custom-type=\"google/cloud/pubsub/topic\">Topic</a> from which this subscription receives messages.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L87","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.topic.name #=> \"projects/my-project/topics/my-topic\""}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/topic\">Topic</a>"],"description":""}]},{"id":"deadline-instance","type":"instance","name":"deadline","title":["Google","Cloud","Pubsub","Subscription#deadline"],"description":"<p>This value is the maximum number of seconds after a subscriber\nreceives a message before the subscriber should acknowledge the\nmessage.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L96","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"retain_acked-instance","type":"instance","name":"retain_acked","title":["Google","Cloud","Pubsub","Subscription#retain_acked"],"description":"<p>Indicates whether to retain acknowledged messages. If <code>true</code>, then\nmessages are not expunged from the subscription’s backlog, even if\nthey are acknowledged, until they fall out of the\n#retention_duration window. Default is <code>false</code>.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L110","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code>true</code> if acknowledged messages are\nretained."}]},{"id":"retention-instance","type":"instance","name":"retention","title":["Google","Cloud","Pubsub","Subscription#retention"],"description":"<p>How long to retain unacknowledged messages in the subscription’s\nbacklog, from the moment a message is published. If\n<a data-custom-type=\"google/cloud/pubsub/subscription\" data-method=\"retain_acked-instance\">#retain_acked</a> is <code>true</code>, then this also configures the retention of\nacknowledged messages, and thus configures how far back in time a\n<a data-custom-type=\"google/cloud/pubsub/subscription\" data-method=\"seek-instance\">#seek</a> can be done. Cannot be more than 604,800 seconds (7 days) or\nless than 600 seconds (10 minutes). Default is 604,800 seconds (7\ndays).</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L126","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Numeric"],"description":"The message retention duration in seconds."}]},{"id":"endpoint-instance","type":"instance","name":"endpoint","title":["Google","Cloud","Pubsub","Subscription#endpoint"],"description":"<p>Returns the URL locating the endpoint to which messages should be\npushed.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L134","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"endpoint=-instance","type":"instance","name":"endpoint=","title":["Google","Cloud","Pubsub","Subscription#endpoint="],"description":"<p>Sets the URL locating the endpoint to which messages should be pushed.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L141","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"exists?-instance","type":"instance","name":"exists?","title":["Google","Cloud","Pubsub","Subscription#exists?"],"description":"<p>Determines whether the subscription exists in the Pub/Sub service.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L161","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.exists? #=> true"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"delete-instance","type":"instance","name":"delete","title":["Google","Cloud","Pubsub","Subscription#delete"],"description":"<p>Deletes an existing subscription.\nAll pending messages in the subscription are immediately dropped.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L203","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.delete"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code>true</code> if the subscription was deleted."}]},{"id":"pull-instance","type":"instance","name":"pull","title":["Google","Cloud","Pubsub","Subscription#pull"],"description":"<p>Pulls messages from the server. Returns an empty list if there are no\nmessages available in the backlog. Raises an ApiError with status\n<code>UNAVAILABLE</code> if there are too many concurrent pull requests pending\nfor the given subscription.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L253","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.pull.each { |msg| msg.acknowledge! }"},{"caption":"<p>A maximum number of messages returned can also be specified:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.pull(max: 10).each { |msg| msg.acknowledge! }"},{"caption":"<p>The call can block until messages are available:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.pull immediate: false\nmsgs.each { |msg| msg.acknowledge! }"}],"params":[{"name":"immediate","types":["Boolean"],"description":"When <code>true</code> the system will respond\nimmediately even if it is not able to return messages. When <code>false</code>\nthe system is allowed to wait until it can return least one message.\nNo messages are returned when a request times out. The default value\nis <code>true</code>.","optional":true,"default":"true","nullable":false},{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code>100</code>, the maximum value is <code>1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it\nis pulled. The default value is <code>false</code>.","optional":true,"default":"false","nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/pubsub/receivedmessage\">Google::Cloud::Pubsub::ReceivedMessage</a>&gt;"],"description":""}]},{"id":"wait_for_messages-instance","type":"instance","name":"wait_for_messages","title":["Google","Cloud","Pubsub","Subscription#wait_for_messages"],"description":"<p>Pulls from the server while waiting for messages to become available.\nThis is the same as:</p>\n\n<p>subscription.pull immediate: false</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L289","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.wait_for_messages\nmsgs.each { |msg| msg.acknowledge! }"}],"params":[{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code>100</code>, the maximum value is <code>1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it\nis pulled. The default value is <code>false</code>.","optional":true,"default":"false","nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/pubsub/receivedmessage\">Google::Cloud::Pubsub::ReceivedMessage</a>&gt;"],"description":""}]},{"id":"listen-instance","type":"instance","name":"listen","title":["Google","Cloud","Pubsub","Subscription#listen"],"description":"<p>Poll the backend for new messages. This runs a loop to ping the API,\nblocking indefinitely, yielding retrieved messages as they are\nreceived.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L339","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen do |msg|\n  # process msg\nend"},{"caption":"<p>Limit number of messages pulled per API request with <code>max</code>:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen max: 20 do |msg|\n  # process msg\nend"},{"caption":"<p>Automatically acknowledge messages with <code>autoack</code>:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen autoack: true do |msg|\n  # process msg\nend"}],"params":[{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code>100</code>, the maximum value is <code>1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it\nis pulled. The default value is <code>false</code>.","optional":true,"default":"false","nullable":false},{"name":"delay","types":["Number"],"description":"The number of seconds to pause between requests\nwhen the Google Cloud service has no messages to return. The default\nvalue is <code>1</code>.","optional":true,"default":"1","nullable":false},{"name":"yield","types":["block"],"description":"a block for processing new messages","optional":true,"nullable":false},{"name":"yield.msg","types":["ReceivedMessage"],"description":"the newly received message","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"acknowledge-instance","type":"instance","name":"acknowledge","title":["Google","Cloud","Pubsub","Subscription#acknowledge"],"description":"<p>Acknowledges receipt of a message. After an ack,\nthe Pub/Sub system can remove the message from the subscription.\nAcknowledging a message whose ack deadline has expired may succeed,\nalthough the message may have been sent again.\nAcknowledging a message more than once will not result in an error.\nThis is only used for messages received via pull.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L370","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nmessages = sub.pull\nsub.acknowledge messages"}],"params":[{"name":"messages","types":["ReceivedMessage","String"],"description":"One or more\n<a data-custom-type=\"google/cloud/pubsub/receivedmessage\">ReceivedMessage</a> objects or ack_id values.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delay-instance","type":"instance","name":"delay","title":["Google","Cloud","Pubsub","Subscription#delay"],"description":"<p>Modifies the acknowledge deadline for messages.</p>\n\n<p>This indicates that more time is needed to process the messages, or to\nmake the messages available for redelivery if the processing was\ninterrupted.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L403","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-topic-sub\"\nmessages = sub.pull\nsub.delay 120, messages"}],"params":[{"name":"new_deadline","types":["Integer"],"description":"The new ack deadline in seconds from the\ntime this request is sent to the Pub/Sub system. Must be &gt;= 0. For\nexample, if the value is <code>10</code>, the new ack deadline will expire 10\nseconds after the call is made. Specifying <code>0</code> may immediately make\nthe message available for another pull request.","optional":false,"nullable":false},{"name":"messages","types":["ReceivedMessage","String"],"description":"One or more\n<a data-custom-type=\"google/cloud/pubsub/receivedmessage\">ReceivedMessage</a> objects or ack_id values.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"create_snapshot-instance","type":"instance","name":"create_snapshot","title":["Google","Cloud","Pubsub","Subscription#create_snapshot"],"description":"<p>Creates a new <a data-custom-type=\"google/cloud/pubsub/snapshot\">Snapshot</a> from the subscription. The created snapshot\nis guaranteed to retain:</p>\n\n<ul>\n  <li>The existing backlog on the subscription. More precisely, this is\ndefined as the messages in the subscription’s backlog that are\nunacknowledged upon the successful completion of the\n<code>create_snapshot</code> operation; as well as:</li>\n  <li>Any messages published to the subscription’s topic following the\nsuccessful completion of the <code>create_snapshot</code> operation.</li>\n</ul>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L450","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\nsub = pubsub.subscription \"my-sub\"\n\nsnapshot = sub.create_snapshot \"my-snapshot\"\nsnapshot.name #=> \"projects/my-project/snapshots/my-snapshot\""},{"caption":"<p>Without providing a name:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\nsub = pubsub.subscription \"my-sub\"\n\nsnapshot = sub.create_snapshot\nsnapshot.name #=> \"projects/my-project/snapshots/gcr-analysis-...\""}],"params":[{"name":"snapshot_name","types":["String","nil"],"description":"Name of the new snapshot. If the\nname is not provided, the server will assign a random name\nfor this snapshot on the same project as the subscription. The\nformat is <code>projects/{project}/snapshots/{snap}</code>. The name must start\nwith a letter, and contain only letters ([A-Za-z]), numbers\n([0-9], dashes (-), underscores (_), periods (.), tildes (~), plus\n(+) or percent signs (%). It must be between 3 and 255 characters in\nlength, and it must not start with “goog”. Optional.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/snapshot\">Google::Cloud::Pubsub::Snapshot</a>"],"description":""}]},{"id":"seek-instance","type":"instance","name":"seek","title":["Google","Cloud","Pubsub","Subscription#seek"],"description":"<p>Resets the subscription’s backlog to a given <a data-custom-type=\"google/cloud/pubsub/snapshot\">Snapshot</a> or to a point\nin time, whichever is provided in the request.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L503","resources":[],"examples":[{"caption":"<p>Using a snapshot</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\nsub = pubsub.subscription \"my-sub\"\n\nsnapshot = sub.create_snapshot\n\nmessages = sub.pull\nsub.acknowledge messages\n\nsub.seek snapshot"},{"caption":"<p>Using a time:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\nsub = pubsub.subscription \"my-sub\"\n\ntime = Time.now\n\nmessages = sub.pull\nsub.acknowledge messages\n\nsub.seek time"}],"params":[{"name":"snapshot","types":["Snapshot","String","Time"],"description":"The <code>Snapshot</code> instance,\nsnapshot name, or time to which to perform the seek.\nIf the argument is a snapshot, the snapshot’s topic must be the\nsame as that of the subscription. If it is a time, messages retained\nin the subscription that were published before this time are marked\nas acknowledged, and messages retained in the subscription that were\npublished after this time are marked as unacknowledged. Note that\nthis operation affects only those messages retained in the\nsubscription. For example, if the time corresponds to a point before\nthe message retention window (or to a point before the system’s\nnotion of the subscription creation time), only retained messages\nwill be marked as unacknowledged, and already-expunged messages will\nnot be restored.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code>true</code> if the seek was successful."}]},{"id":"policy-instance","type":"instance","name":"policy","title":["Google","Cloud","Pubsub","Subscription#policy"],"description":"<p>Gets the <a href=\"https://cloud.google.com/iam/\">Cloud IAM</a> access control\npolicy for this subscription.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L543","resources":[{"title":"google.iam.v1.IAMPolicy","link":"https://cloud.google.com/pubsub/docs/reference/rpc/google.iam.v1#iampolicy"}],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\nsub = pubsub.subscription \"my-subscription\"\n\npolicy = sub.policy"},{"caption":"<p>Update the policy by passing a block:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\nsub = pubsub.subscription \"my-subscription\"\n\nsub.policy do |p|\n  p.add \"roles/owner\", \"user:owner@example.com\"\nend"}],"params":[{"name":"yield","types":["block"],"description":"A block for updating the policy. The latest policy\nwill be read from the Pub/Sub service and passed to the block. After\nthe block completes, the modified policy will be written to the\nservice.","optional":true,"nullable":false},{"name":"yield.policy","types":["Policy"],"description":"the current Cloud IAM Policy for this\nsubscription","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/policy\">Policy</a>"],"description":"the current Cloud IAM Policy for this subscription"}]},{"id":"policy=-instance","type":"instance","name":"policy=","title":["Google","Cloud","Pubsub","Subscription#policy="],"description":"<p>Updates the <a href=\"https://cloud.google.com/iam/\">Cloud IAM</a> access control\npolicy for this subscription. The policy should be read from\n<a data-custom-type=\"google/cloud/pubsub/subscription\" data-method=\"policy-instance\">#policy</a>. See <a data-custom-type=\"google/cloud/pubsub/policy\">Google::Cloud::Pubsub::Policy</a> for an explanation of\nthe policy <code>etag</code> property and how to modify policies.</p>\n\n<p>You can also update the policy by passing a block to <a data-custom-type=\"google/cloud/pubsub/subscription\" data-method=\"policy-instance\">#policy</a>, which\nwill call this method internally after the block completes.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L581","resources":[{"title":"google.iam.v1.IAMPolicy","link":"https://cloud.google.com/pubsub/docs/reference/rpc/google.iam.v1#iampolicy"}],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\nsub = pubsub.subscription \"my-subscription\"\n\npolicy = sub.policy # API call\n\npolicy.add \"roles/owner\", \"user:owner@example.com\"\n\nsub.policy = policy # API call"}],"params":[{"name":"new_policy","types":["Policy"],"description":"a new or modified Cloud IAM Policy for this\nsubscription","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/policy\">Policy</a>"],"description":"the policy returned by the API update operation"}]},{"id":"test_permissions-instance","type":"instance","name":"test_permissions","title":["Google","Cloud","Pubsub","Subscription#test_permissions"],"description":"<p>Tests the specified permissions against the <a href=\"https://cloud.google.com/iam/\">Cloud\nIAM</a> access control policy.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/subscription.rb#L619","resources":[{"title":"Managing\nPolicies","link":"https://cloud.google.com/iam/docs/managing-policies"}],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\nsub = pubsub.subscription \"my-subscription\"\nperms = sub.test_permissions \"pubsub.subscriptions.get\",\n                             \"pubsub.subscriptions.consume\"\nperms.include? \"pubsub.subscriptions.get\" #=> true\nperms.include? \"pubsub.subscriptions.consume\" #=> false"}],"params":[{"name":"permissions","types":["String","Array<String>"],"description":"The set of permissions to\ncheck access for. Permissions with wildcards (such as <code>*</code> or\n<code>storage.*</code>) are not allowed.</p>\n\n<p>The permissions that can be checked on a subscription are:</p>\n\n<ul>\n  <li>pubsub.subscriptions.consume</li>\n  <li>pubsub.subscriptions.get</li>\n  <li>pubsub.subscriptions.delete</li>\n  <li>pubsub.subscriptions.update</li>\n  <li>pubsub.subscriptions.getIamPolicy</li>\n  <li>pubsub.subscriptions.setIamPolicy</li>\n</ul>","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;String&gt;"],"description":"The permissions that have access."}]}]}