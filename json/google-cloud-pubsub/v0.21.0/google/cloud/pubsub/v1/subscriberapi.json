{"id":"google/cloud/pubsub/v1/subscriberapi","name":"SubscriberApi","title":["Google","Cloud","Pubsub","V1","SubscriberApi"],"description":"<p>The service that an application uses to manipulate subscriptions and to\nconsume messages from a subscription via the +Pull+ method.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L43","resources":[],"examples":[],"methods":[{"id":"iam_policy_stub-instance","type":"instance","name":"iam_policy_stub","title":["Google","Cloud","Pubsub","V1","SubscriberApi#iam_policy_stub"],"description":"","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L43","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Iam::V1::IAMPolicy::Stub"],"description":""}]},{"id":"subscriber_stub-instance","type":"instance","name":"subscriber_stub","title":["Google","Cloud","Pubsub","V1","SubscriberApi#subscriber_stub"],"description":"","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L43","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Pubsub::V1::Subscriber::Stub"],"description":""}]},{"id":"project_path-class","type":"class","name":"project_path","title":["Google","Cloud","Pubsub","V1","SubscriberApi.project_path"],"description":"<p>Returns a fully-qualified project resource name string.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L93","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"subscription_path-class","type":"class","name":"subscription_path","title":["Google","Cloud","Pubsub","V1","SubscriberApi.subscription_path"],"description":"<p>Returns a fully-qualified subscription resource name string.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L103","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"subscription","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"topic_path-class","type":"class","name":"topic_path","title":["Google","Cloud","Pubsub","V1","SubscriberApi.topic_path"],"description":"<p>Returns a fully-qualified topic resource name string.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L114","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"topic","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_project_from_project_name-class","type":"class","name":"match_project_from_project_name","title":["Google","Cloud","Pubsub","V1","SubscriberApi.match_project_from_project_name"],"description":"<p>Parses the project from a project resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L124","resources":[],"examples":[],"params":[{"name":"project_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_project_from_subscription_name-class","type":"class","name":"match_project_from_subscription_name","title":["Google","Cloud","Pubsub","V1","SubscriberApi.match_project_from_subscription_name"],"description":"<p>Parses the project from a subscription resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L131","resources":[],"examples":[],"params":[{"name":"subscription_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_subscription_from_subscription_name-class","type":"class","name":"match_subscription_from_subscription_name","title":["Google","Cloud","Pubsub","V1","SubscriberApi.match_subscription_from_subscription_name"],"description":"<p>Parses the subscription from a subscription resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L138","resources":[],"examples":[],"params":[{"name":"subscription_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_project_from_topic_name-class","type":"class","name":"match_project_from_topic_name","title":["Google","Cloud","Pubsub","V1","SubscriberApi.match_project_from_topic_name"],"description":"<p>Parses the project from a topic resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L145","resources":[],"examples":[],"params":[{"name":"topic_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_topic_from_topic_name-class","type":"class","name":"match_topic_from_topic_name","title":["Google","Cloud","Pubsub","V1","SubscriberApi.match_topic_from_topic_name"],"description":"<p>Parses the topic from a topic resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L152","resources":[],"examples":[],"params":[{"name":"topic_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Pubsub","V1","SubscriberApi#initialize"],"description":"","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L175","resources":[],"examples":[],"params":[{"name":"service_path","types":["String"],"description":"The domain name of the API remote host.","optional":true,"default":"SERVICE_ADDRESS","nullable":false},{"name":"port","types":["Integer"],"description":"The port on which to connect to the remote host.","optional":true,"default":"DEFAULT_SERVICE_PORT","nullable":false},{"name":"channel","types":["Channel"],"description":"A Channel object through which to make calls.","optional":true,"default":"nil","nullable":true},{"name":"chan_creds","types":["Grpc::ChannelCredentials"],"description":"A ChannelCredentials for the setting up the RPC client.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"app_name","types":["String"],"description":"The codename of the calling service.","optional":true,"default":"\"gax\"","nullable":false},{"name":"app_version","types":["String"],"description":"The version of the calling service.","optional":true,"default":"Google::Gax::VERSION","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/v1/subscriberapi\">SubscriberApi</a>"],"description":"a new instance of SubscriberApi"}]},{"id":"create_subscription-instance","type":"instance","name":"create_subscription","title":["Google","Cloud","Pubsub","V1","SubscriberApi#create_subscription"],"description":"<p>Creates a subscription to a given topic.\nIf the subscription already exists, returns +ALREADY_EXISTS+.\nIf the corresponding topic doesn’t exist, returns +NOT_FOUND+.</p>\n\n<p>If the name is not provided in the request, the server will assign a random\nname for this subscription on the same project as the topic. Note that\nfor REST API requests, you must specify a name.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L334","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_name = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nformatted_topic = SubscriberApi.topic_path(\"[PROJECT]\", \"[TOPIC]\")\nresponse = subscriber_api.create_subscription(formatted_name, formatted_topic)"}],"params":[{"name":"name","types":["String"],"description":"The name of the subscription. It must have the format\n+”projects/project/subscriptions/subscription”+. +subscription+ must\nstart with a letter, and contain only letters (+[A-Za-z]+), numbers\n(+[0-9]+), dashes (+-+), underscores (+_+), periods (+.+), tildes (+~+),\nplus (+++) or percent signs (+%+). It must be between 3 and 255 characters\nin length, and it must not start with +”goog”+.","optional":false,"nullable":false},{"name":"topic","types":["String"],"description":"The name of the topic from which this subscription is receiving messages.\nThe value of this field will be +<em>deleted-topic</em>+ if the topic has been\ndeleted.","optional":false,"nullable":false},{"name":"push_config","types":["Google::Pubsub::V1::PushConfig"],"description":"If push delivery is used with this subscription, this field is\nused to configure it. An empty +pushConfig+ signifies that the subscriber\nwill pull and ack messages using API methods.","optional":true,"default":"nil","nullable":true},{"name":"ack_deadline_seconds","types":["Integer"],"description":"This value is the maximum time after a subscriber receives a message\nbefore the subscriber should acknowledge the message. After message\ndelivery but before the ack deadline expires and before the message is\nacknowledged, it is an outstanding message and will not be delivered\nagain during that time (on a best-effort basis).</p>\n\n<p>For pull subscriptions, this value is used as the initial value for the ack\ndeadline. To override this value for a given message, call\n+ModifyAckDeadline+ with the corresponding +ack_id+ if using\npull.\nThe maximum custom deadline you can specify is 600 seconds (10 minutes).</p>\n\n<p>For push delivery, this value is also used to set the request timeout for\nthe call to the push endpoint.</p>\n\n<p>If the subscriber never acknowledges the message, the Pub/Sub\nsystem will eventually redeliver the message.</p>\n\n<p>If this parameter is 0, a default value of 10 seconds is used.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/subscription\">Google::Pubsub::V1::Subscription</a>"],"description":""}]},{"id":"get_subscription-instance","type":"instance","name":"get_subscription","title":["Google","Cloud","Pubsub","V1","SubscriberApi#get_subscription"],"description":"<p>Gets the configuration details of a subscription.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L367","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_subscription = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nresponse = subscriber_api.get_subscription(formatted_subscription)"}],"params":[{"name":"subscription","types":["String"],"description":"The name of the subscription to get.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/subscription\">Google::Pubsub::V1::Subscription</a>"],"description":""}]},{"id":"list_subscriptions-instance","type":"instance","name":"list_subscriptions","title":["Google","Cloud","Pubsub","V1","SubscriberApi#list_subscriptions"],"description":"<p>Lists matching subscriptions.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L416","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_project = SubscriberApi.project_path(\"[PROJECT]\")\n\n# Iterate over all results.\nsubscriber_api.list_subscriptions(formatted_project).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\nsubscriber_api.list_subscriptions(formatted_project).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"project","types":["String"],"description":"The name of the cloud project that subscriptions belong to.","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/pubsub/v1/subscription\">Google::Pubsub::V1::Subscription</a>&gt;"],"description":"An enumerable of Google::Pubsub::V1::Subscription instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"delete_subscription-instance","type":"instance","name":"delete_subscription","title":["Google","Cloud","Pubsub","V1","SubscriberApi#delete_subscription"],"description":"<p>Deletes an existing subscription. All pending messages in the subscription\nare immediately dropped. Calls to +Pull+ after deletion will return\n+NOT_FOUND+. After a subscription is deleted, a new one may be created with\nthe same name, but the new one has no association with the old\nsubscription, or its topic unless the same topic is specified.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L448","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_subscription = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nsubscriber_api.delete_subscription(formatted_subscription)"}],"params":[{"name":"subscription","types":["String"],"description":"The subscription to delete.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"modify_ack_deadline-instance","type":"instance","name":"modify_ack_deadline","title":["Google","Cloud","Pubsub","V1","SubscriberApi#modify_ack_deadline"],"description":"<p>Modifies the ack deadline for a specific message. This method is useful\nto indicate that more time is needed to process a message by the\nsubscriber, or to make the message available for redelivery if the\nprocessing was interrupted. Note that this does not modify the\nsubscription-level +ackDeadlineSeconds+ used for subsequent messages.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L489","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_subscription = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nack_ids = []\nack_deadline_seconds = 0\nsubscriber_api.modify_ack_deadline(formatted_subscription, ack_ids, ack_deadline_seconds)"}],"params":[{"name":"subscription","types":["String"],"description":"The name of the subscription.","optional":false,"nullable":false},{"name":"ack_ids","types":["Array<String>"],"description":"List of acknowledgment IDs.","optional":false,"nullable":false},{"name":"ack_deadline_seconds","types":["Integer"],"description":"The new ack deadline with respect to the time this request was sent to\nthe Pub/Sub system. Must be &gt;= 0. For example, if the value is 10, the new\nack deadline will expire 10 seconds after the +ModifyAckDeadline+ call\nwas made. Specifying zero may immediately make the message available for\nanother pull request.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"acknowledge-instance","type":"instance","name":"acknowledge","title":["Google","Cloud","Pubsub","V1","SubscriberApi#acknowledge"],"description":"<p>Acknowledges the messages associated with the +ack_ids+ in the\n+AcknowledgeRequest+. The Pub/Sub system can remove the relevant messages\nfrom the subscription.</p>\n\n<p>Acknowledging a message whose ack deadline has expired may succeed,\nbut such a message may be redelivered later. Acknowledging a message more\nthan once will not result in an error.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L530","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_subscription = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nack_ids = []\nsubscriber_api.acknowledge(formatted_subscription, ack_ids)"}],"params":[{"name":"subscription","types":["String"],"description":"The subscription whose message is being acknowledged.","optional":false,"nullable":false},{"name":"ack_ids","types":["Array<String>"],"description":"The acknowledgment ID for the messages being acknowledged that was returned\nby the Pub/Sub system in the +Pull+ response. Must not be empty.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"pull-instance","type":"instance","name":"pull","title":["Google","Cloud","Pubsub","V1","SubscriberApi#pull"],"description":"<p>Pulls messages from the server. Returns an empty list if there are no\nmessages available in the backlog. The server may return +UNAVAILABLE+ if\nthere are too many concurrent pull requests pending for the given\nsubscription.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L573","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_subscription = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nmax_messages = 0\nresponse = subscriber_api.pull(formatted_subscription, max_messages)"}],"params":[{"name":"subscription","types":["String"],"description":"The subscription from which messages should be pulled.","optional":false,"nullable":false},{"name":"return_immediately","types":["true","false"],"description":"If this is specified as true the system will respond immediately even if\nit is not able to return a message in the +Pull+ response. Otherwise the\nsystem is allowed to wait until at least one message is available rather\nthan returning no messages. The client may cancel the request if it does\nnot wish to wait any longer for the response.","optional":true,"default":"nil","nullable":true},{"name":"max_messages","types":["Integer"],"description":"The maximum number of messages returned for this request. The Pub/Sub\nsystem may return fewer than the number specified.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/pullresponse\">Google::Pubsub::V1::PullResponse</a>"],"description":""}]},{"id":"modify_push_config-instance","type":"instance","name":"modify_push_config","title":["Google","Cloud","Pubsub","V1","SubscriberApi#modify_push_config"],"description":"<p>Modifies the +PushConfig+ for a specified subscription.</p>\n\n<p>This may be used to change a push subscription to a pull one (signified by\nan empty +PushConfig+) or vice versa, or change the endpoint URL and other\nattributes of a push subscription. Messages will accumulate for delivery\ncontinuously through the call regardless of changes to the +PushConfig+.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L617","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nPushConfig = Google::Pubsub::V1::PushConfig\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_subscription = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\npush_config = PushConfig.new\nsubscriber_api.modify_push_config(formatted_subscription, push_config)"}],"params":[{"name":"subscription","types":["String"],"description":"The name of the subscription.","optional":false,"nullable":false},{"name":"push_config","types":["Google::Pubsub::V1::PushConfig"],"description":"The push configuration for future deliveries.</p>\n\n<p>An empty +pushConfig+ indicates that the Pub/Sub system should\nstop pushing messages from the given subscription and allow\nmessages to be pulled and acknowledged - effectively pausing\nthe subscription if +Pull+ is not called.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"set_iam_policy-instance","type":"instance","name":"set_iam_policy","title":["Google","Cloud","Pubsub","V1","SubscriberApi#set_iam_policy"],"description":"<p>Sets the access control policy on the specified resource. Replaces any\nexisting policy.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L657","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nPolicy = Google::Iam::V1::Policy\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_resource = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\npolicy = Policy.new\nresponse = subscriber_api.set_iam_policy(formatted_resource, policy)"}],"params":[{"name":"resource","types":["String"],"description":"REQUIRED: The resource for which the policy is being specified.\n+resource+ is usually specified as a path. For example, a Project\nresource is specified as +projects/project+.","optional":false,"nullable":false},{"name":"policy","types":["Google::Iam::V1::Policy"],"description":"REQUIRED: The complete policy to be applied to the +resource+. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Iam::V1::Policy"],"description":""}]},{"id":"get_iam_policy-instance","type":"instance","name":"get_iam_policy","title":["Google","Cloud","Pubsub","V1","SubscriberApi#get_iam_policy"],"description":"<p>Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L690","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_resource = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nresponse = subscriber_api.get_iam_policy(formatted_resource)"}],"params":[{"name":"resource","types":["String"],"description":"REQUIRED: The resource for which the policy is being requested.\n+resource+ is usually specified as a path. For example, a Project\nresource is specified as +projects/project+.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Iam::V1::Policy"],"description":""}]},{"id":"test_iam_permissions-instance","type":"instance","name":"test_iam_permissions","title":["Google","Cloud","Pubsub","V1","SubscriberApi#test_iam_permissions"],"description":"<p>Returns permissions that a caller has on the specified resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_api.rb#L725","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_api\"\n\nSubscriberApi = Google::Cloud::Pubsub::V1::SubscriberApi\n\nsubscriber_api = SubscriberApi.new\nformatted_resource = SubscriberApi.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\npermissions = []\nresponse = subscriber_api.test_iam_permissions(formatted_resource, permissions)"}],"params":[{"name":"resource","types":["String"],"description":"REQUIRED: The resource for which the policy detail is being requested.\n+resource+ is usually specified as a path. For example, a Project\nresource is specified as +projects/project+.","optional":false,"nullable":false},{"name":"permissions","types":["Array<String>"],"description":"The set of permissions to check for the +resource+. Permissions with\nwildcards (such as ‘<em>’ or ‘storage.</em>’) are not allowed. For more\ninformation see\nIAM[https://cloud.google.com/iam/docs/overview#permissions].","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Iam::V1::TestIamPermissionsResponse"],"description":""}]}]}