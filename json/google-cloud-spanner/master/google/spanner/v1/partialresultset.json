{"id":"google/spanner/v1/partialresultset","name":"PartialResultSet","title":["Google","Spanner","V1","PartialResultSet"],"description":"<p>Partial results from a streaming read or SQL query. Streaming reads and\nSQL queries better tolerate large result sets, large rows, and large\nvalues, but are a little trickier to consume.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"methods":[{"id":"metadata-instance","type":"instance","name":"metadata","title":["Google","Spanner","V1","PartialResultSet#metadata"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/resultsetmetadata\">Google::Spanner::V1::ResultSetMetadata</a>"],"description":"Metadata about the result set, such as row type information.\nOnly present in the first response."}]},{"id":"metadata=-instance","type":"instance","name":"metadata=","title":["Google","Spanner","V1","PartialResultSet#metadata="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/resultsetmetadata\">Google::Spanner::V1::ResultSetMetadata</a>"],"description":"Metadata about the result set, such as row type information.\nOnly present in the first response."}]},{"id":"values-instance","type":"instance","name":"values","title":["Google","Spanner","V1","PartialResultSet#values"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/protobuf/value\">Google::Protobuf::Value</a>&gt;"],"description":"A streamed result set consists of a stream of values, which might\nbe split into many +PartialResultSet+ messages to accommodate\nlarge rows and/or large values. Every N complete values defines a\nrow, where N is equal to the number of entries in\nGoogle::Spanner::V1::StructType#fields.</p>\n\n<p>Most values are encoded based on type as described\n<a data-custom-type=\"google/spanner/v1/typecode\">here</a>.</p>\n\n<p>It is possible that the last value in values is “chunked”,\nmeaning that the rest of the value is sent in subsequent\n+PartialResultSet+(s). This is denoted by the Google::Spanner::V1::PartialResultSet#chunked_value\nfield. Two or more chunked values can be merged to form a\ncomplete value as follows:</p>\n\n<ul>\n  <li>+bool/number/null+: cannot be chunked\n    <ul>\n      <li>+string+: concatenate the strings</li>\n      <li>+list+: concatenate the lists. If the last element in a list is a\n+string+, +list+, or +object+, merge it with the first element in\nthe next list by applying these rules recursively.</li>\n      <li>+object+: concatenate the (field name, field value) pairs. If a\nfield name is duplicated, then apply these rules recursively\nto merge the field values.</li>\n    </ul>\n\n    <p>Some examples of merging:</p>\n\n    <p>= Strings are concatenated.\n“foo”, “bar” =&gt; “foobar”</p>\n\n    <p>= Lists of non-strings are concatenated.\n[2, 3], [4] =&gt; [2, 3, 4]</p>\n\n    <p>= Lists are concatenated, but the last and first elements are merged\n= because they are strings.\n[“a”, “b”], [“c”, “d”] =&gt; [“a”, “bc”, “d”]</p>\n\n    <p>= Lists are concatenated, but the last and first elements are merged\n= because they are lists. Recursively, the last and first elements\n= of the inner lists are merged because they are strings.\n[“a”, [“b”, “c”]], [[“d”], “e”] =&gt; [“a”, [“b”, “cd”], “e”]</p>\n\n    <p>= Non-overlapping object fields are combined.\n“a”:, “b”: =&gt; “a”:</p>\n\n    <p>= Overlapping object fields are merged.\n“a”:, “a”: =&gt; “a”:</p>\n\n    <p>= Examples of merging objects containing lists of strings.\n“a”:, “a”: =&gt; “a”:</p>\n  </li>\n</ul>\n\n<p>For a more complete example, suppose a streaming SQL query is\nyielding a result set whose rows contain a single string\nfield. The following +PartialResultSet+s might be yielded:</p>\n\n<pre><code>{\n  \"metadata\": { ... }\n  \"values\": [\"Hello\", \"W\"]\n  \"chunked_value\": true\n  \"resume_token\": \"Af65...\"\n}\n{\n  \"values\": [\"orl\"]\n  \"chunked_value\": true\n  \"resume_token\": \"Bqp2...\"\n}\n{\n  \"values\": [\"d\"]\n  \"resume_token\": \"Zx1B...\"\n}\n</code></pre>\n\n<p>This sequence of +PartialResultSet+s encodes two rows, one\ncontaining the field value +”Hello”+, and a second containing the\nfield value +”World” = “W” + “orl” + “d”+."}]},{"id":"values=-instance","type":"instance","name":"values=","title":["Google","Spanner","V1","PartialResultSet#values="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/protobuf/value\">Google::Protobuf::Value</a>&gt;"],"description":"A streamed result set consists of a stream of values, which might\nbe split into many +PartialResultSet+ messages to accommodate\nlarge rows and/or large values. Every N complete values defines a\nrow, where N is equal to the number of entries in\nGoogle::Spanner::V1::StructType#fields.</p>\n\n<p>Most values are encoded based on type as described\n<a data-custom-type=\"google/spanner/v1/typecode\">here</a>.</p>\n\n<p>It is possible that the last value in values is “chunked”,\nmeaning that the rest of the value is sent in subsequent\n+PartialResultSet+(s). This is denoted by the Google::Spanner::V1::PartialResultSet#chunked_value\nfield. Two or more chunked values can be merged to form a\ncomplete value as follows:</p>\n\n<ul>\n  <li>+bool/number/null+: cannot be chunked\n    <ul>\n      <li>+string+: concatenate the strings</li>\n      <li>+list+: concatenate the lists. If the last element in a list is a\n+string+, +list+, or +object+, merge it with the first element in\nthe next list by applying these rules recursively.</li>\n      <li>+object+: concatenate the (field name, field value) pairs. If a\nfield name is duplicated, then apply these rules recursively\nto merge the field values.</li>\n    </ul>\n\n    <p>Some examples of merging:</p>\n\n    <p>= Strings are concatenated.\n“foo”, “bar” =&gt; “foobar”</p>\n\n    <p>= Lists of non-strings are concatenated.\n[2, 3], [4] =&gt; [2, 3, 4]</p>\n\n    <p>= Lists are concatenated, but the last and first elements are merged\n= because they are strings.\n[“a”, “b”], [“c”, “d”] =&gt; [“a”, “bc”, “d”]</p>\n\n    <p>= Lists are concatenated, but the last and first elements are merged\n= because they are lists. Recursively, the last and first elements\n= of the inner lists are merged because they are strings.\n[“a”, [“b”, “c”]], [[“d”], “e”] =&gt; [“a”, [“b”, “cd”], “e”]</p>\n\n    <p>= Non-overlapping object fields are combined.\n“a”:, “b”: =&gt; “a”:</p>\n\n    <p>= Overlapping object fields are merged.\n“a”:, “a”: =&gt; “a”:</p>\n\n    <p>= Examples of merging objects containing lists of strings.\n“a”:, “a”: =&gt; “a”:</p>\n  </li>\n</ul>\n\n<p>For a more complete example, suppose a streaming SQL query is\nyielding a result set whose rows contain a single string\nfield. The following +PartialResultSet+s might be yielded:</p>\n\n<pre><code>{\n  \"metadata\": { ... }\n  \"values\": [\"Hello\", \"W\"]\n  \"chunked_value\": true\n  \"resume_token\": \"Af65...\"\n}\n{\n  \"values\": [\"orl\"]\n  \"chunked_value\": true\n  \"resume_token\": \"Bqp2...\"\n}\n{\n  \"values\": [\"d\"]\n  \"resume_token\": \"Zx1B...\"\n}\n</code></pre>\n\n<p>This sequence of +PartialResultSet+s encodes two rows, one\ncontaining the field value +”Hello”+, and a second containing the\nfield value +”World” = “W” + “orl” + “d”+."}]},{"id":"chunked_value-instance","type":"instance","name":"chunked_value","title":["Google","Spanner","V1","PartialResultSet#chunked_value"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["true","false"],"description":"If true, then the final value in Google::Spanner::V1::PartialResultSet#values is chunked, and must\nbe combined with more values from subsequent +PartialResultSet+s\nto obtain a complete field value."}]},{"id":"chunked_value=-instance","type":"instance","name":"chunked_value=","title":["Google","Spanner","V1","PartialResultSet#chunked_value="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["true","false"],"description":"If true, then the final value in Google::Spanner::V1::PartialResultSet#values is chunked, and must\nbe combined with more values from subsequent +PartialResultSet+s\nto obtain a complete field value."}]},{"id":"resume_token-instance","type":"instance","name":"resume_token","title":["Google","Spanner","V1","PartialResultSet#resume_token"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"Streaming calls might be interrupted for a variety of reasons, such\nas TCP connection loss. If this occurs, the stream of results can\nbe resumed by re-sending the original request and including\n+resume_token+. Note that executing any other transaction in the\nsame session invalidates the token."}]},{"id":"resume_token=-instance","type":"instance","name":"resume_token=","title":["Google","Spanner","V1","PartialResultSet#resume_token="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"Streaming calls might be interrupted for a variety of reasons, such\nas TCP connection loss. If this occurs, the stream of results can\nbe resumed by re-sending the original request and including\n+resume_token+. Note that executing any other transaction in the\nsame session invalidates the token."}]},{"id":"stats-instance","type":"instance","name":"stats","title":["Google","Spanner","V1","PartialResultSet#stats"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/resultsetstats\">Google::Spanner::V1::ResultSetStats</a>"],"description":"Query plan and execution statistics for the query that produced this\nstreaming result set. These can be requested by setting\nGoogle::Spanner::V1::ExecuteSqlRequest#query_mode and are sent\nonly once with the last response in the stream."}]},{"id":"stats=-instance","type":"instance","name":"stats=","title":["Google","Spanner","V1","PartialResultSet#stats="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/result_set.rb#L138","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/resultsetstats\">Google::Spanner::V1::ResultSetStats</a>"],"description":"Query plan and execution statistics for the query that produced this\nstreaming result set. These can be requested by setting\nGoogle::Spanner::V1::ExecuteSqlRequest#query_mode and are sent\nonly once with the last response in the stream."}]}]}