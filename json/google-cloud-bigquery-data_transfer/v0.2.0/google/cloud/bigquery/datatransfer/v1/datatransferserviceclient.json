{"id":"google/cloud/bigquery/datatransfer/v1/datatransferserviceclient","name":"DataTransferServiceClient","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient"],"description":"<p>The Google BigQuery Data Transfer Service API enables BigQuery users to\nconfigure the transfer of their data from other Google Products into BigQuery.\nThis service contains methods that are end user exposed. It backs up the\nfrontend.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L42","resources":[],"examples":[],"methods":[{"id":"data_transfer_service_stub-instance","type":"instance","name":"data_transfer_service_stub","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#data_transfer_service_stub"],"description":"","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L42","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Cloud::Bigquery::Datatransfer::V1::DataTransferService::Stub"],"description":""}]},{"id":"project_data_source_path-class","type":"class","name":"project_data_source_path","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient.project_data_source_path"],"description":"<p>Returns a fully-qualified project_data_source resource name string.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L112","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"data_source","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"project_path-class","type":"class","name":"project_path","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient.project_path"],"description":"<p>Returns a fully-qualified project resource name string.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L122","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"project_transfer_config_path-class","type":"class","name":"project_transfer_config_path","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient.project_transfer_config_path"],"description":"<p>Returns a fully-qualified project_transfer_config resource name string.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L132","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"transfer_config","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"project_run_path-class","type":"class","name":"project_run_path","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient.project_run_path"],"description":"<p>Returns a fully-qualified project_run resource name string.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L144","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"transfer_config","types":["String"],"description":"","optional":false,"nullable":false},{"name":"run","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#initialize"],"description":"","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L181","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/datatransferserviceclient\">DataTransferServiceClient</a>"],"description":"a new instance of DataTransferServiceClient"}]},{"id":"get_data_source-instance","type":"instance","name":"get_data_source","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#get_data_source"],"description":"<p>Retrieves a supported data source and returns its settings,\nwhich can be used for UI rendering.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L384","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_name = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_data_source_path(\"[PROJECT]\", \"[DATA_SOURCE]\")\nresponse = data_transfer_service_client.get_data_source(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The field will contain name of the resource requested, for example:\n+projects/project_id/dataSources/data_source_id+","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Bigquery::Datatransfer::V1::DataSource"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/datasource\">Google::Cloud::Bigquery::Datatransfer::V1::DataSource</a>"],"description":""}]},{"id":"list_data_sources-instance","type":"instance","name":"list_data_sources","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#list_data_sources"],"description":"<p>Lists supported data sources and returns their settings,\nwhich can be used for UI rendering.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L438","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_parent = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_path(\"[PROJECT]\")\n\n# Iterate over all results.\ndata_transfer_service_client.list_data_sources(formatted_parent).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\ndata_transfer_service_client.list_data_sources(formatted_parent).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"parent","types":["String"],"description":"The BigQuery project id for which data sources should be returned.\nMust be in the form: +projects/project_id+","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Cloud::Bigquery::Datatransfer::V1::DataSource>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/datasource\">Google::Cloud::Bigquery::Datatransfer::V1::DataSource</a>&gt;"],"description":"An enumerable of Google::Cloud::Bigquery::Datatransfer::V1::DataSource instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"create_transfer_config-instance","type":"instance","name":"create_transfer_config","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#create_transfer_config"],"description":"<p>Creates a new data transfer configuration.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L497","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_parent = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_path(\"[PROJECT]\")\n\n# TODO: Initialize +transfer_config+:\ntransfer_config = {}\nresponse = data_transfer_service_client.create_transfer_config(formatted_parent, transfer_config)"}],"params":[{"name":"parent","types":["String"],"description":"The BigQuery project id where the transfer configuration should be created.\nMust be in the format /projects/project_id/locations/location_id\nIf specified location and location of the destination bigquery dataset\ndo not match - the request will fail.","optional":false,"nullable":false},{"name":"transfer_config","types":["Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig | Hash"],"description":"Data transfer configuration to create.\nA hash of the same form as <code>Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"authorization_code","types":["String"],"description":"Optional OAuth2 authorization code to use with this transfer configuration.\nThis is required if new credentials are needed, as indicated by\n+CheckValidCreds+.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=<datatransferapiclientid>&amp;scope=<data_source_scopes>&amp;redirect_uri=<redirect_uri></redirect_uri></data_source_scopes></datatransferapiclientid></p>\n\n<ul>\n  <li>client_id should be OAuth client_id of BigQuery DTS API for the given\ndata source returned by ListDataSources method.</li>\n  <li>data_source_scopes are the scopes returned by ListDataSources method.</li>\n  <li>redirect_uri is an optional parameter. If not specified, then\nauthorization code is posted to the opener of authorization flow window.\nOtherwise it will be sent to the redirect uri. A special value of\nurn:ietf:wg:oauth:2.0:oob means that authorization code should be\nreturned in the title bar of the browser, with the page text prompting\nthe user to copy the code and paste it in the application.</li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/transferconfig\">Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig</a>"],"description":""}]},{"id":"update_transfer_config-instance","type":"instance","name":"update_transfer_config","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#update_transfer_config"],"description":"<p>Updates a data transfer configuration.\nAll fields must be set, even if they are not updated.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L560","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\n\n# TODO: Initialize +transfer_config+:\ntransfer_config = {}\n\n# TODO: Initialize +update_mask+:\nupdate_mask = {}\nresponse = data_transfer_service_client.update_transfer_config(transfer_config, update_mask)"}],"params":[{"name":"transfer_config","types":["Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig | Hash"],"description":"Data transfer configuration to create.\nA hash of the same form as <code>Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"update_mask","types":["Google::Protobuf::FieldMask | Hash"],"description":"Required list of fields to be updated in this request.\nA hash of the same form as <code>Google::Protobuf::FieldMask</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"authorization_code","types":["String"],"description":"Optional OAuth2 authorization code to use with this transfer configuration.\nIf it is provided, the transfer configuration will be associated with the\nauthorizing user.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=<datatransferapiclientid>&amp;scope=<data_source_scopes>&amp;redirect_uri=<redirect_uri></redirect_uri></data_source_scopes></datatransferapiclientid></p>\n\n<ul>\n  <li>client_id should be OAuth client_id of BigQuery DTS API for the given\ndata source returned by ListDataSources method.</li>\n  <li>data_source_scopes are the scopes returned by ListDataSources method.</li>\n  <li>redirect_uri is an optional parameter. If not specified, then\nauthorization code is posted to the opener of authorization flow window.\nOtherwise it will be sent to the redirect uri. A special value of\nurn:ietf:wg:oauth:2.0:oob means that authorization code should be\nreturned in the title bar of the browser, with the page text prompting\nthe user to copy the code and paste it in the application.</li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/transferconfig\">Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig</a>"],"description":""}]},{"id":"delete_transfer_config-instance","type":"instance","name":"delete_transfer_config","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#delete_transfer_config"],"description":"<p>Deletes a data transfer configuration,\nincluding any associated transfer runs and logs.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L595","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_name = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_transfer_config_path(\"[PROJECT]\", \"[TRANSFER_CONFIG]\")\ndata_transfer_service_client.delete_transfer_config(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The field will contain name of the resource requested, for example:\n+projects/project_id/transferConfigs/config_id+","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":null,"description":"[]","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"get_transfer_config-instance","type":"instance","name":"get_transfer_config","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#get_transfer_config"],"description":"<p>Returns information about a data transfer config.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L627","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_name = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_transfer_config_path(\"[PROJECT]\", \"[TRANSFER_CONFIG]\")\nresponse = data_transfer_service_client.get_transfer_config(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The field will contain name of the resource requested, for example:\n+projects/project_id/transferConfigs/config_id+","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/transferconfig\">Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig</a>"],"description":""}]},{"id":"list_transfer_configs-instance","type":"instance","name":"list_transfer_configs","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#list_transfer_configs"],"description":"<p>Returns information about all data transfers in the project.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L682","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_parent = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_path(\"[PROJECT]\")\n\n# Iterate over all results.\ndata_transfer_service_client.list_transfer_configs(formatted_parent).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\ndata_transfer_service_client.list_transfer_configs(formatted_parent).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"parent","types":["String"],"description":"The BigQuery project id for which data sources\nshould be returned: +projects/project_id+.","optional":false,"nullable":false},{"name":"data_source_ids","types":["Array<String>"],"description":"When specified, only configurations of requested data sources are returned.","optional":true,"default":"nil","nullable":true},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/transferconfig\">Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig</a>&gt;"],"description":"An enumerable of Google::Cloud::Bigquery::Datatransfer::V1::TransferConfig instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"schedule_transfer_runs-instance","type":"instance","name":"schedule_transfer_runs","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#schedule_transfer_runs"],"description":"<p>Creates transfer runs for a time range [start_time, end_time].\nFor each date - or whatever granularity the data source supports - in the\nrange, one transfer run is created.\nNote that runs are created per UTC time in the time range.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L736","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_parent = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_transfer_config_path(\"[PROJECT]\", \"[TRANSFER_CONFIG]\")\n\n# TODO: Initialize +start_time+:\nstart_time = {}\n\n# TODO: Initialize +end_time+:\nend_time = {}\nresponse = data_transfer_service_client.schedule_transfer_runs(formatted_parent, start_time, end_time)"}],"params":[{"name":"parent","types":["String"],"description":"Transfer configuration name in the form:\n+projects/project_id/transferConfigs/config_id+.","optional":false,"nullable":false},{"name":"start_time","types":["Google::Protobuf::Timestamp | Hash"],"description":"Start time of the range of transfer runs. For example,\n+”2017-05-25T00:00:00+00:00”+.\nA hash of the same form as <code>Google::Protobuf::Timestamp</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"end_time","types":["Google::Protobuf::Timestamp | Hash"],"description":"End time of the range of transfer runs. For example,\n+”2017-05-30T00:00:00+00:00”+.\nA hash of the same form as <code>Google::Protobuf::Timestamp</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Bigquery::Datatransfer::V1::ScheduleTransferRunsResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/scheduletransferrunsresponse\">Google::Cloud::Bigquery::Datatransfer::V1::ScheduleTransferRunsResponse</a>"],"description":""}]},{"id":"get_transfer_run-instance","type":"instance","name":"get_transfer_run","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#get_transfer_run"],"description":"<p>Returns information about the particular transfer run.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L771","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_name = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_run_path(\"[PROJECT]\", \"[TRANSFER_CONFIG]\", \"[RUN]\")\nresponse = data_transfer_service_client.get_transfer_run(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The field will contain name of the resource requested, for example:\n+projects/project_id/transferConfigs/config_id/runs/run_id+","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Bigquery::Datatransfer::V1::TransferRun"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/transferrun\">Google::Cloud::Bigquery::Datatransfer::V1::TransferRun</a>"],"description":""}]},{"id":"delete_transfer_run-instance","type":"instance","name":"delete_transfer_run","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#delete_transfer_run"],"description":"<p>Deletes the specified transfer run.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L801","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_name = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_run_path(\"[PROJECT]\", \"[TRANSFER_CONFIG]\", \"[RUN]\")\ndata_transfer_service_client.delete_transfer_run(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The field will contain name of the resource requested, for example:\n+projects/project_id/transferConfigs/config_id/runs/run_id+","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":null,"description":"[]","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"list_transfer_runs-instance","type":"instance","name":"list_transfer_runs","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#list_transfer_runs"],"description":"<p>Returns information about running and completed jobs.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L860","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_parent = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_transfer_config_path(\"[PROJECT]\", \"[TRANSFER_CONFIG]\")\n\n# Iterate over all results.\ndata_transfer_service_client.list_transfer_runs(formatted_parent).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\ndata_transfer_service_client.list_transfer_runs(formatted_parent).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"parent","types":["String"],"description":"Name of transfer configuration for which transfer runs should be retrieved.\nFormat of transfer configuration resource name is:\n+projects/project_id/transferConfigs/config_id+.","optional":false,"nullable":false},{"name":"states","types":["Array<Google::Cloud::Bigquery::Datatransfer::V1::TransferState>"],"description":"When specified, only transfer runs with requested states are returned.","optional":true,"default":"nil","nullable":true},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"run_attempt","types":["Google::Cloud::Bigquery::Datatransfer::V1::ListTransferRunsRequest::RunAttempt"],"description":"Indicates how run attempts are to be pulled.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Cloud::Bigquery::Datatransfer::V1::TransferRun>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/transferrun\">Google::Cloud::Bigquery::Datatransfer::V1::TransferRun</a>&gt;"],"description":"An enumerable of Google::Cloud::Bigquery::Datatransfer::V1::TransferRun instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"list_transfer_logs-instance","type":"instance","name":"list_transfer_logs","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#list_transfer_logs"],"description":"<p>Returns user facing log messages for the data transfer run.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L922","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_parent = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_run_path(\"[PROJECT]\", \"[TRANSFER_CONFIG]\", \"[RUN]\")\n\n# Iterate over all results.\ndata_transfer_service_client.list_transfer_logs(formatted_parent).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\ndata_transfer_service_client.list_transfer_logs(formatted_parent).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"parent","types":["String"],"description":"Transfer run name in the form:\n+projects/project_id/transferConfigs/config_Id/runs/run_id+.","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"message_types","types":["Array<Google::Cloud::Bigquery::Datatransfer::V1::TransferMessage::MessageSeverity>"],"description":"Message types to return. If not populated - INFO, WARNING and ERROR\nmessages are returned.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Cloud::Bigquery::Datatransfer::V1::TransferMessage>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/transfermessage\">Google::Cloud::Bigquery::Datatransfer::V1::TransferMessage</a>&gt;"],"description":"An enumerable of Google::Cloud::Bigquery::Datatransfer::V1::TransferMessage instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"check_valid_creds-instance","type":"instance","name":"check_valid_creds","title":["Google","Cloud","Bigquery","DataTransfer","V1","DataTransferServiceClient#check_valid_creds"],"description":"<p>Returns true if valid credentials exist for the given data source and\nrequesting user.\nSome data sources doesn’t support service account, so we need to talk to\nthem on behalf of the end user. This API just checks whether we have OAuth\ntoken for the particular user, which is a pre-requisite before user can\ncreate a transfer config.</p>","source":"google-cloud-bigquery-data_transfer/lib/google/cloud/bigquery/data_transfer/v1/data_transfer_service_client.rb#L962","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery/data_transfer\"\n\ndata_transfer_service_client = Google::Cloud::Bigquery::DataTransfer.new(version: :v1)\nformatted_name = Google::Cloud::Bigquery::DataTransfer::V1::DataTransferServiceClient.project_data_source_path(\"[PROJECT]\", \"[DATA_SOURCE]\")\nresponse = data_transfer_service_client.check_valid_creds(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The data source in the form:\n+projects/project_id/dataSources/data_source_id+","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Bigquery::Datatransfer::V1::CheckValidCredsResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/datatransfer/v1/checkvalidcredsresponse\">Google::Cloud::Bigquery::Datatransfer::V1::CheckValidCredsResponse</a>"],"description":""}]}]}