{"id":"google/cloud/bigquery/data","name":"Data","title":["Google","Cloud","Bigquery","Data"],"description":"<h1 id=\"data\">Data</h1>\n\n<p>Represents a page of results (rows) as an array of hashes. Because Data\ndelegates to Array, methods such as <code>Array#count</code> represent the number\nof rows in the page. In addition, methods of this class include result\nset metadata such as <code>total</code> and provide access to the schema of the\nquery or table. See <a data-custom-type=\"google/cloud/bigquery/project\" data-method=\"query-instance\">Project#query</a>, <a data-custom-type=\"google/cloud/bigquery/dataset\" data-method=\"query-instance\">Dataset#query</a> and <a data-custom-type=\"google/cloud/bigquery/table\" data-method=\"data-instance\">Table#data</a>.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L49","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nsql = \"SELECT word FROM `bigquery-public-data.samples.shakespeare`\"\njob = bigquery.query_job sql\n\njob.wait_until_done!\ndata = job.data\n\ndata.count # 100000\ndata.total # 164656\ndata.each do |row|\n  puts row[:word]\nend\ndata = data.next if data.next?"}],"methods":[{"id":"kind-instance","type":"instance","name":"kind","title":["Google","Cloud","Bigquery","Data#kind"],"description":"<p>The resource type of the API response.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L75","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The resource type."}]},{"id":"etag-instance","type":"instance","name":"etag","title":["Google","Cloud","Bigquery","Data#etag"],"description":"<p>An ETag hash for the page of results represented by the data instance.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L84","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The ETag hash."}]},{"id":"token-instance","type":"instance","name":"token","title":["Google","Cloud","Bigquery","Data#token"],"description":"<p>A token used for paging results. Used by the data instance to retrieve\nsubsequent pages. See <a data-custom-type=\"google/cloud/bigquery/data\" data-method=\"next-instance\">#next</a>.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L94","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The pagination token."}]},{"id":"total-instance","type":"instance","name":"total","title":["Google","Cloud","Bigquery","Data#total"],"description":"<p>The total number of rows in the complete table.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L121","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nsql = \"SELECT word FROM `bigquery-public-data.samples.shakespeare`\"\njob = bigquery.query_job sql\n\njob.wait_until_done!\ndata = job.data\n\ndata.count # 100000\ndata.total # 164656\ndata.each do |row|\n  puts row[:word]\nend\ndata = data.next if data.next?"}],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"The number of rows."}]},{"id":"schema-instance","type":"instance","name":"schema","title":["Google","Cloud","Bigquery","Data#schema"],"description":"<p>The schema of the table from which the data was read.</p>\n\n<p>The returned object is frozen and changes are not allowed. Use\n<a data-custom-type=\"google/cloud/bigquery/table\" data-method=\"schema-instance\">Table#schema</a> to update the schema.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L148","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\ndataset = bigquery.dataset \"my_dataset\"\ntable = dataset.table \"my_table\"\n\ndata = table.data\n\nschema = data.schema\nfield = schema.field \"name\"\nfield.required? #=> true"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/schema\">Schema</a>"],"description":"A schema object."}]},{"id":"fields-instance","type":"instance","name":"fields","title":["Google","Cloud","Bigquery","Data#fields"],"description":"<p>The fields of the data, obtained from the schema of the table from\nwhich the data was read.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L171","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\ndataset = bigquery.dataset \"my_dataset\"\ntable = dataset.table \"my_table\"\n\ndata = table.data\n\ndata.fields.each do |field|\n  puts field.name\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigquery/schema/field\">Schema::Field</a>&gt;"],"description":"An array of field objects."}]},{"id":"headers-instance","type":"instance","name":"headers","title":["Google","Cloud","Bigquery","Data#headers"],"description":"<p>The names of the columns in the data, obtained from the schema of the\ntable from which the data was read.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L194","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\ndataset = bigquery.dataset \"my_dataset\"\ntable = dataset.table \"my_table\"\n\ndata = table.data\n\ndata.headers.each do |header|\n  puts header\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;Symbol&gt;"],"description":"An array of column names."}]},{"id":"next?-instance","type":"instance","name":"next?","title":["Google","Cloud","Bigquery","Data#next?"],"description":"<p>Whether there is a next page of data.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L221","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nsql = \"SELECT word FROM `bigquery-public-data.samples.shakespeare`\"\njob = bigquery.query_job sql\n\njob.wait_until_done!\ndata = job.data\n\ndata.count # 100000\ndata.total # 164656\ndata.each do |row|\n  puts row[:word]\nend\ndata = data.next if data.next?"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":"<code>true</code> when there is a next page, <code>false</code> otherwise."}]},{"id":"next-instance","type":"instance","name":"next","title":["Google","Cloud","Bigquery","Data#next"],"description":"<p>Retrieves the next page of data.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L248","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nsql = \"SELECT word FROM `bigquery-public-data.samples.shakespeare`\"\njob = bigquery.query_job sql\n\njob.wait_until_done!\ndata = job.data\n\ndata.count # 100000\ndata.total # 164656\ndata.each do |row|\n  puts row[:word]\nend\ndata = data.next if data.next?"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigquery/data\">Data</a>"],"description":"A new instance providing the next page of data."}]},{"id":"all-instance","type":"instance","name":"all","title":["Google","Cloud","Bigquery","Data#all"],"description":"<p>Retrieves all rows by repeatedly loading <a data-custom-type=\"google/cloud/bigquery/data\" data-method=\"next-instance\">#next</a> until <a data-custom-type=\"google/cloud/bigquery/data\" data-method=\"next?-instance\">#next?</a>\nreturns <code>false</code>. Calls the given block once for each row, which is\npassed as the parameter.</p>\n\n<p>An enumerator is returned if no block is given.</p>\n\n<p>This method may make several API calls until all rows are retrieved.\nBe sure to use as narrow a search criteria as possible. Please use\nwith caution.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/data.rb#L311","resources":[],"examples":[{"caption":"<p>Iterating each rows by passing a block:</p>","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\ndataset = bigquery.dataset \"my_dataset\"\ntable = dataset.table \"my_table\"\n\ntable.data.all do |row|\n  puts row[:word]\nend"},{"caption":"<p>Using the enumerator by not passing a block:</p>","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\ndataset = bigquery.dataset \"my_dataset\"\ntable = dataset.table \"my_table\"\n\nwords = table.data.all.map do |row|\n  row[:word]\nend"},{"caption":"<p>Limit the number of API calls made:</p>","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\ndataset = bigquery.dataset \"my_dataset\"\ntable = dataset.table \"my_table\"\n\ntable.data.all(request_limit: 10) do |row|\n  puts row[:word]\nend"}],"params":[{"name":"request_limit","types":["Integer"],"description":"The upper limit of API requests to make\nto load all data. Default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for accessing each row of data.","optional":true,"nullable":false},{"name":"yield.row","types":["Hash"],"description":"The row object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator"],"description":"An enumerator providing access to all of the\ndata."}]}]}