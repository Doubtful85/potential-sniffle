{"id":"google/firestore/v1beta1/targetchange","name":"TargetChange","title":["Google","Firestore","V1beta1","TargetChange"],"description":"<p>Targets being watched have changed.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"methods":[{"id":"target_change_type-instance","type":"instance","name":"target_change_type","title":["Google","Firestore","V1beta1","TargetChange#target_change_type"],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/firestore/v1beta1/targetchange/targetchangetype\">Google::Firestore::V1beta1::TargetChange::TargetChangeType</a>"],"description":"The type of change that occurred."}]},{"id":"target_change_type=-instance","type":"instance","name":"target_change_type=","title":["Google","Firestore","V1beta1","TargetChange#target_change_type="],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/firestore/v1beta1/targetchange/targetchangetype\">Google::Firestore::V1beta1::TargetChange::TargetChangeType</a>"],"description":"The type of change that occurred."}]},{"id":"target_ids-instance","type":"instance","name":"target_ids","title":["Google","Firestore","V1beta1","TargetChange#target_ids"],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;Integer&gt;"],"description":"The target IDs of targets that have changed.</p>\n\n<p>If empty, the change applies to all targets.</p>\n\n<p>For +target_change_type=ADD+, the order of the target IDs matches the order\nof the requests to add the targets. This allows clients to unambiguously\nassociate server-assigned target IDs with added targets.</p>\n\n<p>For other states, the order of the target IDs is not defined."}]},{"id":"target_ids=-instance","type":"instance","name":"target_ids=","title":["Google","Firestore","V1beta1","TargetChange#target_ids="],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;Integer&gt;"],"description":"The target IDs of targets that have changed.</p>\n\n<p>If empty, the change applies to all targets.</p>\n\n<p>For +target_change_type=ADD+, the order of the target IDs matches the order\nof the requests to add the targets. This allows clients to unambiguously\nassociate server-assigned target IDs with added targets.</p>\n\n<p>For other states, the order of the target IDs is not defined."}]},{"id":"cause-instance","type":"instance","name":"cause","title":["Google","Firestore","V1beta1","TargetChange#cause"],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/rpc/status\">Google::Rpc::Status</a>"],"description":"The error that resulted in this change, if applicable."}]},{"id":"cause=-instance","type":"instance","name":"cause=","title":["Google","Firestore","V1beta1","TargetChange#cause="],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/rpc/status\">Google::Rpc::Status</a>"],"description":"The error that resulted in this change, if applicable."}]},{"id":"resume_token-instance","type":"instance","name":"resume_token","title":["Google","Firestore","V1beta1","TargetChange#resume_token"],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"A token that can be used to resume the stream for the given +target_ids+,\nor all targets if +target_ids+ is empty.</p>\n\n<p>Not set on every target change."}]},{"id":"resume_token=-instance","type":"instance","name":"resume_token=","title":["Google","Firestore","V1beta1","TargetChange#resume_token="],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"A token that can be used to resume the stream for the given +target_ids+,\nor all targets if +target_ids+ is empty.</p>\n\n<p>Not set on every target change."}]},{"id":"read_time-instance","type":"instance","name":"read_time","title":["Google","Firestore","V1beta1","TargetChange#read_time"],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/timestamp\">Google::Protobuf::Timestamp</a>"],"description":"The consistent +read_time+ for the given +target_ids+ (omitted when the\ntarget_ids are not at a consistent snapshot).</p>\n\n<p>The stream is guaranteed to send a +read_time+ with +target_ids+ empty\nwhenever the entire stream reaches a new consistent snapshot. ADD,\nCURRENT, and RESET messages are guaranteed to (eventually) result in a\nnew consistent snapshot (while NO_CHANGE and REMOVE messages are not).</p>\n\n<p>For a given stream, +read_time+ is guaranteed to be monotonically\nincreasing."}]},{"id":"read_time=-instance","type":"instance","name":"read_time=","title":["Google","Firestore","V1beta1","TargetChange#read_time="],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L527","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/timestamp\">Google::Protobuf::Timestamp</a>"],"description":"The consistent +read_time+ for the given +target_ids+ (omitted when the\ntarget_ids are not at a consistent snapshot).</p>\n\n<p>The stream is guaranteed to send a +read_time+ with +target_ids+ empty\nwhenever the entire stream reaches a new consistent snapshot. ADD,\nCURRENT, and RESET messages are guaranteed to (eventually) result in a\nnew consistent snapshot (while NO_CHANGE and REMOVE messages are not).</p>\n\n<p>For a given stream, +read_time+ is guaranteed to be monotonically\nincreasing."}]}]}