{"id":"google/cloud/pubsub/project","name":"Project","title":["Google","Cloud","Pubsub","Project"],"description":"<h1 id=\"project\">Project</h1>\n\n<p>Represents the project that pubsub messages are pushed to and pulled\nfrom. <a data-custom-type=\"google/cloud/pubsub/topic\">Topic</a> is a named resource to which messages are sent by\npublishers. <a data-custom-type=\"google/cloud/pubsub/subscription\">Subscription</a> is a named resource representing the stream\nof messages from a single, specific topic, to be delivered to the\nsubscribing application. <a data-custom-type=\"google/cloud/pubsub/message\">Message</a> is a combination of data and\nattributes that a publisher sends to a topic and is eventually delivered\nto subscribers.</p>\n\n<p>See Google::Cloud#pubsub</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/project.rb#L48","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\ntopic = pubsub.topic \"my-topic\"\ntopic.publish \"task completed\""}],"methods":[{"id":"project-instance","type":"instance","name":"project","title":["Google","Cloud","Pubsub","Project#project"],"description":"<p>The Pub/Sub project connected to.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/project.rb#L71","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new(\n  project: \"my-project\",\n  keyfile: \"/path/to/keyfile.json\"\n)\n\npubsub.project #=> \"my-project\""}],"params":[],"exceptions":[],"returns":[]},{"id":"topic-instance","type":"instance","name":"topic","title":["Google","Cloud","Pubsub","Project#topic"],"description":"<p>Retrieves topic by name.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/project.rb#L159","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\ntopic = pubsub.topic \"existing-topic\""},{"caption":"<p>By default <code>nil</code> will be returned if topic does not exist.</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\ntopic = pubsub.topic \"non-existing-topic\" # nil"},{"caption":"<p>Create topic in a different project with the <code>project</code> flag.</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\ntopic = pubsub.topic \"another-topic\", project: \"another-project\""},{"caption":"<p>Skip the lookup against the service with <code>skip_lookup</code>:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\ntopic = pubsub.topic \"another-topic\", skip_lookup: true"},{"caption":"<p>Configuring AsyncPublisher to increase concurrent callbacks:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\ntopic = pubsub.topic \"my-topic\",\n                     async: { threads: { callback: 16 } }\n\ntopic.publish_async \"task completed\" do |result|\n  if result.succeeded?\n    log_publish_success result.data\n  else\n    log_publish_failure result.data, result.error\n  end\nend\n\ntopic.async_publisher.stop.wait!"}],"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false},{"name":"project","types":["String"],"description":"If the topic belongs to a project other than\nthe one currently connected to, the alternate project ID can be\nspecified here. Optional.","optional":true,"default":"nil","nullable":true},{"name":"skip_lookup","types":["Boolean"],"description":"Optionally create a <a data-custom-type=\"google/cloud/pubsub/topic\">Topic</a> object\nwithout verifying the topic resource exists on the Pub/Sub service.\nCalls made on this object will raise errors if the topic resource\ndoes not exist. Default is <code>false</code>. Optional.","optional":true,"default":"nil","nullable":true},{"name":"async","types":["Hash"],"description":"A hash of values to configure the topic’s\n<a data-custom-type=\"google/cloud/pubsub/asyncpublisher\">AsyncPublisher</a> that is created when <a data-custom-type=\"google/cloud/pubsub/topic\" data-method=\"publish_async-instance\">Topic#publish_async</a>\nis called. Optional.</p>\n\n<p>Hash keys and values may include the following:</p>\n\n<ul>\n  <li><code>:max_bytes</code> (Integer) The maximum size of messages to be\ncollected before the batch is published. Default is 10,000,000\n(10MB).</li>\n  <li><code>:max_messages</code> (Integer) The maximum number of messages to be\ncollected before the batch is published. Default is 1,000.</li>\n  <li><code>:interval</code> (Numeric) The number of seconds to collect messages\nbefore the batch is published. Default is 0.25.</li>\n  <li><code>:threads</code> (Hash) The number of threads to create to handle\nconcurrent calls by the publisher:\n    <ul>\n      <li><code>:publish</code> (Integer) The number of threads used to publish\nmessages. Default is 4.</li>\n      <li><code>:callback</code> (Integer) The number of threads to handle the\npublished messages’ callbacks. Default is 8.</li>\n    </ul>\n  </li>\n</ul>","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/topic\">Google::Cloud::Pubsub::Topic</a>","nil"],"description":"Returns <code>nil</code> if topic\ndoes not exist."}]},{"id":"create_topic-instance","type":"instance","name":"create_topic","title":["Google","Cloud","Pubsub","Project#create_topic"],"description":"<p>Creates a new topic.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/project.rb#L203","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\ntopic = pubsub.create_topic \"my-topic\""}],"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false},{"name":"async","types":["Hash"],"description":"A hash of values to configure the topic’s\n<a data-custom-type=\"google/cloud/pubsub/asyncpublisher\">AsyncPublisher</a> that is created when <a data-custom-type=\"google/cloud/pubsub/topic\" data-method=\"publish_async-instance\">Topic#publish_async</a>\nis called. Optional.</p>\n\n<p>Hash keys and values may include the following:</p>\n\n<ul>\n  <li><code>:max_bytes</code> (Integer) The maximum size of messages to be\ncollected before the batch is published. Default is 10,000,000\n(10MB).</li>\n  <li><code>:max_messages</code> (Integer) The maximum number of messages to be\ncollected before the batch is published. Default is 1,000.</li>\n  <li><code>:interval</code> (Numeric) The number of seconds to collect messages\nbefore the batch is published. Default is 0.25.</li>\n  <li><code>:threads</code> (Hash) The number of threads to create to handle\nconcurrent calls by the publisher:\n    <ul>\n      <li><code>:publish</code> (Integer) The number of threads used to publish\nmessages. Default is 4.</li>\n      <li><code>:callback</code> (Integer) The number of threads to handle the\npublished messages’ callbacks. Default is 8.</li>\n    </ul>\n  </li>\n</ul>","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/topic\">Google::Cloud::Pubsub::Topic</a>"],"description":""}]},{"id":"topics-instance","type":"instance","name":"topics","title":["Google","Cloud","Pubsub","Project#topics"],"description":"<p>Retrieves a list of topics for the given project.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/project.rb#L241","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\ntopics = pubsub.topics\ntopics.each do |topic|\n  puts topic.name\nend"},{"caption":"<p>Retrieve all topics: (See <a data-custom-type=\"google/cloud/pubsub/topic/list\" data-method=\"all-instance\">Topic::List#all</a>)</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\ntopics = pubsub.topics\ntopics.all do |topic|\n  puts topic.name\nend"}],"params":[{"name":"token","types":["String"],"description":"The <code>token</code> value returned by the last call to\n<code>topics</code>; indicates that this is a continuation of a call, and that\nthe system should return the next page of data.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of topics to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/pubsub/topic\">Google::Cloud::Pubsub::Topic</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/pubsub/topic/list\">Google::Cloud::Pubsub::Topic::List</a>)"}]},{"id":"subscription-instance","type":"instance","name":"subscription","title":["Google","Cloud","Pubsub","Project#subscription"],"description":"<p>Retrieves subscription by name.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/project.rb#L282","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsub = pubsub.subscription \"my-sub\"\nsub.name #=> \"projects/my-project/subscriptions/my-sub\""},{"caption":"<p>Skip the lookup against the service with <code>skip_lookup</code>:</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\n# No API call is made to retrieve the subscription information.\nsub = pubsub.subscription \"my-sub\", skip_lookup: true\nsub.name #=> \"projects/my-project/subscriptions/my-sub\""}],"params":[{"name":"subscription_name","types":["String"],"description":"Name of a subscription.","optional":false,"nullable":false},{"name":"project","types":["String"],"description":"If the subscription belongs to a project other\nthan the one currently connected to, the alternate project ID can be\nspecified here.","optional":true,"default":"nil","nullable":true},{"name":"skip_lookup","types":["Boolean"],"description":"Optionally create a <a data-custom-type=\"google/cloud/pubsub/subscription\">Subscription</a> object\nwithout verifying the subscription resource exists on the Pub/Sub\nservice. Calls made on this object will raise errors if the service\nresource does not exist. Default is <code>false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/subscription\">Google::Cloud::Pubsub::Subscription</a>","nil"],"description":"Returns <code>nil</code> if\nthe subscription does not exist"}]},{"id":"subscriptions-instance","type":"instance","name":"subscriptions","title":["Google","Cloud","Pubsub","Project#subscriptions"],"description":"<p>Retrieves a list of subscriptions for the given project.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/project.rb#L326","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsubs = pubsub.subscriptions\nsubs.each do |sub|\n  puts sub.name\nend"},{"caption":"<p>Retrieve all subscriptions: (See <a data-custom-type=\"google/cloud/pubsub/subscription/list\" data-method=\"all-instance\">Subscription::List#all</a>)</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsubs = pubsub.subscriptions\nsubs.all do |sub|\n  puts sub.name\nend"}],"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing\npart of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of subscriptions to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/pubsub/subscription\">Google::Cloud::Pubsub::Subscription</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/pubsub/subscription/list\">Google::Cloud::Pubsub::Subscription::List</a>)"}]},{"id":"snapshots-instance","type":"instance","name":"snapshots","title":["Google","Cloud","Pubsub","Project#snapshots"],"description":"<p>Retrieves a list of snapshots for the given project.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/project.rb#L366","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsnapshots = pubsub.snapshots\nsnapshots.each do |snapshot|\n  puts snapshot.name\nend"},{"caption":"<p>Retrieve all snapshots: (See <a data-custom-type=\"google/cloud/pubsub/snapshot/list\" data-method=\"all-instance\">Snapshot::List#all</a>)</p>","code":"require \"google/cloud/pubsub\"\n\npubsub = Google::Cloud::Pubsub.new\n\nsnapshots = pubsub.snapshots\nsnapshots.all do |snapshot|\n  puts snapshot.name\nend"}],"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing\npart of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of snapshots to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/pubsub/snapshot\">Google::Cloud::Pubsub::Snapshot</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/pubsub/snapshot/list\">Google::Cloud::Pubsub::Snapshot::List</a>)"}]}]}