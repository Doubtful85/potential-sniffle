{"id":"google/cloud/pubsub/v1/subscriberclient","name":"SubscriberClient","title":["Google","Cloud","Pubsub","V1","SubscriberClient"],"description":"<p>The service that an application uses to manipulate subscriptions and to\nconsume messages from a subscription via the +Pull+ method.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L44","resources":[],"examples":[],"methods":[{"id":"iam_policy_stub-instance","type":"instance","name":"iam_policy_stub","title":["Google","Cloud","Pubsub","V1","SubscriberClient#iam_policy_stub"],"description":"","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L44","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Iam::V1::IAMPolicy::Stub"],"description":""}]},{"id":"subscriber_stub-instance","type":"instance","name":"subscriber_stub","title":["Google","Cloud","Pubsub","V1","SubscriberClient#subscriber_stub"],"description":"","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L44","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Pubsub::V1::Subscriber::Stub"],"description":""}]},{"id":"project_path-class","type":"class","name":"project_path","title":["Google","Cloud","Pubsub","V1","SubscriberClient.project_path"],"description":"<p>Returns a fully-qualified project resource name string.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L102","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"snapshot_path-class","type":"class","name":"snapshot_path","title":["Google","Cloud","Pubsub","V1","SubscriberClient.snapshot_path"],"description":"<p>Returns a fully-qualified snapshot resource name string.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L112","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"snapshot","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"subscription_path-class","type":"class","name":"subscription_path","title":["Google","Cloud","Pubsub","V1","SubscriberClient.subscription_path"],"description":"<p>Returns a fully-qualified subscription resource name string.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L123","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"subscription","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"topic_path-class","type":"class","name":"topic_path","title":["Google","Cloud","Pubsub","V1","SubscriberClient.topic_path"],"description":"<p>Returns a fully-qualified topic resource name string.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L134","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"topic","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_project_from_project_name-class","type":"class","name":"match_project_from_project_name","title":["Google","Cloud","Pubsub","V1","SubscriberClient.match_project_from_project_name"],"description":"<p>Parses the project from a project resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L144","resources":[],"examples":[],"params":[{"name":"project_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_project_from_snapshot_name-class","type":"class","name":"match_project_from_snapshot_name","title":["Google","Cloud","Pubsub","V1","SubscriberClient.match_project_from_snapshot_name"],"description":"<p>Parses the project from a snapshot resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L151","resources":[],"examples":[],"params":[{"name":"snapshot_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_snapshot_from_snapshot_name-class","type":"class","name":"match_snapshot_from_snapshot_name","title":["Google","Cloud","Pubsub","V1","SubscriberClient.match_snapshot_from_snapshot_name"],"description":"<p>Parses the snapshot from a snapshot resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L158","resources":[],"examples":[],"params":[{"name":"snapshot_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_project_from_subscription_name-class","type":"class","name":"match_project_from_subscription_name","title":["Google","Cloud","Pubsub","V1","SubscriberClient.match_project_from_subscription_name"],"description":"<p>Parses the project from a subscription resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L165","resources":[],"examples":[],"params":[{"name":"subscription_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_subscription_from_subscription_name-class","type":"class","name":"match_subscription_from_subscription_name","title":["Google","Cloud","Pubsub","V1","SubscriberClient.match_subscription_from_subscription_name"],"description":"<p>Parses the subscription from a subscription resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L172","resources":[],"examples":[],"params":[{"name":"subscription_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_project_from_topic_name-class","type":"class","name":"match_project_from_topic_name","title":["Google","Cloud","Pubsub","V1","SubscriberClient.match_project_from_topic_name"],"description":"<p>Parses the project from a topic resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L179","resources":[],"examples":[],"params":[{"name":"topic_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"match_topic_from_topic_name-class","type":"class","name":"match_topic_from_topic_name","title":["Google","Cloud","Pubsub","V1","SubscriberClient.match_topic_from_topic_name"],"description":"<p>Parses the topic from a topic resource.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L186","resources":[],"examples":[],"params":[{"name":"topic_name","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Pubsub","V1","SubscriberClient#initialize"],"description":"","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L205","resources":[],"examples":[],"params":[{"name":"service_path","types":["String"],"description":"The domain name of the API remote host.","optional":true,"default":"SERVICE_ADDRESS","nullable":false},{"name":"port","types":["Integer"],"description":"The port on which to connect to the remote host.","optional":true,"default":"DEFAULT_SERVICE_PORT","nullable":false},{"name":"channel","types":["Channel"],"description":"A Channel object through which to make calls.","optional":true,"default":"nil","nullable":true},{"name":"chan_creds","types":["Grpc::ChannelCredentials"],"description":"A ChannelCredentials for the setting up the RPC client.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/v1/subscriberclient\">SubscriberClient</a>"],"description":"a new instance of SubscriberClient"}]},{"id":"create_subscription-instance","type":"instance","name":"create_subscription","title":["Google","Cloud","Pubsub","V1","SubscriberClient#create_subscription"],"description":"<p>Creates a subscription to a given topic.\nIf the subscription already exists, returns +ALREADY_EXISTS+.\nIf the corresponding topic doesn’t exist, returns +NOT_FOUND+.</p>\n\n<p>If the name is not provided in the request, the server will assign a random\nname for this subscription on the same project as the topic, conforming\nto the\nresource[https://cloud.google.com/pubsub/docs/overview#names].\nThe generated name is populated in the returned Subscription object.\nNote that for REST API requests, you must specify a name in the request.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L414","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_name = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nformatted_topic = SubscriberClient.topic_path(\"[PROJECT]\", \"[TOPIC]\")\nresponse = subscriber_client.create_subscription(formatted_name, formatted_topic)"}],"params":[{"name":"name","types":["String"],"description":"The name of the subscription. It must have the format\n+”projects/project/subscriptions/subscription”+. +subscription+ must\nstart with a letter, and contain only letters (+[A-Za-z]+), numbers\n(+[0-9]+), dashes (+-+), underscores (+_+), periods (+.+), tildes (+~+),\nplus (+++) or percent signs (+%+). It must be between 3 and 255 characters\nin length, and it must not start with +”goog”+.","optional":false,"nullable":false},{"name":"topic","types":["String"],"description":"The name of the topic from which this subscription is receiving messages.\nFormat is +projects/project/topics/topic+.\nThe value of this field will be +<em>deleted-topic</em>+ if the topic has been\ndeleted.","optional":false,"nullable":false},{"name":"push_config","types":["Google::Pubsub::V1::PushConfig"],"description":"If push delivery is used with this subscription, this field is\nused to configure it. An empty +pushConfig+ signifies that the subscriber\nwill pull and ack messages using API methods.","optional":true,"default":"nil","nullable":true},{"name":"ack_deadline_seconds","types":["Integer"],"description":"This value is the maximum time after a subscriber receives a message\nbefore the subscriber should acknowledge the message. After message\ndelivery but before the ack deadline expires and before the message is\nacknowledged, it is an outstanding message and will not be delivered\nagain during that time (on a best-effort basis).</p>\n\n<p>For pull subscriptions, this value is used as the initial value for the ack\ndeadline. To override this value for a given message, call\n+ModifyAckDeadline+ with the corresponding +ack_id+ if using\npull.\nThe minimum custom deadline you can specify is 10 seconds.\nThe maximum custom deadline you can specify is 600 seconds (10 minutes).\nIf this parameter is 0, a default value of 10 seconds is used.</p>\n\n<p>For push delivery, this value is also used to set the request timeout for\nthe call to the push endpoint.</p>\n\n<p>If the subscriber never acknowledges the message, the Pub/Sub\nsystem will eventually redeliver the message.","optional":true,"default":"nil","nullable":true},{"name":"retain_acked_messages","types":["true","false"],"description":"Indicates whether to retain acknowledged messages. If true, then\nmessages are not expunged from the subscription’s backlog, even if they are\nacknowledged, until they fall out of the +message_retention_duration+\nwindow.","optional":true,"default":"nil","nullable":true},{"name":"message_retention_duration","types":["Google::Protobuf::Duration"],"description":"How long to retain unacknowledged messages in the subscription’s backlog,\nfrom the moment a message is published.\nIf +retain_acked_messages+ is true, then this also configures the retention\nof acknowledged messages, and thus configures how far back in time a +Seek+\ncan be done. Defaults to 7 days. Cannot be more than 7 days or less than 10\nminutes.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/subscription\">Google::Pubsub::V1::Subscription</a>"],"description":""}]},{"id":"get_subscription-instance","type":"instance","name":"get_subscription","title":["Google","Cloud","Pubsub","V1","SubscriberClient#get_subscription"],"description":"<p>Gets the configuration details of a subscription.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L452","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nresponse = subscriber_client.get_subscription(formatted_subscription)"}],"params":[{"name":"subscription","types":["String"],"description":"The name of the subscription to get.\nFormat is +projects/project/subscriptions/sub+.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/subscription\">Google::Pubsub::V1::Subscription</a>"],"description":""}]},{"id":"update_subscription-instance","type":"instance","name":"update_subscription","title":["Google","Cloud","Pubsub","V1","SubscriberClient#update_subscription"],"description":"<p>Updates an existing subscription. Note that certain properties of a\nsubscription, such as its topic, are not modifiable.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L486","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nFieldMask = Google::Protobuf::FieldMask\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\nSubscription = Google::Pubsub::V1::Subscription\n\nsubscriber_client = SubscriberClient.new\nsubscription = Subscription.new\nupdate_mask = FieldMask.new\nresponse = subscriber_client.update_subscription(subscription, update_mask)"}],"params":[{"name":"subscription","types":["Google::Pubsub::V1::Subscription"],"description":"The updated subscription object.","optional":false,"nullable":false},{"name":"update_mask","types":["Google::Protobuf::FieldMask"],"description":"Indicates which fields in the provided subscription to update.\nMust be specified and non-empty.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/subscription\">Google::Pubsub::V1::Subscription</a>"],"description":""}]},{"id":"list_subscriptions-instance","type":"instance","name":"list_subscriptions","title":["Google","Cloud","Pubsub","V1","SubscriberClient#list_subscriptions"],"description":"<p>Lists matching subscriptions.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L538","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_project = SubscriberClient.project_path(\"[PROJECT]\")\n\n# Iterate over all results.\nsubscriber_client.list_subscriptions(formatted_project).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\nsubscriber_client.list_subscriptions(formatted_project).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"project","types":["String"],"description":"The name of the cloud project that subscriptions belong to.\nFormat is +projects/project+.","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/pubsub/v1/subscription\">Google::Pubsub::V1::Subscription</a>&gt;"],"description":"An enumerable of Google::Pubsub::V1::Subscription instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"delete_subscription-instance","type":"instance","name":"delete_subscription","title":["Google","Cloud","Pubsub","V1","SubscriberClient#delete_subscription"],"description":"<p>Deletes an existing subscription. All messages retained in the subscription\nare immediately dropped. Calls to +Pull+ after deletion will return\n+NOT_FOUND+. After a subscription is deleted, a new one may be created with\nthe same name, but the new one has no association with the old\nsubscription or its topic unless the same topic is specified.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L571","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nsubscriber_client.delete_subscription(formatted_subscription)"}],"params":[{"name":"subscription","types":["String"],"description":"The subscription to delete.\nFormat is +projects/project/subscriptions/sub+.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"modify_ack_deadline-instance","type":"instance","name":"modify_ack_deadline","title":["Google","Cloud","Pubsub","V1","SubscriberClient#modify_ack_deadline"],"description":"<p>Modifies the ack deadline for a specific message. This method is useful\nto indicate that more time is needed to process a message by the\nsubscriber, or to make the message available for redelivery if the\nprocessing was interrupted. Note that this does not modify the\nsubscription-level +ackDeadlineSeconds+ used for subsequent messages.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L615","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nack_ids = []\nack_deadline_seconds = 0\nsubscriber_client.modify_ack_deadline(formatted_subscription, ack_ids, ack_deadline_seconds)"}],"params":[{"name":"subscription","types":["String"],"description":"The name of the subscription.\nFormat is +projects/project/subscriptions/sub+.","optional":false,"nullable":false},{"name":"ack_ids","types":["Array<String>"],"description":"List of acknowledgment IDs.","optional":false,"nullable":false},{"name":"ack_deadline_seconds","types":["Integer"],"description":"The new ack deadline with respect to the time this request was sent to\nthe Pub/Sub system. For example, if the value is 10, the new\nack deadline will expire 10 seconds after the +ModifyAckDeadline+ call\nwas made. Specifying zero may immediately make the message available for\nanother pull request.\nThe minimum deadline you can specify is 0 seconds.\nThe maximum deadline you can specify is 600 seconds (10 minutes).","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"acknowledge-instance","type":"instance","name":"acknowledge","title":["Google","Cloud","Pubsub","V1","SubscriberClient#acknowledge"],"description":"<p>Acknowledges the messages associated with the +ack_ids+ in the\n+AcknowledgeRequest+. The Pub/Sub system can remove the relevant messages\nfrom the subscription.</p>\n\n<p>Acknowledging a message whose ack deadline has expired may succeed,\nbut such a message may be redelivered later. Acknowledging a message more\nthan once will not result in an error.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L657","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nack_ids = []\nsubscriber_client.acknowledge(formatted_subscription, ack_ids)"}],"params":[{"name":"subscription","types":["String"],"description":"The subscription whose message is being acknowledged.\nFormat is +projects/project/subscriptions/sub+.","optional":false,"nullable":false},{"name":"ack_ids","types":["Array<String>"],"description":"The acknowledgment ID for the messages being acknowledged that was returned\nby the Pub/Sub system in the +Pull+ response. Must not be empty.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"pull-instance","type":"instance","name":"pull","title":["Google","Cloud","Pubsub","V1","SubscriberClient#pull"],"description":"<p>Pulls messages from the server. Returns an empty list if there are no\nmessages available in the backlog. The server may return +UNAVAILABLE+ if\nthere are too many concurrent pull requests pending for the given\nsubscription.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L702","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nmax_messages = 0\nresponse = subscriber_client.pull(formatted_subscription, max_messages)"}],"params":[{"name":"subscription","types":["String"],"description":"The subscription from which messages should be pulled.\nFormat is +projects/project/subscriptions/sub+.","optional":false,"nullable":false},{"name":"max_messages","types":["Integer"],"description":"The maximum number of messages returned for this request. The Pub/Sub\nsystem may return fewer than the number specified.","optional":false,"nullable":false},{"name":"return_immediately","types":["true","false"],"description":"If this field set to true, the system will respond immediately even if\nit there are no messages available to return in the +Pull+ response.\nOtherwise, the system may wait (for a bounded amount of time) until at\nleast one message is available, rather than returning no messages. The\nclient may cancel the request if it does not wish to wait any longer for\nthe response.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/pullresponse\">Google::Pubsub::V1::PullResponse</a>"],"description":""}]},{"id":"streaming_pull-instance","type":"instance","name":"streaming_pull","title":["Google","Cloud","Pubsub","V1","SubscriberClient#streaming_pull"],"description":"<p>(EXPERIMENTAL) StreamingPull is an experimental feature. This RPC will\nrespond with UNIMPLEMENTED errors unless you have been invited to test\nthis feature. Contact cloud-pubsub@google.com with any questions.</p>\n\n<p>Establishes a stream with the server, which sends messages down to the\nclient. The client streams acknowledgements and ack deadline modifications\nback to the server. The server will close the stream and return the status\non any error. The server may close the stream with status +OK+ to reassign\nserver-side resources, in which case, the client should re-establish the\nstream. +UNAVAILABLE+ may also be returned in the case of a transient error\n(e.g., a server restart). These should also be retried by the client. Flow\ncontrol can be achieved by configuring the underlying RPC channel.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L760","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nStreamingPullRequest = Google::Pubsub::V1::StreamingPullRequest\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nstream_ack_deadline_seconds = 0\nrequest = StreamingPullRequest.new\nrequest.subscription = formatted_subscription\nrequest.stream_ack_deadline_seconds = stream_ack_deadline_seconds\nrequests = [request]\nsubscriber_client.streaming_pull(requests).each do |element|\n  # Process element.\nend"}],"params":[{"name":"reqs","types":["Enumerable<Google::Pubsub::V1::StreamingPullRequest>"],"description":"The input requests.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Enumerable&lt;<a data-custom-type=\"google/pubsub/v1/streamingpullresponse\">Google::Pubsub::V1::StreamingPullResponse</a>&gt;"],"description":"An enumerable of Google::Pubsub::V1::StreamingPullResponse instances."}]},{"id":"modify_push_config-instance","type":"instance","name":"modify_push_config","title":["Google","Cloud","Pubsub","V1","SubscriberClient#modify_push_config"],"description":"<p>Modifies the +PushConfig+ for a specified subscription.</p>\n\n<p>This may be used to change a push subscription to a pull one (signified by\nan empty +PushConfig+) or vice versa, or change the endpoint URL and other\nattributes of a push subscription. Messages will accumulate for delivery\ncontinuously through the call regardless of changes to the +PushConfig+.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L796","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nPushConfig = Google::Pubsub::V1::PushConfig\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\npush_config = PushConfig.new\nsubscriber_client.modify_push_config(formatted_subscription, push_config)"}],"params":[{"name":"subscription","types":["String"],"description":"The name of the subscription.\nFormat is +projects/project/subscriptions/sub+.","optional":false,"nullable":false},{"name":"push_config","types":["Google::Pubsub::V1::PushConfig"],"description":"The push configuration for future deliveries.</p>\n\n<p>An empty +pushConfig+ indicates that the Pub/Sub system should\nstop pushing messages from the given subscription and allow\nmessages to be pulled and acknowledged - effectively pausing\nthe subscription if +Pull+ is not called.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"list_snapshots-instance","type":"instance","name":"list_snapshots","title":["Google","Cloud","Pubsub","V1","SubscriberClient#list_snapshots"],"description":"<p>Lists the existing snapshots.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L849","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_project = SubscriberClient.project_path(\"[PROJECT]\")\n\n# Iterate over all results.\nsubscriber_client.list_snapshots(formatted_project).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\nsubscriber_client.list_snapshots(formatted_project).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"project","types":["String"],"description":"The name of the cloud project that snapshots belong to.\nFormat is +projects/project+.","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/pubsub/v1/snapshot\">Google::Pubsub::V1::Snapshot</a>&gt;"],"description":"An enumerable of Google::Pubsub::V1::Snapshot instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"create_snapshot-instance","type":"instance","name":"create_snapshot","title":["Google","Cloud","Pubsub","V1","SubscriberClient#create_snapshot"],"description":"<p>Creates a snapshot from the requested subscription.\nIf the snapshot already exists, returns +ALREADY_EXISTS+.\nIf the requested subscription doesn’t exist, returns +NOT_FOUND+.</p>\n\n<p>If the name is not provided in the request, the server will assign a random\nname for this snapshot on the same project as the subscription, conforming\nto the\nresource[https://cloud.google.com/pubsub/docs/overview#names].\nThe generated name is populated in the returned Snapshot object.\nNote that for REST API requests, you must specify a name in the request.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L902","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_name = SubscriberClient.snapshot_path(\"[PROJECT]\", \"[SNAPSHOT]\")\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nresponse = subscriber_client.create_snapshot(formatted_name, formatted_subscription)"}],"params":[{"name":"name","types":["String"],"description":"Optional user-provided name for this snapshot.\nIf the name is not provided in the request, the server will assign a random\nname for this snapshot on the same project as the subscription.\nNote that for REST API requests, you must specify a name.\nFormat is +projects/project/snapshots/snap+.","optional":false,"nullable":false},{"name":"subscription","types":["String"],"description":"The subscription whose backlog the snapshot retains.\nSpecifically, the created snapshot is guaranteed to retain:\n (a) The existing backlog on the subscription. More precisely, this is\n     defined as the messages in the subscription’s backlog that are\n     unacknowledged upon the successful completion of the\n     +CreateSnapshot+ request; as well as:\n (b) Any messages published to the subscription’s topic following the\n     successful completion of the CreateSnapshot request.\nFormat is +projects/project/subscriptions/sub+.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/snapshot\">Google::Pubsub::V1::Snapshot</a>"],"description":""}]},{"id":"delete_snapshot-instance","type":"instance","name":"delete_snapshot","title":["Google","Cloud","Pubsub","V1","SubscriberClient#delete_snapshot"],"description":"<p>Removes an existing snapshot. All messages retained in the snapshot\nare immediately dropped. After a snapshot is deleted, a new one may be\ncreated with the same name, but the new one has no association with the old\nsnapshot or its subscription, unless the same subscription is specified.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L934","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_snapshot = SubscriberClient.snapshot_path(\"[PROJECT]\", \"[SNAPSHOT]\")\nsubscriber_client.delete_snapshot(formatted_snapshot)"}],"params":[{"name":"snapshot","types":["String"],"description":"The name of the snapshot to delete.\nFormat is +projects/project/snapshots/snap+.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"seek-instance","type":"instance","name":"seek","title":["Google","Cloud","Pubsub","V1","SubscriberClient#seek"],"description":"<p>Seeks an existing subscription to a point in time or to a given snapshot,\nwhichever is provided in the request.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L979","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_subscription = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nresponse = subscriber_client.seek(formatted_subscription)"}],"params":[{"name":"subscription","types":["String"],"description":"The subscription to affect.","optional":false,"nullable":false},{"name":"time","types":["Google::Protobuf::Timestamp"],"description":"The time to seek to.\nMessages retained in the subscription that were published before this\ntime are marked as acknowledged, and messages retained in the\nsubscription that were published after this time are marked as\nunacknowledged. Note that this operation affects only those messages\nretained in the subscription (configured by the combination of\n+message_retention_duration+ and +retain_acked_messages+). For example,\nif +time+ corresponds to a point before the message retention\nwindow (or to a point before the system’s notion of the subscription\ncreation time), only retained messages will be marked as unacknowledged,\nand already-expunged messages will not be restored.","optional":true,"default":"nil","nullable":true},{"name":"snapshot","types":["String"],"description":"The snapshot to seek to. The snapshot’s topic must be the same as that of\nthe provided subscription.\nFormat is +projects/project/snapshots/snap+.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/pubsub/v1/seekresponse\">Google::Pubsub::V1::SeekResponse</a>"],"description":""}]},{"id":"set_iam_policy-instance","type":"instance","name":"set_iam_policy","title":["Google","Cloud","Pubsub","V1","SubscriberClient#set_iam_policy"],"description":"<p>Sets the access control policy on the specified resource. Replaces any\nexisting policy.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L1020","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nPolicy = Google::Iam::V1::Policy\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_resource = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\npolicy = Policy.new\nresponse = subscriber_client.set_iam_policy(formatted_resource, policy)"}],"params":[{"name":"resource","types":["String"],"description":"REQUIRED: The resource for which the policy is being specified.\n+resource+ is usually specified as a path. For example, a Project\nresource is specified as +projects/project+.","optional":false,"nullable":false},{"name":"policy","types":["Google::Iam::V1::Policy"],"description":"REQUIRED: The complete policy to be applied to the +resource+. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Iam::V1::Policy"],"description":""}]},{"id":"get_iam_policy-instance","type":"instance","name":"get_iam_policy","title":["Google","Cloud","Pubsub","V1","SubscriberClient#get_iam_policy"],"description":"<p>Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L1053","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_resource = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\nresponse = subscriber_client.get_iam_policy(formatted_resource)"}],"params":[{"name":"resource","types":["String"],"description":"REQUIRED: The resource for which the policy is being requested.\n+resource+ is usually specified as a path. For example, a Project\nresource is specified as +projects/project+.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Iam::V1::Policy"],"description":""}]},{"id":"test_iam_permissions-instance","type":"instance","name":"test_iam_permissions","title":["Google","Cloud","Pubsub","V1","SubscriberClient#test_iam_permissions"],"description":"<p>Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.</p>","source":"google-cloud-pubsub/lib/google/cloud/pubsub/v1/subscriber_client.rb#L1090","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/pubsub/v1/subscriber_client\"\n\nSubscriberClient = Google::Cloud::Pubsub::V1::SubscriberClient\n\nsubscriber_client = SubscriberClient.new\nformatted_resource = SubscriberClient.subscription_path(\"[PROJECT]\", \"[SUBSCRIPTION]\")\npermissions = []\nresponse = subscriber_client.test_iam_permissions(formatted_resource, permissions)"}],"params":[{"name":"resource","types":["String"],"description":"REQUIRED: The resource for which the policy detail is being requested.\n+resource+ is usually specified as a path. For example, a Project\nresource is specified as +projects/project+.","optional":false,"nullable":false},{"name":"permissions","types":["Array<String>"],"description":"The set of permissions to check for the +resource+. Permissions with\nwildcards (such as ‘<em>’ or ‘storage.</em>’) are not allowed. For more\ninformation see\nIAM[https://cloud.google.com/iam/docs/overview#permissions].","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Iam::V1::TestIamPermissionsResponse"],"description":""}]}]}