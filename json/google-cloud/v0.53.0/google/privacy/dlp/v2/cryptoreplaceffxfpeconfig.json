{"id":"google/privacy/dlp/v2/cryptoreplaceffxfpeconfig","name":"CryptoReplaceFfxFpeConfig","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig"],"description":"<p>Replaces an identifier with a surrogate using FPE with the FFX\nmode of operation; however when used in the +ReidentifyContent+ API method,\nit serves the opposite function by reversing the surrogate back into\nthe original identifier.\nThe identifier must be encoded as ASCII.\nFor a given crypto key and context, the same identifier will be\nreplaced with the same surrogate.\nIdentifiers must be at least two characters long.\nIn the case that the identifier is the empty string, it will be skipped.\nSee <a href=\"https://cloud.google.com/dlp/docs/pseudonymization\">Pseudonymization</a> for example usage.</p>","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"methods":[{"id":"crypto_key-instance","type":"instance","name":"crypto_key","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#crypto_key"],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/privacy/dlp/v2/cryptokey\">Google::Privacy::Dlp::V2::CryptoKey</a>"],"description":"The key used by the encryption algorithm. [required]"}]},{"id":"crypto_key=-instance","type":"instance","name":"crypto_key=","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#crypto_key="],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/privacy/dlp/v2/cryptokey\">Google::Privacy::Dlp::V2::CryptoKey</a>"],"description":"The key used by the encryption algorithm. [required]"}]},{"id":"context-instance","type":"instance","name":"context","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#context"],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/privacy/dlp/v2/fieldid\">Google::Privacy::Dlp::V2::FieldId</a>"],"description":"The ‘tweak’, a context may be used for higher security since the same\nidentifier in two different contexts won’t be given the same surrogate. If\nthe context is not set, a default tweak will be used.</p>\n\n<p>If the context is set but:</p>\n\n<ol>\n  <li>there is no record present when transforming a given value or</li>\n  <li>the field is not present when transforming a given value,</li>\n</ol>\n\n<p>a default tweak will be used.</p>\n\n<p>Note that case (1) is expected when an +InfoTypeTransformation+ is\napplied to both structured and non-structured +ContentItem+s.\nCurrently, the referenced field may be of value type integer or string.</p>\n\n<p>The tweak is constructed as a sequence of bytes in big endian byte order\nsuch that:</p>\n\n<ul>\n  <li>a 64 bit integer is encoded followed by a single byte of value 1</li>\n  <li>a string is encoded in UTF-8 format followed by a single byte of value\nå 2</li>\n</ul>"}]},{"id":"context=-instance","type":"instance","name":"context=","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#context="],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/privacy/dlp/v2/fieldid\">Google::Privacy::Dlp::V2::FieldId</a>"],"description":"The ‘tweak’, a context may be used for higher security since the same\nidentifier in two different contexts won’t be given the same surrogate. If\nthe context is not set, a default tweak will be used.</p>\n\n<p>If the context is set but:</p>\n\n<ol>\n  <li>there is no record present when transforming a given value or</li>\n  <li>the field is not present when transforming a given value,</li>\n</ol>\n\n<p>a default tweak will be used.</p>\n\n<p>Note that case (1) is expected when an +InfoTypeTransformation+ is\napplied to both structured and non-structured +ContentItem+s.\nCurrently, the referenced field may be of value type integer or string.</p>\n\n<p>The tweak is constructed as a sequence of bytes in big endian byte order\nsuch that:</p>\n\n<ul>\n  <li>a 64 bit integer is encoded followed by a single byte of value 1</li>\n  <li>a string is encoded in UTF-8 format followed by a single byte of value\nå 2</li>\n</ul>"}]},{"id":"common_alphabet-instance","type":"instance","name":"common_alphabet","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#common_alphabet"],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/privacy/dlp/v2/cryptoreplaceffxfpeconfig/ffxcommonnativealphabet\">Google::Privacy::Dlp::V2::CryptoReplaceFfxFpeConfig::FfxCommonNativeAlphabet</a>"],"description":""}]},{"id":"common_alphabet=-instance","type":"instance","name":"common_alphabet=","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#common_alphabet="],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/privacy/dlp/v2/cryptoreplaceffxfpeconfig/ffxcommonnativealphabet\">Google::Privacy::Dlp::V2::CryptoReplaceFfxFpeConfig::FfxCommonNativeAlphabet</a>"],"description":""}]},{"id":"custom_alphabet-instance","type":"instance","name":"custom_alphabet","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#custom_alphabet"],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"This is supported by mapping these to the alphanumeric characters\nthat the FFX mode natively supports. This happens before/after\nencryption/decryption.\nEach character listed must appear only once.\nNumber of characters must be in the range [2, 62].\nThis must be encoded as ASCII.\nThe order of characters does not matter."}]},{"id":"custom_alphabet=-instance","type":"instance","name":"custom_alphabet=","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#custom_alphabet="],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"This is supported by mapping these to the alphanumeric characters\nthat the FFX mode natively supports. This happens before/after\nencryption/decryption.\nEach character listed must appear only once.\nNumber of characters must be in the range [2, 62].\nThis must be encoded as ASCII.\nThe order of characters does not matter."}]},{"id":"radix-instance","type":"instance","name":"radix","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#radix"],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"The native way to select the alphabet. Must be in the range [2, 62]."}]},{"id":"radix=-instance","type":"instance","name":"radix=","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#radix="],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"The native way to select the alphabet. Must be in the range [2, 62]."}]},{"id":"surrogate_info_type-instance","type":"instance","name":"surrogate_info_type","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#surrogate_info_type"],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/privacy/dlp/v2/infotype\">Google::Privacy::Dlp::V2::InfoType</a>"],"description":"The custom infoType to annotate the surrogate with.\nThis annotation will be applied to the surrogate by prefixing it with\nthe name of the custom infoType followed by the number of\ncharacters comprising the surrogate. The following scheme defines the\nformat: info_type_name(surrogate_character_count):surrogate</p>\n\n<p>For example, if the name of custom infoType is ‘MY_TOKEN_INFO_TYPE’ and\nthe surrogate is ‘abc’, the full replacement value\nwill be: ‘MY_TOKEN_INFO_TYPE(3):abc’</p>\n\n<p>This annotation identifies the surrogate when inspecting content using the\ncustom infoType\n<a href=\"https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype\">+SurrogateType+</a>.\nThis facilitates reversal of the surrogate when it occurs in free text.</p>\n\n<p>In order for inspection to work properly, the name of this infoType must\nnot occur naturally anywhere in your data; otherwise, inspection may\nfind a surrogate that does not correspond to an actual identifier.\nTherefore, choose your custom infoType name carefully after considering\nwhat your data looks like. One way to select a name that has a high chance\nof yielding reliable detection is to include one or more unicode characters\nthat are highly improbable to exist in your data.\nFor example, assuming your data is entered from a regular ASCII keyboard,\nthe symbol with the hex code point 29DD might be used like so:\n⧝MY_TOKEN_TYPE"}]},{"id":"surrogate_info_type=-instance","type":"instance","name":"surrogate_info_type=","title":["Google","Privacy","Dlp","V2","CryptoReplaceFfxFpeConfig#surrogate_info_type="],"description":"","source":"google-cloud-dlp/lib/google/cloud/dlp/v2/doc/google/privacy/dlp/v2/dlp.rb#L1231","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/privacy/dlp/v2/infotype\">Google::Privacy::Dlp::V2::InfoType</a>"],"description":"The custom infoType to annotate the surrogate with.\nThis annotation will be applied to the surrogate by prefixing it with\nthe name of the custom infoType followed by the number of\ncharacters comprising the surrogate. The following scheme defines the\nformat: info_type_name(surrogate_character_count):surrogate</p>\n\n<p>For example, if the name of custom infoType is ‘MY_TOKEN_INFO_TYPE’ and\nthe surrogate is ‘abc’, the full replacement value\nwill be: ‘MY_TOKEN_INFO_TYPE(3):abc’</p>\n\n<p>This annotation identifies the surrogate when inspecting content using the\ncustom infoType\n<a href=\"https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype\">+SurrogateType+</a>.\nThis facilitates reversal of the surrogate when it occurs in free text.</p>\n\n<p>In order for inspection to work properly, the name of this infoType must\nnot occur naturally anywhere in your data; otherwise, inspection may\nfind a surrogate that does not correspond to an actual identifier.\nTherefore, choose your custom infoType name carefully after considering\nwhat your data looks like. One way to select a name that has a high chance\nof yielding reliable detection is to include one or more unicode characters\nthat are highly improbable to exist in your data.\nFor example, assuming your data is entered from a regular ASCII keyboard,\nthe symbol with the hex code point 29DD might be used like so:\n⧝MY_TOKEN_TYPE"}]}]}