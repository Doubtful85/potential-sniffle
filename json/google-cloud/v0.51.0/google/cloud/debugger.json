{"id":"google/cloud/debugger","name":"Debugger","title":["Google","Cloud","Debugger"],"description":"<h1 id=\"ruby-client-for-stackdriver-debugger-api-alpha\">Ruby Client for Stackdriver Debugger API (<a href=\"https://github.com/GoogleCloudPlatform/google-cloud-ruby#versioning\">Alpha</a>)</h1>\n\n<p><a href=\"https://cloud.google.com/debugger\">Stackdriver Debugger API</a>:\nExamines the call stack and variables of a running application\nwithout stopping or slowing it down.</p>\n<ul>\n  <li><a href=\"https://cloud.google.com/debugger\">Product Documentation</a></li>\n</ul>\n\n<h2 id=\"quick-start\">Quick Start</h2>\n<p>In order to use this library, you first need to go through the following\nsteps:</p>\n\n<ol>\n  <li><a href=\"https://console.cloud.google.com/project\">Select or create a Cloud Platform project.</a></li>\n  <li><a href=\"https://console.cloud.google.com/apis/api/debugger\">Enable the Stackdriver Debugger API.</a></li>\n  <li><a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud/master/guides/authentication\">Setup Authentication.</a></li>\n</ol>\n\n<h3 id=\"installation\">Installation</h3>\n<pre><code>$ gem install google-cloud-debugger\n</code></pre>\n\n<h3 id=\"next-steps\">Next Steps</h3>\n<ul>\n  <li>Read the <a href=\"https://cloud.google.com/debugger\">Stackdriver Debugger API Product documentation</a>\nto learn more about the product and see How-to Guides.</li>\n  <li>View this <a href=\"https://github.com/GoogleCloudPlatform/google-cloud-ruby/blob/master/README.md\">repositoryâ€™s main README</a>\nto see the full list of Cloud APIs that we cover.</li>\n</ul>","source":"google-cloud-debugger/lib/google/cloud/debugger.rb#L324","resources":[],"examples":[],"methods":[{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","Debugger.new"],"description":"<p>Creates a new debugger object for instrumenting Stackdriver Debugger for\nan application. Each call creates a new debugger agent with independent\nconnection service.</p>\n\n<p>For more information on connecting to Google Cloud see the\n<a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/guides/authentication\">Authentication\nGuide</a>.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger.rb#L372","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/debugger\"\n\ndebugger = Google::Cloud::Debugger.new\ndebugger.start"}],"params":[{"name":"project_id","types":["String"],"description":"Project identifier for the Stackdriver\nDebugger service you are connecting to. If not present, the default\nproject for the credentials is used.","optional":true,"default":"nil","nullable":true},{"name":"credentials","types":["String","Hash","Google::Auth::Credentials"],"description":"The path to\nthe keyfile as a String, the contents of the keyfile as a Hash, or a\nGoogle::Auth::Credentials object. (See <a data-custom-type=\"google/cloud/debugger/credentials\">Debugger::Credentials</a>)","optional":true,"default":"nil","nullable":true},{"name":"service_name","types":["String"],"description":"Name for the debuggee application.\nOptional.","optional":true,"default":"nil","nullable":true},{"name":"service_version","types":["String"],"description":"Version identifier for the debuggee\napplication. Optional.","optional":true,"default":"nil","nullable":true},{"name":"scope","types":["String","Array<String>"],"description":"The OAuth 2.0 scopes controlling\nthe set of resources and operations that the connection can access.\nSee <a href=\"https://developers.google.com/identity/protocols/OAuth2\">Using OAuth 2.0 to Access Google\nAPIs</a>.</p>\n\n<p>The default scope is:</p>\n\n<ul>\n  <li><code>https://www.googleapis.com/auth/cloud_debugger</code></li>\n  <li><code>https://www.googleapis.com/auth/logging.admin</code></li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Integer"],"description":"Default timeout to use in requests. Optional.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A hash of values to override the default\nbehavior of the API client. Optional.","optional":true,"default":"nil","nullable":true},{"name":"project","types":["String"],"description":"Project identifier for the Stackdriver Debugger\nservice.","optional":true,"default":"nil","nullable":true},{"name":"keyfile","types":["String","Hash"],"description":"Keyfile downloaded from Google Cloud:\neither the JSON data or the path to a readable file.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"ArgumentError","description":""}],"returns":[{"types":["<a data-custom-type=\"google/cloud/debugger/project\">Google::Cloud::Debugger::Project</a>"],"description":""}]},{"id":"configure-class","type":"class","name":"configure","title":["Google","Cloud","Debugger.configure"],"description":"<p>Configure the Stackdriver Debugger agent.</p>\n\n<p>The following Stackdriver Debugger configuration parameters are\nsupported:</p>\n\n<ul>\n  <li><code>project_id</code> - (String) Project identifier for the Stackdriver\nDebugger service you are connecting to. (The parameter <code>project</code> is\nconsidered deprecated, but may also be used.)</li>\n  <li><code>credentials</code> - (String, Hash, Google::Auth::Credentials) The path to\nthe keyfile as a String, the contents of the keyfile as a Hash, or a\nGoogle::Auth::Credentials object. (See <a data-custom-type=\"google/cloud/debugger/credentials\">Debugger::Credentials</a>) (The\nparameter <code>keyfile</code> is considered deprecated, but may also be used.)</li>\n  <li><code>service_name</code> - (String) Name for the debuggee application.</li>\n  <li><code>service_version</code> - (String) Version identifier for the debuggee\napplication.</li>\n  <li><code>root</code> - (String) The root directory of the debuggee application as an\nabsolute file path.</li>\n  <li><code>scope</code> - (String, Array<String>) The OAuth 2.0 scopes controlling\nthe set of resources and operations that the connection can access.</String></li>\n  <li><code>timeout</code> - (Integer) Default timeout to use in requests.</li>\n  <li><code>client_config</code> - (Hash) A hash of values to override the default\nbehavior of the API client.</li>\n  <li><code>allow_mutating_methods</code> - (boolean) Whether expressions and\nconditional breakpoints can call methods that could modify program\nstate. Defaults to false.</li>\n  <li><code>evaluation_time_limit</code> - (Numeric) Time limit in seconds for\nexpression evaluation. Defaults to 0.05.</li>\n</ul>\n\n<p>See the <a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/stackdriver/guides/instrumentation_configuration\">Configuration\nGuide</a>\nfor full configuration parameters.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger.rb#L445","resources":[],"examples":[],"params":[{"name":"yield","types":["block"],"description":"","optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Google::Cloud::Config"],"description":"The configuration object the\nGoogle::Cloud::Debugger module uses."}]},{"id":"allow_mutating_methods!-class","type":"class","name":"allow_mutating_methods!","title":["Google","Cloud","Debugger.allow_mutating_methods!"],"description":"<p>Allow calling of potentially state-changing methods even if mutation\ndetection is configured to be active.</p>\n\n<p>Generally it is unwise to run code that may change the program state\n(e.g. modifying instance variables or causing other side effects) in a\nbreakpoint expression, because it could change the behavior of your\nprogram. However, the checks are currently quite conservative, and may\nblock code that is actually safe to run. If you are certain your\nexpression is safe to evaluate, you may use this method to disable\nside effect checks.</p>\n\n<p>This method may be called with a block, in which case checks are\ndisabled within the block. It may also be called without a block to\ndisable side effect checks for the rest of the current expression; the\ndefault setting will be restored for the next expression.</p>\n\n<p>This method may be called only from a debugger condition or expression\nevaluation, and will throw an exception if you call it from normal\napplication code. Set the <code>allow_mutating_methods</code> configuration if you\nwant to disable the side effect checker globally for your app.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger.rb#L523","resources":[],"examples":[{"caption":"<p>Disabling side effect detection in a block</p>","code":"# This is an expression evaluated in a debugger snapshot\nGoogle::Cloud::Debugger.allow_mutating_methods! do\n  obj1.method_with_potential_side_effects\nend"},{"caption":"<p>Disabling side effect detection for the rest of the expression</p>","code":"# This is an expression evaluated in a debugger snapshot\nGoogle::Cloud::Debugger.allow_mutating_methods!\nobj1.method_with_potential_side_effects\nobj2.another_method_with_potential_side_effects"},{"caption":"<p>Globally disabling side effect detection at app initialization</p>","code":"require \"google/cloud/debugger\"\nGoogle::Cloud::Debugger.configure.allow_mutating_methods = true"}],"params":[],"exceptions":[],"returns":[]}]}