{"id":"google/cloud/bigquery/external/bigtablesource/column","name":"Column","title":["Google","Cloud","Bigquery","External","BigtableSource","Column"],"description":"<h1 id=\"bigtablesourcecolumn\">BigtableSource::Column</h1>\n\n<p>A Bigtable column to expose in the table schema along with its\ntypes.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2001","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\"\n    u.add_string \"email\"\n    u.add_integer \"age\"\n    u.add_boolean \"active\"\n  end\nend\n\ndata = bigquery.query \"SELECT * FROM my_ext_table\",\n                      external: { my_ext_table: bigtable_table }\n\ndata.each do |row|\n  puts row[:name]\nend"}],"methods":[{"id":"qualifier-instance","type":"instance","name":"qualifier","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#qualifier"],"description":"<p>Qualifier of the column. Columns in the parent column family that\nhas this exact qualifier are exposed as <code>.</code> field. If the\nqualifier is valid UTF-8 string, it will be represented as a UTF-8\nstring. Otherwise, it will represented as a ASCII-8BIT string.</p>\n\n<p>If the qualifier is not a valid BigQuery field identifier (does\nnot match <code>[a-zA-Z][a-zA-Z0-9_]*</code>) a valid identifier must be\nprovided as <code>field_name</code>.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2036","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\" do |col|\n      col.qualifier # \"user\"\n      col.qualifier = \"User\"\n      col.qualifier # \"User\"\n    end\n  end\nend"}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"qualifier=-instance","type":"instance","name":"qualifier=","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#qualifier="],"description":"<p>Set the qualifier of the column. Columns in the parent column\nfamily that has this exact qualifier are exposed as <code>.</code> field.\nValues that are valid UTF-8 strings will be treated as such. All\nother values will be treated as <code>BINARY</code>.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2065","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\" do |col|\n      col.qualifier # \"user\"\n      col.qualifier = \"User\"\n      col.qualifier # \"User\"\n    end\n  end\nend"}],"params":[{"name":"new_qualifier","types":["String"],"description":"New qualifier value","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"encoding-instance","type":"instance","name":"encoding","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#encoding"],"description":"<p>The encoding of the values when the type is not <code>STRING</code>.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2108","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_bytes \"name\" do |col|\n      col.encoding = \"TEXT\"\n      col.encoding # \"TEXT\"\n    end\n  end\nend"}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"encoding=-instance","type":"instance","name":"encoding=","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#encoding="],"description":"<p>Set the encoding of the values when the type is not <code>STRING</code>.\nAcceptable encoding values are:</p>\n\n<ul>\n  <li><code>TEXT</code> - indicates values are alphanumeric text strings.</li>\n  <li><code>BINARY</code> - indicates values are encoded using HBase\n<code>Bytes.toBytes</code> family of functions. This can be overridden on a\ncolumn.</li>\n</ul>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2138","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_bytes \"name\" do |col|\n      col.encoding = \"TEXT\"\n      col.encoding # \"TEXT\"\n    end\n  end\nend"}],"params":[{"name":"new_encoding","types":["String"],"description":"New encoding value","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"field_name-instance","type":"instance","name":"field_name","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#field_name"],"description":"<p>If the qualifier is not a valid BigQuery field identifier  (does\nnot match <code>[a-zA-Z][a-zA-Z0-9_]*</code>) a valid identifier must be\nprovided as the column field name and is used as field name in\nqueries.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2167","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_string \"001_name\", as: \"user\" do |col|\n      col.field_name # \"user\"\n      col.field_name = \"User\"\n      col.field_name # \"User\"\n    end\n  end\nend"}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"field_name=-instance","type":"instance","name":"field_name=","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#field_name="],"description":"<p>Sets the identifier to be used as the column field name in queries\nwhen the qualifier is not a valid BigQuery field identifier  (does\nnot match <code>[a-zA-Z][a-zA-Z0-9_]*</code>).</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2194","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_string \"001_name\", as: \"user\" do |col|\n      col.field_name # \"user\"\n      col.field_name = \"User\"\n      col.field_name # \"User\"\n    end\n  end\nend"}],"params":[{"name":"new_field_name","types":["String"],"description":"New field_name value","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"latest-instance","type":"instance","name":"latest","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#latest"],"description":"<p>Whether only the latest version of value in this column are\nexposed. Can also be set at the column family level. However, this\nvalue takes precedence when set at both levels.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2221","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\" do |col|\n      col.latest = true\n      col.latest # true\n    end\n  end\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"latest=-instance","type":"instance","name":"latest=","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#latest="],"description":"<p>Set whether only the latest version of value in this column are\nexposed. Can also be set at the column family level. However, this\nvalue takes precedence when set at both levels.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2247","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\" do |col|\n      col.latest = true\n      col.latest # true\n    end\n  end\nend"}],"params":[{"name":"new_latest","types":["Boolean"],"description":"New latest value","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"type-instance","type":"instance","name":"type","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#type"],"description":"<p>The type to convert the value in cells of this column. The values\nare expected to be encoded using HBase <code>Bytes.toBytes</code> function\nwhen using the <code>BINARY</code> encoding value. The following BigQuery\ntypes are allowed:</p>\n\n<ul>\n  <li><code>BYTES</code></li>\n  <li><code>STRING</code></li>\n  <li><code>INTEGER</code></li>\n  <li><code>FLOAT</code></li>\n  <li><code>BOOLEAN</code></li>\n</ul>\n\n<p>Default type is <code>BYTES</code>. Can also be set at the column family\nlevel. However, this value takes precedence when set at both\nlevels.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2284","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\" do |col|\n      col.type # \"STRING\"\n    end\n  end\nend"}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"type=-instance","type":"instance","name":"type=","title":["Google","Cloud","Bigquery","External","BigtableSource","Column#type="],"description":"<p>Set the type to convert the value in cells of this column. The\nvalues are expected to be encoded using HBase <code>Bytes.toBytes</code>\nfunction when using the <code>BINARY</code> encoding value. The following\nBigQuery types are allowed:</p>\n\n<ul>\n  <li><code>BYTES</code></li>\n  <li><code>STRING</code></li>\n  <li><code>INTEGER</code></li>\n  <li><code>FLOAT</code></li>\n  <li><code>BOOLEAN</code></li>\n</ul>\n\n<p>Default type is <code>BYTES</code>. Can also be set at the column family\nlevel. However, this value takes precedence when set at both\nlevels.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L2322","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\" do |col|\n      col.type # \"STRING\"\n      col.type = \"BYTES\"\n      col.type # \"BYTES\"\n    end\n  end\nend"}],"params":[{"name":"new_type","types":["String"],"description":"New type value","optional":false,"nullable":false}],"exceptions":[],"returns":[]}]}