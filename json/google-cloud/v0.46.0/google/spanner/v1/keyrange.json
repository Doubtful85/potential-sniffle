{"id":"google/spanner/v1/keyrange","name":"KeyRange","title":["Google","Spanner","V1","KeyRange"],"description":"<p>KeyRange represents a range of rows in a table or index.</p>\n\n<p>A range has a start key and an end key. These keys can be open or\nclosed, indicating if the range includes rows with that key.</p>\n\n<p>Keys are represented by lists, where the ith value in the list\ncorresponds to the ith component of the table or index primary key.\nIndividual values are encoded as described Google::Spanner::V1::TypeCode.</p>\n\n<p>For example, consider the following table definition:</p>\n\n<pre><code>CREATE TABLE UserEvents (\n  UserName STRING(MAX),\n  EventDate STRING(10)\n) PRIMARY KEY(UserName, EventDate);\n</code></pre>\n\n<p>The following keys name rows in this table:</p>\n\n<pre><code>[\"Bob\", \"2014-09-23\"]\n[\"Alfred\", \"2015-06-12\"]\n</code></pre>\n\n<p>Since the +UserEvents+ table’s +PRIMARY KEY+ clause names two\ncolumns, each +UserEvents+ key has two elements; the first is the\n+UserName+, and the second is the +EventDate+.</p>\n\n<p>Key ranges with multiple components are interpreted\nlexicographically by component using the table or index key’s declared\nsort order. For example, the following range returns all events for\nuser +”Bob”+ that occurred in the year 2015:</p>\n\n<pre><code>\"start_closed\": [\"Bob\", \"2015-01-01\"]\n\"end_closed\": [\"Bob\", \"2015-12-31\"]\n</code></pre>\n\n<p>Start and end keys can omit trailing key components. This affects the\ninclusion and exclusion of rows that exactly match the provided key\ncomponents: if the key is closed, then rows that exactly match the\nprovided components are included; if the key is open, then rows\nthat exactly match are not included.</p>\n\n<p>For example, the following range includes all events for +”Bob”+ that\noccurred during and after the year 2000:</p>\n\n<pre><code>\"start_closed\": [\"Bob\", \"2000-01-01\"]\n\"end_closed\": [\"Bob\"]\n</code></pre>\n\n<p>The next example retrieves all events for +”Bob”+:</p>\n\n<pre><code>\"start_closed\": [\"Bob\"]\n\"end_closed\": [\"Bob\"]\n</code></pre>\n\n<p>To retrieve events before the year 2000:</p>\n\n<pre><code>\"start_closed\": [\"Bob\"]\n\"end_open\": [\"Bob\", \"2000-01-01\"]\n</code></pre>\n\n<p>The following range includes all rows in the table:</p>\n\n<pre><code>\"start_closed\": []\n\"end_closed\": []\n</code></pre>\n\n<p>This range returns all users whose +UserName+ begins with any\ncharacter from A to C:</p>\n\n<pre><code>\"start_closed\": [\"A\"]\n\"end_open\": [\"D\"]\n</code></pre>\n\n<p>This range returns all users whose +UserName+ begins with B:</p>\n\n<pre><code>\"start_closed\": [\"B\"]\n\"end_open\": [\"C\"]\n</code></pre>\n\n<p>Key ranges honor column sort order. For example, suppose a table is\ndefined as follows:</p>\n\n<pre><code>CREATE TABLE DescendingSortedTable {\n  Key INT64,\n  ...\n) PRIMARY KEY(Key DESC);\n</code></pre>\n\n<p>The following range retrieves all rows with key values between 1\nand 100 inclusive:</p>\n\n<pre><code>\"start_closed\": [\"100\"]\n\"end_closed\": [\"1\"]\n</code></pre>\n\n<p>Note that 100 is passed as the start, and 1 is passed as the end,\nbecause +Key+ is a descending column in the schema.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"methods":[{"id":"start_closed-instance","type":"instance","name":"start_closed","title":["Google","Spanner","V1","KeyRange#start_closed"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/listvalue\">Google::Protobuf::ListValue</a>"],"description":"If the start is closed, then the range includes all rows whose\nfirst +len(start_closed)+ key columns exactly match +start_closed+."}]},{"id":"start_closed=-instance","type":"instance","name":"start_closed=","title":["Google","Spanner","V1","KeyRange#start_closed="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/listvalue\">Google::Protobuf::ListValue</a>"],"description":"If the start is closed, then the range includes all rows whose\nfirst +len(start_closed)+ key columns exactly match +start_closed+."}]},{"id":"start_open-instance","type":"instance","name":"start_open","title":["Google","Spanner","V1","KeyRange#start_open"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/listvalue\">Google::Protobuf::ListValue</a>"],"description":"If the start is open, then the range excludes rows whose first\n+len(start_open)+ key columns exactly match +start_open+."}]},{"id":"start_open=-instance","type":"instance","name":"start_open=","title":["Google","Spanner","V1","KeyRange#start_open="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/listvalue\">Google::Protobuf::ListValue</a>"],"description":"If the start is open, then the range excludes rows whose first\n+len(start_open)+ key columns exactly match +start_open+."}]},{"id":"end_closed-instance","type":"instance","name":"end_closed","title":["Google","Spanner","V1","KeyRange#end_closed"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/listvalue\">Google::Protobuf::ListValue</a>"],"description":"If the end is closed, then the range includes all rows whose\nfirst +len(end_closed)+ key columns exactly match +end_closed+."}]},{"id":"end_closed=-instance","type":"instance","name":"end_closed=","title":["Google","Spanner","V1","KeyRange#end_closed="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/listvalue\">Google::Protobuf::ListValue</a>"],"description":"If the end is closed, then the range includes all rows whose\nfirst +len(end_closed)+ key columns exactly match +end_closed+."}]},{"id":"end_open-instance","type":"instance","name":"end_open","title":["Google","Spanner","V1","KeyRange#end_open"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/listvalue\">Google::Protobuf::ListValue</a>"],"description":"If the end is open, then the range excludes rows whose first\n+len(end_open)+ key columns exactly match +end_open+."}]},{"id":"end_open=-instance","type":"instance","name":"end_open=","title":["Google","Spanner","V1","KeyRange#end_open="],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/doc/google/spanner/v1/keys.rb#L121","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/listvalue\">Google::Protobuf::ListValue</a>"],"description":"If the end is open, then the range excludes rows whose first\n+len(end_open)+ key columns exactly match +end_open+."}]}]}