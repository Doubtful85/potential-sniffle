{"id":"google/cloud/bigquery/external/bigtablesource/columnfamily","name":"ColumnFamily","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily"],"description":"<h1 id=\"bigtablesourcecolumnfamily\">BigtableSource::ColumnFamily</h1>\n\n<p>A Bigtable column family used to expose in the table schema along\nwith its types and columns.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1463","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\"\n    u.add_string \"email\"\n    u.add_integer \"age\"\n    u.add_boolean \"active\"\n  end\nend\n\ndata = bigquery.query \"SELECT * FROM my_ext_table\",\n                      external: { my_ext_table: bigtable_table }\n\ndata.each do |row|\n  puts row[:name]\nend"}],"methods":[{"id":"encoding-instance","type":"instance","name":"encoding","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#encoding"],"description":"<p>The encoding of the values when the type is not <code>STRING</code>.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1490","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.encoding = \"UTF-8\"\n  end\nend\n\nbigtable_table.families[0].encoding #=> \"UTF-8\""}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"encoding=-instance","type":"instance","name":"encoding=","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#encoding="],"description":"<p>Set the encoding of the values when the type is not <code>STRING</code>.\nAcceptable encoding values are:</p>\n\n<ul>\n  <li><code>TEXT</code> - indicates values are alphanumeric text strings.</li>\n  <li><code>BINARY</code> - indicates values are encoded using HBase\n<code>Bytes.toBytes</code> family of functions. This can be overridden on a\ncolumn.</li>\n</ul>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1519","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.encoding = \"UTF-8\"\n  end\nend\n\nbigtable_table.families[0].encoding #=> \"UTF-8\""}],"params":[{"name":"new_encoding","types":["String"],"description":"New encoding value","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"family_id-instance","type":"instance","name":"family_id","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#family_id"],"description":"<p>Identifier of the column family.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1541","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\"\nend\n\nbigtable_table.families[0].family_id #=> \"user\""}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"family_id=-instance","type":"instance","name":"family_id=","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#family_id="],"description":"<p>Set the identifier of the column family.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1564","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\"\nend\n\nbigtable_table.families[0].family_id #=> \"user\"\nbigtable_table.families[0].family_id = \"User\"\nbigtable_table.families[0].family_id #=> \"User\""}],"params":[{"name":"new_family_id","types":["String"],"description":"New family_id value","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"latest-instance","type":"instance","name":"latest","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#latest"],"description":"<p>Whether only the latest version of value are exposed for all\ncolumns in this column family.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1589","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.latest = true\n  end\nend\n\nbigtable_table.families[0].latest #=> true"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"latest=-instance","type":"instance","name":"latest=","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#latest="],"description":"<p>Set whether only the latest version of value are exposed for all\ncolumns in this column family.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1613","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.latest = true\n  end\nend\n\nbigtable_table.families[0].latest #=> true"}],"params":[{"name":"new_latest","types":["Boolean"],"description":"New latest value","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"type-instance","type":"instance","name":"type","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#type"],"description":"<p>The type to convert the value in cells of this column family. The\nvalues are expected to be encoded using HBase <code>Bytes.toBytes</code>\nfunction when using the <code>BINARY</code> encoding value. The following\nBigQuery types are allowed:</p>\n\n<ul>\n  <li><code>BYTES</code></li>\n  <li><code>STRING</code></li>\n  <li><code>INTEGER</code></li>\n  <li><code>FLOAT</code></li>\n  <li><code>BOOLEAN</code></li>\n</ul>\n\n<p>Default type is <code>BYTES</code>. This can be overridden on a column.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1648","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.type = \"STRING\"\n  end\nend\n\nbigtable_table.families[0].type #=> \"STRING\""}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"type=-instance","type":"instance","name":"type=","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#type="],"description":"<p>Set the type to convert the value in cells of this column family.\nThe values are expected to be encoded using HBase <code>Bytes.toBytes</code>\nfunction when using the <code>BINARY</code> encoding value. The following\nBigQuery types are allowed:</p>\n\n<ul>\n  <li><code>BYTES</code></li>\n  <li><code>STRING</code></li>\n  <li><code>INTEGER</code></li>\n  <li><code>FLOAT</code></li>\n  <li><code>BOOLEAN</code></li>\n</ul>\n\n<p>Default type is <code>BYTES</code>. This can be overridden on a column.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1682","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.add_family \"user\" do |u|\n    u.type = \"STRING\"\n  end\nend\n\nbigtable_table.families[0].type #=> \"STRING\""}],"params":[{"name":"new_type","types":["String"],"description":"New type value","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"columns-instance","type":"instance","name":"columns","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#columns"],"description":"<p>Lists of columns that should be exposed as individual fields.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1710","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\"\n    u.add_string \"email\"\n    u.add_integer \"age\"\n    u.add_boolean \"active\"\n  end\nend\n\nbigtable_table.families[0].columns.count #=> 4"}],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigquery/external/bigtablesource/column\">BigtableSource::Column</a>&gt;"],"description":""}]},{"id":"add_column-instance","type":"instance","name":"add_column","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#add_column"],"description":"<p>Add a column to the column family to expose in the table schema\nalong with its types.</p>\n\n<ul>\n  <li><code>BYTES</code></li>\n  <li><code>STRING</code></li>\n  <li><code>INTEGER</code></li>\n  <li><code>FLOAT</code></li>\n  <li><code>BOOLEAN</code></li>\n</ul>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1752","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_column \"name\", type: \"STRING\"\n  end\nend"}],"params":[{"name":"qualifier","types":["String"],"description":"Qualifier of the column. See\nBigtableSource::Column#qualifier.","optional":false,"nullable":false},{"name":"as","types":["String"],"description":"A valid identifier to be used as the column\nfield name if the qualifier is not a valid BigQuery field\nidentifier (i.e. does not match <code>[a-zA-Z][a-zA-Z0-9_]*</code>). See\nBigtableSource::Column#field_name.","optional":true,"default":"nil","nullable":true},{"name":"type","types":["String"],"description":"The type to convert the value in cells of\nthis column. See BigtableSource::Column#type. The following\nBigQuery types are allowed:","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"a block for setting the column","optional":true,"nullable":false},{"name":"yield.column","types":["BigtableSource::Column"],"description":"the column object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigquery/external/bigtablesource/column\">BigtableSource::Column</a>&gt;"],"description":""}]},{"id":"add_bytes-instance","type":"instance","name":"add_bytes","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#add_bytes"],"description":"<p>Add a column to the column family to expose in the table schema\nthat is specified as the <code>BYTES</code> type.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1792","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_bytes \"avatar\"\n  end\nend"}],"params":[{"name":"qualifier","types":["String"],"description":"Qualifier of the column. See\nBigtableSource::Column#qualifier.","optional":false,"nullable":false},{"name":"as","types":["String"],"description":"A valid identifier to be used as the column\nfield name if the qualifier is not a valid BigQuery field\nidentifier (i.e. does not match <code>[a-zA-Z][a-zA-Z0-9_]*</code>). See\nBigtableSource::Column#field_name.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"a block for setting the column","optional":true,"nullable":false},{"name":"yield.column","types":["BigtableSource::Column"],"description":"the column object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigquery/external/bigtablesource/column\">BigtableSource::Column</a>&gt;"],"description":""}]},{"id":"add_string-instance","type":"instance","name":"add_string","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#add_string"],"description":"<p>Add a column to the column family to expose in the table schema\nthat is specified as the <code>STRING</code> type.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1827","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_string \"name\"\n  end\nend"}],"params":[{"name":"qualifier","types":["String"],"description":"Qualifier of the column. See\nBigtableSource::Column#qualifier.","optional":false,"nullable":false},{"name":"as","types":["String"],"description":"A valid identifier to be used as the column\nfield name if the qualifier is not a valid BigQuery field\nidentifier (i.e. does not match <code>[a-zA-Z][a-zA-Z0-9_]*</code>). See\nBigtableSource::Column#field_name.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"a block for setting the column","optional":true,"nullable":false},{"name":"yield.column","types":["BigtableSource::Column"],"description":"the column object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigquery/external/bigtablesource/column\">BigtableSource::Column</a>&gt;"],"description":""}]},{"id":"add_integer-instance","type":"instance","name":"add_integer","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#add_integer"],"description":"<p>Add a column to the column family to expose in the table schema\nthat is specified as the <code>INTEGER</code> type.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1862","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_integer \"age\"\n  end\nend"}],"params":[{"name":"qualifier","types":["String"],"description":"Qualifier of the column. See\nBigtableSource::Column#qualifier.","optional":false,"nullable":false},{"name":"as","types":["String"],"description":"A valid identifier to be used as the column\nfield name if the qualifier is not a valid BigQuery field\nidentifier (i.e. does not match <code>[a-zA-Z][a-zA-Z0-9_]*</code>). See\nBigtableSource::Column#field_name.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"a block for setting the column","optional":true,"nullable":false},{"name":"yield.column","types":["BigtableSource::Column"],"description":"the column object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigquery/external/bigtablesource/column\">BigtableSource::Column</a>&gt;"],"description":""}]},{"id":"add_float-instance","type":"instance","name":"add_float","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#add_float"],"description":"<p>Add a column to the column family to expose in the table schema\nthat is specified as the <code>FLOAT</code> type.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1897","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_float \"score\"\n  end\nend"}],"params":[{"name":"qualifier","types":["String"],"description":"Qualifier of the column. See\nBigtableSource::Column#qualifier.","optional":false,"nullable":false},{"name":"as","types":["String"],"description":"A valid identifier to be used as the column\nfield name if the qualifier is not a valid BigQuery field\nidentifier (i.e. does not match <code>[a-zA-Z][a-zA-Z0-9_]*</code>). See\nBigtableSource::Column#field_name.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"a block for setting the column","optional":true,"nullable":false},{"name":"yield.column","types":["BigtableSource::Column"],"description":"the column object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigquery/external/bigtablesource/column\">BigtableSource::Column</a>&gt;"],"description":""}]},{"id":"add_boolean-instance","type":"instance","name":"add_boolean","title":["Google","Cloud","Bigquery","External","BigtableSource","ColumnFamily#add_boolean"],"description":"<p>Add a column to the column family to expose in the table schema\nthat is specified as the <code>BOOLEAN</code> type.</p>","source":"google-cloud-bigquery/lib/google/cloud/bigquery/external.rb#L1932","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigquery\"\n\nbigquery = Google::Cloud::Bigquery.new\n\nbigtable_url = \"https://googleapis.com/bigtable/projects/...\"\nbigtable_table = bigquery.external bigtable_url do |bt|\n  bt.rowkey_as_string = true\n  bt.add_family \"user\" do |u|\n    u.add_boolean \"active\"\n  end\nend"}],"params":[{"name":"qualifier","types":["String"],"description":"Qualifier of the column. See\nBigtableSource::Column#qualifier.","optional":false,"nullable":false},{"name":"as","types":["String"],"description":"A valid identifier to be used as the column\nfield name if the qualifier is not a valid BigQuery field\nidentifier (i.e. does not match <code>[a-zA-Z][a-zA-Z0-9_]*</code>). See\nBigtableSource::Column#field_name.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"a block for setting the column","optional":true,"nullable":false},{"name":"yield.column","types":["BigtableSource::Column"],"description":"the column object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigquery/external/bigtablesource/column\">BigtableSource::Column</a>&gt;"],"description":""}]}]}