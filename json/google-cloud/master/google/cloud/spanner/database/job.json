{"id":"google/cloud/spanner/database/job","name":"Job","title":["Google","Cloud","Spanner","Database","Job"],"description":"<h1 id=\"job\">Job</h1>\n\n<p>A resource representing the long-running, asynchronous processing of\na database create or update operation. The job can be refreshed to\nretrieve the database object once the operation has been completed.</p>\n\n<p>See <a data-custom-type=\"google/cloud/spanner/project\" data-method=\"create_database-instance\">Project#create_database</a> and <a data-custom-type=\"google/cloud/spanner/database\" data-method=\"update-instance\">Database#update</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/database/job.rb#L51","resources":[{"title":"Long-running Operation","link":"https://cloud.google.com/spanner/reference/rpc/google.longrunning#google.longrunning.Operation"}],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\njob = spanner.create_database \"my-instance\",\n                              \"my-new-database\"\n\njob.done? #=> false\njob.reload! # API call\njob.done? #=> true\n\nif job.error?\n  status = job.error\nelse\n  database = job.database\nend"}],"methods":[{"id":"database-instance","type":"instance","name":"database","title":["Google","Cloud","Spanner","Database","Job#database"],"description":"<p>The database that is the object of the operation.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/database/job.rb#L86","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\njob = spanner.create_database \"my-instance\",\n                              \"my-new-database\"\n\njob.done? #=> false\njob.reload!\njob.done? #=> true\ndatabase = job.database"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/database\">Google::Cloud::Spanner::Database</a>","nil"],"description":"The database, or\n<code>nil</code> if the operation is not complete."}]},{"id":"done?-instance","type":"instance","name":"done?","title":["Google","Cloud","Spanner","Database","Job#done?"],"description":"<p>Checks if the processing of the database operation is complete.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/database/job.rb#L107","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\njob = spanner.create_database \"my-instance\",\n                              \"my-new-database\"\n\njob.done? #=> false"}],"params":[],"exceptions":[],"returns":[{"types":["boolean"],"description":"<code>true</code> when complete, <code>false</code> otherwise."}]},{"id":"error?-instance","type":"instance","name":"error?","title":["Google","Cloud","Spanner","Database","Job#error?"],"description":"<p>Checks if the processing of the database operation has errored.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/database/job.rb#L126","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\njob = spanner.create_database \"my-instance\",\n                              \"my-new-database\"\n\njob.error? #=> false"}],"params":[],"exceptions":[],"returns":[{"types":["boolean"],"description":"<code>true</code> when errored, <code>false</code> otherwise."}]},{"id":"error-instance","type":"instance","name":"error","title":["Google","Cloud","Spanner","Database","Job#error"],"description":"<p>The status if the operation associated with this job produced an\nerror.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/database/job.rb#L149","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\njob = spanner.create_database \"my-instance\",\n                              \"my-new-database\"\n\njob.error? # true\n\nerror = job.error"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/status\">Google::Cloud::Spanner::Status</a>","nil"],"description":"A status object with\nthe status code and message, or <code>nil</code> if no error occurred."}]},{"id":"reload!-instance","type":"instance","name":"reload!","title":["Google","Cloud","Spanner","Database","Job#reload!"],"description":"<p>Reloads the job with current data from the long-running,\nasynchronous processing of a database operation.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/database/job.rb#L173","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\njob = spanner.create_database \"my-instance\",\n                              \"my-new-database\"\n\njob.done? #=> false\njob.reload! # API call\njob.done? #=> true"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/database/job\">Google::Cloud::Spanner::Database::Job</a>"],"description":"The same job\ninstance."}]},{"id":"wait_until_done!-instance","type":"instance","name":"wait_until_done!","title":["Google","Cloud","Spanner","Database","Job#wait_until_done!"],"description":"<p>Reloads the job until the operation is complete. The delay between\nreloads will incrementally increase.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/database/job.rb#L195","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\n\njob = spanner.create_database \"my-instance\",\n                              \"my-new-database\"\n\njob.done? #=> false\njob.wait_until_done!\njob.done? #=> true"}],"params":[],"exceptions":[],"returns":[]}]}