{"id":"google/cloud/dataproc/v1/clustercontrollerclient","name":"ClusterControllerClient","title":["Google","Cloud","Dataproc","V1","ClusterControllerClient"],"description":"<p>The ClusterControllerService provides methods to manage clusters\nof Google Compute Engine instances.</p>","source":"google-cloud-dataproc/lib/google/cloud/dataproc/v1/cluster_controller_client.rb#L41","resources":[],"examples":[],"methods":[{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Dataproc","V1","ClusterControllerClient#initialize"],"description":"","source":"google-cloud-dataproc/lib/google/cloud/dataproc/v1/cluster_controller_client.rb#L106","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/dataproc/v1/clustercontrollerclient\">ClusterControllerClient</a>"],"description":"a new instance of ClusterControllerClient"}]},{"id":"create_cluster-instance","type":"instance","name":"create_cluster","title":["Google","Cloud","Dataproc","V1","ClusterControllerClient#create_cluster"],"description":"<p>Creates a cluster in a project.</p>","source":"google-cloud-dataproc/lib/google/cloud/dataproc/v1/cluster_controller_client.rb#L280","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dataproc\"\n\ncluster_controller_client = Google::Cloud::Dataproc::ClusterController.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +region+:\nregion = ''\n\n# TODO: Initialize +cluster+:\ncluster = {}\n\n# Register a callback during the method call.\noperation = cluster_controller_client.create_cluster(project_id, region, cluster) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"project_id","types":["String"],"description":"Required. The ID of the Google Cloud Platform project that the cluster\nbelongs to.","optional":false,"nullable":false},{"name":"region","types":["String"],"description":"Required. The Cloud Dataproc region in which to handle the request.","optional":false,"nullable":false},{"name":"cluster","types":["Google::Cloud::Dataproc::V1::Cluster | Hash"],"description":"Required. The cluster to create.\nA hash of the same form as <code>Google::Cloud::Dataproc::V1::Cluster</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]},{"id":"update_cluster-instance","type":"instance","name":"update_cluster","title":["Google","Cloud","Dataproc","V1","ClusterControllerClient#update_cluster"],"description":"<p>Updates a cluster in a project.</p>","source":"google-cloud-dataproc/lib/google/cloud/dataproc/v1/cluster_controller_client.rb#L417","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dataproc\"\n\ncluster_controller_client = Google::Cloud::Dataproc::ClusterController.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +region+:\nregion = ''\n\n# TODO: Initialize +cluster_name+:\ncluster_name = ''\n\n# TODO: Initialize +cluster+:\ncluster = {}\n\n# TODO: Initialize +update_mask+:\nupdate_mask = {}\n\n# Register a callback during the method call.\noperation = cluster_controller_client.update_cluster(project_id, region, cluster_name, cluster, update_mask) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"project_id","types":["String"],"description":"Required. The ID of the Google Cloud Platform project the\ncluster belongs to.","optional":false,"nullable":false},{"name":"region","types":["String"],"description":"Required. The Cloud Dataproc region in which to handle the request.","optional":false,"nullable":false},{"name":"cluster_name","types":["String"],"description":"Required. The cluster name.","optional":false,"nullable":false},{"name":"cluster","types":["Google::Cloud::Dataproc::V1::Cluster | Hash"],"description":"Required. The changes to the cluster.\nA hash of the same form as <code>Google::Cloud::Dataproc::V1::Cluster</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"update_mask","types":["Google::Protobuf::FieldMask | Hash"],"description":"Required. Specifies the path, relative to +Cluster+, of\nthe field to update. For example, to change the number of workers\nin a cluster to 5, the +update_mask+ parameter would be\nspecified as +config.worker_config.num_instances+,\nand the +PATCH+ request body would specify the new value, as follows:</p>\n\n<pre><code>{\n  \"config\":{\n    \"workerConfig\":{\n      \"numInstances\":\"5\"\n    }\n  }\n} Similarly, to change the number of preemptible workers in a cluster to 5, the +update_mask+ parameter would be +config.secondary_worker_config.num_instances+, and the +PATCH+ request body would be set as follows:\n\n{\n  \"config\":{\n    \"secondaryWorkerConfig\":{\n      \"numInstances\":\"5\"\n    }\n  }\n} &lt;strong&gt;Note:&lt;/strong&gt; Currently, only the following fields can be updated:\n</code></pre>\n\n<table class=\"table\">\n <tbody>\n <tr>\n <td><strong>Mask</strong></td>\n <td><strong>Purpose</strong></td>\n </tr>\n <tr>\n <td><strong><em>labels</em></strong></td>\n <td>Update labels</td>\n </tr>\n <tr>\n <td><strong><em>config.worker_config.num_instances</em></strong></td>\n <td>Resize primary worker group</td>\n </tr>\n <tr>\n <td><strong><em>config.secondary_worker_config.num_instances</em></strong></td>\n <td>Resize secondary worker group</td>\n </tr>\n </tbody>\n </table>\n<p>A hash of the same form as <code>Google::Protobuf::FieldMask</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]},{"id":"delete_cluster-instance","type":"instance","name":"delete_cluster","title":["Google","Cloud","Dataproc","V1","ClusterControllerClient#delete_cluster"],"description":"<p>Deletes a cluster in a project.</p>","source":"google-cloud-dataproc/lib/google/cloud/dataproc/v1/cluster_controller_client.rb#L498","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dataproc\"\n\ncluster_controller_client = Google::Cloud::Dataproc::ClusterController.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +region+:\nregion = ''\n\n# TODO: Initialize +cluster_name+:\ncluster_name = ''\n\n# Register a callback during the method call.\noperation = cluster_controller_client.delete_cluster(project_id, region, cluster_name) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"project_id","types":["String"],"description":"Required. The ID of the Google Cloud Platform project that the cluster\nbelongs to.","optional":false,"nullable":false},{"name":"region","types":["String"],"description":"Required. The Cloud Dataproc region in which to handle the request.","optional":false,"nullable":false},{"name":"cluster_name","types":["String"],"description":"Required. The cluster name.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]},{"id":"get_cluster-instance","type":"instance","name":"get_cluster","title":["Google","Cloud","Dataproc","V1","ClusterControllerClient#get_cluster"],"description":"<p>Gets the resource representation for a cluster in a project.</p>","source":"google-cloud-dataproc/lib/google/cloud/dataproc/v1/cluster_controller_client.rb#L552","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dataproc\"\n\ncluster_controller_client = Google::Cloud::Dataproc::ClusterController.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +region+:\nregion = ''\n\n# TODO: Initialize +cluster_name+:\ncluster_name = ''\nresponse = cluster_controller_client.get_cluster(project_id, region, cluster_name)"}],"params":[{"name":"project_id","types":["String"],"description":"Required. The ID of the Google Cloud Platform project that the cluster\nbelongs to.","optional":false,"nullable":false},{"name":"region","types":["String"],"description":"Required. The Cloud Dataproc region in which to handle the request.","optional":false,"nullable":false},{"name":"cluster_name","types":["String"],"description":"Required. The cluster name.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Dataproc::V1::Cluster"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/dataproc/v1/cluster\">Google::Cloud::Dataproc::V1::Cluster</a>"],"description":""}]},{"id":"list_clusters-instance","type":"instance","name":"list_clusters","title":["Google","Cloud","Dataproc","V1","ClusterControllerClient#list_clusters"],"description":"<p>Lists all regions/{region}/clusters in a project.</p>","source":"google-cloud-dataproc/lib/google/cloud/dataproc/v1/cluster_controller_client.rb#L636","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dataproc\"\n\ncluster_controller_client = Google::Cloud::Dataproc::ClusterController.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +region+:\nregion = ''\n\n# Iterate over all results.\ncluster_controller_client.list_clusters(project_id, region).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\ncluster_controller_client.list_clusters(project_id, region).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"project_id","types":["String"],"description":"Required. The ID of the Google Cloud Platform project that the cluster\nbelongs to.","optional":false,"nullable":false},{"name":"region","types":["String"],"description":"Required. The Cloud Dataproc region in which to handle the request.","optional":false,"nullable":false},{"name":"filter","types":["String"],"description":"Optional. A filter constraining the clusters to list. Filters are\ncase-sensitive and have the following syntax:</p>\n\n<p>field = value [AND [field = value]] …</p>\n\n<p>where <strong>field</strong> is one of +status.state+, +clusterName+, or +labels.[KEY]+,\nand +[KEY]+ is a label key. <strong>value</strong> can be +*+ to match all values.\n+status.state+ can be one of the following: +ACTIVE+, +INACTIVE+,\n+CREATING+, +RUNNING+, +ERROR+, +DELETING+, or +UPDATING+. +ACTIVE+\ncontains the +CREATING+, +UPDATING+, and +RUNNING+ states. +INACTIVE+\ncontains the +DELETING+ and +ERROR+ states.\n+clusterName+ is the name of the cluster provided at creation time.\nOnly the logical +AND+ operator is supported; space-separated items are\ntreated as having an implicit +AND+ operator.</p>\n\n<p>Example filter:</p>\n\n<p>status.state = ACTIVE AND clusterName = mycluster\nAND labels.env = staging AND labels.starred = *","optional":true,"default":"nil","nullable":true},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Cloud::Dataproc::V1::Cluster>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/cloud/dataproc/v1/cluster\">Google::Cloud::Dataproc::V1::Cluster</a>&gt;"],"description":"An enumerable of Google::Cloud::Dataproc::V1::Cluster instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"diagnose_cluster-instance","type":"instance","name":"diagnose_cluster","title":["Google","Cloud","Dataproc","V1","ClusterControllerClient#diagnose_cluster"],"description":"<p>Gets cluster diagnostic information.\nAfter the operation completes, the Operation.response field\ncontains +DiagnoseClusterOutputLocation+.</p>","source":"google-cloud-dataproc/lib/google/cloud/dataproc/v1/cluster_controller_client.rb#L710","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dataproc\"\n\ncluster_controller_client = Google::Cloud::Dataproc::ClusterController.new(version: :v1)\n\n# TODO: Initialize +project_id+:\nproject_id = ''\n\n# TODO: Initialize +region+:\nregion = ''\n\n# TODO: Initialize +cluster_name+:\ncluster_name = ''\n\n# Register a callback during the method call.\noperation = cluster_controller_client.diagnose_cluster(project_id, region, cluster_name) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"project_id","types":["String"],"description":"Required. The ID of the Google Cloud Platform project that the cluster\nbelongs to.","optional":false,"nullable":false},{"name":"region","types":["String"],"description":"Required. The Cloud Dataproc region in which to handle the request.","optional":false,"nullable":false},{"name":"cluster_name","types":["String"],"description":"Required. The cluster name.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]}]}