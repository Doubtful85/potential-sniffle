{"id":"google/cloud/monitoring/v3/alertpolicyserviceclient","name":"AlertPolicyServiceClient","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient"],"description":"<p>The AlertPolicyService API is used to manage (list, create, delete,\nedit) alert policies in Stackdriver Monitoring. An alerting policy is\na description of the conditions under which some aspect of your\nsystem is considered to be “unhealthy” and the ways to notify\npeople or services about this state. In addition to using this API, alert\npolicies can also be managed through\n<a href=\"https://cloud.google.com/monitoring/docs/\">Stackdriver Monitoring</a>,\nwhich can be reached by clicking the “Monitoring” tab in\n<a href=\"https://console.cloud.google.com/\">Cloud Console</a>.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L46","resources":[],"examples":[],"methods":[{"id":"project_path-class","type":"class","name":"project_path","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient.project_path"],"description":"<p>Returns a fully-qualified project resource name string.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L101","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"alert_policy_path-class","type":"class","name":"alert_policy_path","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient.alert_policy_path"],"description":"<p>Returns a fully-qualified alert_policy resource name string.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L111","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"alert_policy","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"alert_policy_condition_path-class","type":"class","name":"alert_policy_condition_path","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient.alert_policy_condition_path"],"description":"<p>Returns a fully-qualified alert_policy_condition resource name string.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L123","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"alert_policy","types":["String"],"description":"","optional":false,"nullable":false},{"name":"condition","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient#initialize"],"description":"","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L160","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/monitoring/v3/alertpolicyserviceclient\">AlertPolicyServiceClient</a>"],"description":"a new instance of AlertPolicyServiceClient"}]},{"id":"list_alert_policies-instance","type":"instance","name":"list_alert_policies","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient#list_alert_policies"],"description":"<p>Lists the existing alerting policies for the project.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L325","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/monitoring\"\n\nalert_policy_service_client = Google::Cloud::Monitoring::AlertPolicy.new(version: :v3)\nformatted_name = Google::Cloud::Monitoring::V3::AlertPolicyServiceClient.project_path(\"[PROJECT]\")\n\n# Iterate over all results.\nalert_policy_service_client.list_alert_policies(formatted_name).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\nalert_policy_service_client.list_alert_policies(formatted_name).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"name","types":["String"],"description":"The project whose alert policies are to be listed. The format is</p>\n\n<pre><code>projects/[PROJECT_ID]\n</code></pre>\n\n<p>Note that this field names the parent container in which the alerting\npolicies to be listed are stored. To retrieve a single alerting policy\nby name, use the\nGoogle::Monitoring::V3::AlertPolicyService::GetAlertPolicy\noperation, instead.","optional":false,"nullable":false},{"name":"filter","types":["String"],"description":"If provided, this field specifies the criteria that must be met by\nalert policies to be included in the response.</p>\n\n<p>For more details, see <a href=\"/monitoring/api/v3/sorting-and-filtering\">sorting and\nfiltering</a>.","optional":true,"default":"nil","nullable":true},{"name":"order_by","types":["String"],"description":"A comma-separated list of fields by which to sort the result. Supports\nthe same set of field references as the +filter+ field. Entries can be\nprefixed with a minus sign to sort by the field in descending order.</p>\n\n<p>For more details, see <a href=\"/monitoring/api/v3/sorting-and-filtering\">sorting and\nfiltering</a>.","optional":true,"default":"nil","nullable":true},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Monitoring::V3::AlertPolicy>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/monitoring/v3/alertpolicy\">Google::Monitoring::V3::AlertPolicy</a>&gt;"],"description":"An enumerable of Google::Monitoring::V3::AlertPolicy instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"get_alert_policy-instance","type":"instance","name":"get_alert_policy","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient#get_alert_policy"],"description":"<p>Gets a single alerting policy.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L363","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/monitoring\"\n\nalert_policy_service_client = Google::Cloud::Monitoring::AlertPolicy.new(version: :v3)\nformatted_name = Google::Cloud::Monitoring::V3::AlertPolicyServiceClient.alert_policy_path(\"[PROJECT]\", \"[ALERT_POLICY]\")\nresponse = alert_policy_service_client.get_alert_policy(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The alerting policy to retrieve. The format is</p>\n\n<pre><code>projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID]\n</code></pre>","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Monitoring::V3::AlertPolicy"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/monitoring/v3/alertpolicy\">Google::Monitoring::V3::AlertPolicy</a>"],"description":""}]},{"id":"create_alert_policy-instance","type":"instance","name":"create_alert_policy","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient#create_alert_policy"],"description":"<p>Creates a new alerting policy.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L409","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/monitoring\"\n\nalert_policy_service_client = Google::Cloud::Monitoring::AlertPolicy.new(version: :v3)\nformatted_name = Google::Cloud::Monitoring::V3::AlertPolicyServiceClient.project_path(\"[PROJECT]\")\n\n# TODO: Initialize +alert_policy+:\nalert_policy = {}\nresponse = alert_policy_service_client.create_alert_policy(formatted_name, alert_policy)"}],"params":[{"name":"name","types":["String"],"description":"The project in which to create the alerting policy. The format is\n+projects/[PROJECT_ID]+.</p>\n\n<p>Note that this field names the parent container in which the alerting\npolicy will be written, not the name of the created policy. The alerting\npolicy that is returned will have a name that contains a normalized\nrepresentation of this name as a prefix but adds a suffix of the form\n+/alertPolicies/[POLICY_ID]+, identifying the policy in the container.","optional":false,"nullable":false},{"name":"alert_policy","types":["Google::Monitoring::V3::AlertPolicy | Hash"],"description":"The requested alerting policy. You should omit the +name+ field in this\npolicy. The name will be returned in the new policy, including\na new [ALERT_POLICY_ID] value.\nA hash of the same form as <code>Google::Monitoring::V3::AlertPolicy</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Monitoring::V3::AlertPolicy"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/monitoring/v3/alertpolicy\">Google::Monitoring::V3::AlertPolicy</a>"],"description":""}]},{"id":"delete_alert_policy-instance","type":"instance","name":"delete_alert_policy","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient#delete_alert_policy"],"description":"<p>Deletes an alerting policy.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L444","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/monitoring\"\n\nalert_policy_service_client = Google::Cloud::Monitoring::AlertPolicy.new(version: :v3)\nformatted_name = Google::Cloud::Monitoring::V3::AlertPolicyServiceClient.alert_policy_path(\"[PROJECT]\", \"[ALERT_POLICY]\")\nalert_policy_service_client.delete_alert_policy(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The alerting policy to delete. The format is:</p>\n\n<pre><code>projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID]\n</code></pre>\n\n<p>For more information, see <a data-custom-type=\"google/monitoring/v3/alertpolicy\">AlertPolicy</a>.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":null,"description":"[]","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"update_alert_policy-instance","type":"instance","name":"update_alert_policy","title":["Google","Cloud","Monitoring","V3","AlertPolicyServiceClient#update_alert_policy"],"description":"<p>Updates an alerting policy. You can either replace the entire policy with\na new one or replace only certain fields in the current alerting policy by\nspecifying the fields to be updated via +updateMask+. Returns the\nupdated alerting policy.</p>","source":"google-cloud-monitoring/lib/google/cloud/monitoring/v3/alert_policy_service_client.rb#L509","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/monitoring\"\n\nalert_policy_service_client = Google::Cloud::Monitoring::AlertPolicy.new(version: :v3)\n\n# TODO: Initialize +alert_policy+:\nalert_policy = {}\nresponse = alert_policy_service_client.update_alert_policy(alert_policy)"}],"params":[{"name":"alert_policy","types":["Google::Monitoring::V3::AlertPolicy | Hash"],"description":"Required. The updated alerting policy or the updated values for the\nfields listed in +update_mask+.\nIf +update_mask+ is not empty, any fields in this policy that are\nnot in +update_mask+ are ignored.\nA hash of the same form as <code>Google::Monitoring::V3::AlertPolicy</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"update_mask","types":["Google::Protobuf::FieldMask | Hash"],"description":"Optional. A list of alerting policy field names. If this field is not\nempty, each listed field in the existing alerting policy is set to the\nvalue of the corresponding field in the supplied policy (+alert_policy+),\nor to the field’s default value if the field is not in the supplied\nalerting policy.  Fields not listed retain their previous value.</p>\n\n<p>Examples of valid field masks include +display_name+, +documentation+,\n+documentation.content+, +documentation.mime_type+, +user_labels+,\n+user_label.nameofkey+, +enabled+, +conditions+, +combiner+, etc.</p>\n\n<p>If this field is empty, then the supplied alerting policy replaces the\nexisting policy. It is the same as deleting the existing policy and\nadding the supplied policy, except for the following:</p>\n\n<ul>\n  <li>The new policy will have the same +[ALERT_POLICY_ID]+ as the former\npolicy. This gives you continuity with the former policy in your\nnotifications and incidents.</li>\n  <li>Conditions in the new policy will keep their former +[CONDITION_ID]+ if\nthe supplied condition includes the +name+ field with that\n+[CONDITION_ID]+. If the supplied condition omits the +name+ field,\nthen a new +[CONDITION_ID]+ is created.\nA hash of the same form as <code>Google::Protobuf::FieldMask</code>\ncan also be provided.</li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Monitoring::V3::AlertPolicy"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/monitoring/v3/alertpolicy\">Google::Monitoring::V3::AlertPolicy</a>"],"description":""}]}]}