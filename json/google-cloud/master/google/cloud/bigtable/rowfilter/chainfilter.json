{"id":"google/cloud/bigtable/rowfilter/chainfilter","name":"ChainFilter","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter"],"description":"<h1 id=\"chainfilter\">ChainFilter</h1>\n\n<p>A RowFilter which sends rows through several RowFilters in sequence.</p>\n\n<p>The elements of “filters” are chained together to process the input row:\nin row -&gt; f(0) -&gt; intermediate row -&gt; f(1) -&gt; … -&gt; f(N) -&gt; out row\nThe full chain is executed atomically.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L36","resources":[],"examples":[{"caption":"","code":"\nchain = Google::Cloud::Bigtable::RowFilter.chain\n# Add filters to chain filter\nchain.key(\"user-*\").label(\"users\")"}],"methods":[{"id":"chain-instance","type":"instance","name":"chain","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#chain"],"description":"<p>Add chain filter instance.</p>\n\n<p>A Chain RowFilter which sends rows through several RowFilters in sequence.</p>\n\n<p>The elements of “filters” are chained together to process the input row:\nin row -&gt; f(0) -&gt; intermediate row -&gt; f(1) -&gt; … -&gt; f(N) -&gt; out row\nThe full chain is executed atomically.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L68","resources":[],"examples":[{"caption":"<p>Create chain filter and add chain filter.</p>","code":"\nchain_1 = Google::Cloud::Bigtable::RowFilter.chain\n\n# Add filters to chain filter\nchain_1.key(\"user-*\").cells_per_row(5)\n\nfilter = Google::Cloud::Bigtable::RowFilter.chain\nfilter.chain(chain_1)\n\n# OR\nfilter = Google::Cloud::Bigtable::RowFilter.chain.chain(chain_1)"}],"params":[{"name":"filter","types":["SimpleFilter","ChainFilter","InterleaveFilter","ConditionFilter"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"interleave-instance","type":"instance","name":"interleave","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#interleave"],"description":"<p>Add interleave filter.</p>\n\n<p>A RowFilter which sends each row to each of several component\nRowFilters and interleaves the results.</p>\n\n<p>The elements of “filters” all process a copy of the input row, and the\nresults are pooled, sorted, and combined into a single output row.\nIf multiple cells are produced with the same column and timestamp,\nthey will all appear in the output row in an unspecified mutual order.\nConsider the following example, with three filters:</p>\n\n<pre><code>                             input row\n                                 |\n       -----------------------------------------------------\n       |                         |                         |\n      f(0)                      f(1)                      f(2)\n       |                         |                         |\n1: foo,bar,10,x             foo,bar,10,z              far,bar,7,a\n2: foo,blah,11,z            far,blah,5,x              far,blah,5,x\n       |                         |                         |\n       -----------------------------------------------------\n                                 |\n1:                      foo,bar,10,z   # could have switched with #2\n2:                      foo,bar,10,x   # could have switched with #1\n3:                      foo,blah,11,z\n4:                      far,bar,7,a\n5:                      far,blah,5,x   # identical to #6\n6:                      far,blah,5,x   # identical to #5\n</code></pre>\n\n<p>All interleaved filters are executed atomically.</p>\n\n<p>See <a data-custom-type=\"google/cloud/bigtable/rowfilter/interleavefilter\">Google::Cloud::Bigtable::RowFilter::InterleaveFilter</a></p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L121","resources":[],"examples":[{"caption":"<p>Add interleave filter to chain filter</p>","code":"\ninterleave = Google::Cloud::Bigtable::RowFilter.interleave\n\n# Add filters to interleave filter\ninterleave.key(\"user-*\").cells_per_column(3)\n\nchain = Google::Cloud::Bigtable::RowFilter.chain.interleave(interleave)"}],"params":[{"name":"filter","types":["SimpleFilter","ChainFilter","InterleaveFilter","ConditionFilter"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"condition-instance","type":"instance","name":"condition","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#condition"],"description":"<p>Add condition filter instance</p>\n\n<p>A RowFilter which evaluates one of two possible RowFilters, depending on\nwhether or not a predicate RowFilter outputs any cells from the input row.</p>\n\n<p>IMPORTANT NOTE: The predicate filter does not execute atomically with the\ntrue and false filters, which may lead to inconsistent or unexpected\nresults. Additionally, Condition filters have poor performance, especially\nwhen filters are set for the false condition.</p>\n\n<p>Cannot be used within the <code>predicate_filter</code>, <code>true_filter</code>, or <code>false_filter</code></p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L155","resources":[],"examples":[{"caption":"","code":"\npredicate = Google::Cloud::Bigtable::RowFilter.key(\"user-*\")\n\nlabel = Google::Cloud::Bigtable::RowFilter.label(\"user\")\nstrip_value = Google::Cloud::Bigtable::RowFilter.strip_value\n\ncondition_filter = Google::Cloud::Bigtable::RowFilter.condition(predicate).on_match(label).otherwise(strip_value)\n\nfilter = Google::Cloud::Bigtable::RowFilter.chain.condition(condition_filter)"}],"params":[{"name":"filter","types":["Google::Cloud::Bigtable::RowFilter::ConditionFilter"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"pass-instance","type":"instance","name":"pass","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#pass"],"description":"<p>Add pass filter instance</p>\n\n<p>Matches all cells, regardless of input. Functionally equivalent to\nleaving <code>filter</code> unset, but included for completeness.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L174","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.pass"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"block-instance","type":"instance","name":"block","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#block"],"description":"<p>Add block all filter instance</p>\n\n<p>Does not match any cells, regardless of input. Useful for temporarily\ndisabling just part of a filter.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L190","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.block"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"sink-instance","type":"instance","name":"sink","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#sink"],"description":"<p>Add sink filter instance</p>\n\n<p>Outputs all cells directly to the output of the read rather than to any parent filter</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L205","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.sink"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"strip_value-instance","type":"instance","name":"strip_value","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#strip_value"],"description":"<p>Add strip value filter instance</p>\n\n<p>Replaces each cell’s value with the empty string.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L220","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.strip_value"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"key-instance","type":"instance","name":"key","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#key"],"description":"<p>Add key filter instance to match key using regular expression.</p>\n\n<p>Matches only cells from rows whose keys satisfy the given RE2 regex. In\nother words, passes through the entire row when the key matches, and\notherwise produces an empty row.\nNote that, since row keys can contain arbitrary bytes, the <code>\\C</code> escape\nsequence must be used if a true wildcard is desired. The <code>.</code> character\nwill not match the new line character <code>\\n</code>, which may be present in a\nbinary key.</p>\n\n<p>For Regex syntax:</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L245","resources":[{"title":"","link":"https://github.com/google/re2/wiki/Syntax"}],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.key(\"user-*\")"}],"params":[{"name":"regex","types":["String"],"description":"Regex to match row keys.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"sample-instance","type":"instance","name":"sample","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#sample"],"description":"<p>Add sample probability filter instance</p>\n\n<p>Matches all cells from a row with probability p, and matches no cells\nfrom the row with probability 1-p.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L263","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.sample(0.5)"}],"params":[{"name":"probability","types":["Float"],"description":"Probability value\nProbability must be greather then 0 and less then 1.0","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"family-instance","type":"instance","name":"family","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#family"],"description":"<p>Add family name match filter using regex</p>\n\n<p>Matches only cells from columns whose families satisfy the given RE2\nregex. For technical reasons, the regex must not contain the <code>:</code>\ncharacter, even if it is not being used as a literal.\nNote that, since column families cannot contain the new line character\n<code>\\n</code>, it is sufficient to use <code>.</code> as a full wildcard when matching\ncolumn family names.</p>\n\n<p>For Regex syntax:</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L287","resources":[{"title":"","link":"https://github.com/google/re2/wiki/Syntax"}],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.family(\"cf-*\")"}],"params":[{"name":"regex","types":["String"],"description":"Regex to match family name.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"qualifier-instance","type":"instance","name":"qualifier","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#qualifier"],"description":"<p>Add column qualifier match filter using regex</p>\n\n<p>Matches only cells from columns whose qualifiers satisfy the given RE2\nregex.\nNote that, since column qualifiers can contain arbitrary bytes, the <code>\\C</code>\nescape sequence must be used if a true wildcard is desired. The <code>.</code>\ncharacter will not match the new line character <code>\\n</code>, which may be\npresent in a binary qualifier.</p>\n\n<p>For Regex syntax:</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L311","resources":[{"title":"","link":"https://github.com/google/re2/wiki/Syntax"}],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.qualifier(\"user-name*\")"}],"params":[{"name":"regex","types":["String"],"description":"Regex to match column qualifier name.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"value-instance","type":"instance","name":"value","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#value"],"description":"<p>Add value match filter using regex</p>\n\n<p>Matches only cells with values that satisfy the given regular expression.\nNote that, since cell values can contain arbitrary bytes, the <code>\\C</code> escape\nsequence must be used if a true wildcard is desired. The <code>.</code> character\nwill not match the new line character <code>\\n</code>, which may be present in a\nbinary value.</p>\n\n<p>For Regex syntax:</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L334","resources":[{"title":"","link":"https://github.com/google/re2/wiki/Syntax"}],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.value(\"abc*\")"}],"params":[{"name":"regex","types":["String"],"description":"Regex to match cell value.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"label-instance","type":"instance","name":"label","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#label"],"description":"<p>Add label filter instance to apply label on result of read rows.</p>\n\n<p>Applies the given label to all cells in the output row. This allows\nthe client to determine which results were produced from which part of\nthe filter.</p>\n\n<p>Values must be at most 15 characters in length, and match the RE2\npattern <code>[a-z0-9\\\\-]+</code></p>\n\n<p>Due to a technical limitation, it is not currently possible to apply\nmultiple labels to a cell. As a result, a Chain may have no more than\none sub-filter which contains a <code>apply_label_transformer</code>. It is okay for\nan Interleave to contain multiple <code>apply_label_transformers</code>, as they\nwill be applied to separate copies of the input. This may be relaxed in\nthe future.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L362","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.label(\"user-detail\")"}],"params":[{"name":"value","types":["String"],"description":"Label name","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"cells_per_row_offset-instance","type":"instance","name":"cells_per_row_offset","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#cells_per_row_offset"],"description":"<p>Add cell per row offset filter instance to skip first N cells.</p>\n\n<p>Skips the first N cells of each row, matching all subsequent cells.\nIf duplicate cells are present, as is possible when using an Interleave,\neach copy of the cell is counted separately.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L380","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.cells_per_row_offset(3)"}],"params":[{"name":"offset","types":["Integer"],"description":"Offset value.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"cells_per_row-instance","type":"instance","name":"cells_per_row","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#cells_per_row"],"description":"<p>Add cells per row limit filter instance</p>\n\n<p>Matches only the first N cells of each row.\nIf duplicate cells are present, as is possible when using an Interleave,\neach copy of the cell is counted separately.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L398","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.cells_per_row(5)"}],"params":[{"name":"limit","types":["String"],"description":"Max cell match per row limit","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"cells_per_column-instance","type":"instance","name":"cells_per_column","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#cells_per_column"],"description":"<p>Add cells per column filter instance</p>\n\n<p>Matches only the most recent N cells within each column. For example,\nif N=2, this filter would match column <code>foo:bar</code> at timestamps 10 and 9,\nskip all earlier cells in <code>foo:bar</code>, and then begin matching again in\ncolumn <code>foo:bar2</code>.\nIf duplicate cells are present, as is possible when using an Interleave,\neach copy of the cell is counted separately.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L419","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.cells_per_column(5)"}],"params":[{"name":"limit","types":["String"],"description":"Max cell match per column limit","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"timestamp_range-instance","type":"instance","name":"timestamp_range","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#timestamp_range"],"description":"<p>Add timestamp range filter instance</p>\n\n<p>Matches only cells with timestamps within the given range.\nSpecified a contiguous range of timestamps.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L442","resources":[],"examples":[{"caption":"","code":"\nfrom = (Time.now - 300).to_i * 1000 # 300 seconds ago\nto = Time.now.to_f * 1000\n\nfilter = Google::Cloud::Bigtable::RowFilter.chain.timestamp_range(from: from, to: to)"}],"params":[{"name":"from","types":["Integer"],"description":"Inclusive lower bound.\nIf left empty, interpreted as 0.","optional":true,"default":"nil","nullable":true},{"name":"to","types":["Integer"],"description":"Exclusive upper bound.\nIf left empty, interpreted as infinity.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"value_range-instance","type":"instance","name":"value_range","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#value_range"],"description":"<p>Add value range filter instance</p>\n\n<p>Matches only cells with values that fall within the given range.</p>\n\n<p>See Google::Cloud::Bigtable::ValueRange#from and { Google::Cloud::Bigtable::ValueRange#to} for range\noption inclusive/exclusive options</p>\n\n<ul>\n  <li>The value at which to start the range.If neither field is set, interpreted as the empty string, inclusive.</li>\n  <li>The value at which to end the range. If neither field is set, interpreted as the infinite string, exclusive.</li>\n</ul>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L470","resources":[],"examples":[{"caption":"<p>Start to end range</p>","code":"\nrange = Google::Cloud::Bigtable::ValueRange.from(\"abc\").to('xyz')\nfilter = Google::Cloud::Bigtable::RowFilter.chain.value_range(range)"},{"caption":"<p>Start exlusive to infinite end range</p>","code":"\nrange = Google::Cloud::Bigtable::ValueRange.from(\"abc\", inclusive: false)\nfilter = Google::Cloud::Bigtable::RowFilter.chain.value_range(range)"}],"params":[{"name":"range","types":["Google::Cloud::Bigtable::ValueRange"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"column_range-instance","type":"instance","name":"column_range","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#column_range"],"description":"<p>Add column range filter instance.</p>\n\n<p>Matches only cells from columns within the given range.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L488","resources":[],"examples":[{"caption":"","code":"\nrange = Google::Cloud::Bigtable::ColumnRange.new(cf).from(\"field0\").to('field5')\n\nfilter = Google::Cloud::Bigtable::RowFilter.chain.column_range(range)"}],"params":[{"name":"range","types":["Google::Cloud::Bigtable::ColumnRange"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/rowfilter/chainfilter\">Google::Cloud::Bigtable::RowFilter::ChainFilter</a>"],"description":"<code>self</code> instance of chain filter."}]},{"id":"length-instance","type":"instance","name":"length","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#length"],"description":"<p>Get number of filter count in chain filters</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L501","resources":[],"examples":[{"caption":"","code":"\nfilter = Google::Cloud::Bigtable::RowFilter.chain.key(\"user-1*\").label(\"user\")\nfilter.length # 2"}],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":""}]},{"id":"filters-instance","type":"instance","name":"filters","title":["Google","Cloud","Bigtable","RowFilter","ChainFilter#filters"],"description":"<p>Get list of filters</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/row_filter/chain_filter.rb#L509","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/bigtable/v2/rowfilter\">Google::Bigtable::V2::RowFilter</a>&gt;"],"description":""}]}]}