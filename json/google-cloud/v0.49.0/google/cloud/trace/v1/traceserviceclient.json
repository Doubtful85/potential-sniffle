{"id":"google/cloud/trace/v1/traceserviceclient","name":"TraceServiceClient","title":["Google","Cloud","Trace","V1","TraceServiceClient"],"description":"<p>This file describes an API for collecting and viewing traces and spans\nwithin a trace.  A Trace is a collection of spans corresponding to a single\noperation or set of operations for an application. A span is an individual\ntimed event which forms a node of the trace tree. Spans for a single trace\nmay span multiple services.</p>","source":"google-cloud-trace/lib/google/cloud/trace/v1/trace_service_client.rb#L45","resources":[],"examples":[],"methods":[{"id":"trace_service_stub-instance","type":"instance","name":"trace_service_stub","title":["Google","Cloud","Trace","V1","TraceServiceClient#trace_service_stub"],"description":"","source":"google-cloud-trace/lib/google/cloud/trace/v1/trace_service_client.rb#L45","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Devtools::Cloudtrace::V1::TraceService::Stub"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Trace","V1","TraceServiceClient#initialize"],"description":"","source":"google-cloud-trace/lib/google/cloud/trace/v1/trace_service_client.rb#L97","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/trace/v1/traceserviceclient\">TraceServiceClient</a>"],"description":"a new instance of TraceServiceClient"}]},{"id":"list_traces-instance","type":"instance","name":"list_traces","title":["Google","Cloud","Trace","V1","TraceServiceClient#list_traces"],"description":"<p>Returns of a list of traces that match the specified filter conditions.</p>","source":"google-cloud-trace/lib/google/cloud/trace/v1/trace_service_client.rb#L288","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/trace/v1\"\n\ntrace_service_client = Google::Cloud::Trace::V1.new\nproject_id = ''\n\n# Iterate over all results.\ntrace_service_client.list_traces(project_id).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\ntrace_service_client.list_traces(project_id).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"project_id","types":["String"],"description":"ID of the Cloud project where the trace data is stored.","optional":false,"nullable":false},{"name":"view","types":["Google::Devtools::Cloudtrace::V1::ListTracesRequest::ViewType"],"description":"Type of data returned for traces in the list. Optional. Default is\n+MINIMAL+.","optional":true,"default":"nil","nullable":true},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"start_time","types":["Google::Protobuf::Timestamp | Hash"],"description":"Start of the time interval (inclusive) during which the trace data was\ncollected from the application.\nA hash of the same form as <code>Google::Protobuf::Timestamp</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"end_time","types":["Google::Protobuf::Timestamp | Hash"],"description":"End of the time interval (inclusive) during which the trace data was\ncollected from the application.\nA hash of the same form as <code>Google::Protobuf::Timestamp</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"filter","types":["String"],"description":"An optional filter against labels for the request.</p>\n\n<p>By default, searches use prefix matching. To specify exact match, prepend\na plus symbol (+++) to the search term.\nMultiple terms are ANDed. Syntax:</p>\n\n<ul>\n  <li>+root:NAME_PREFIX+ or +NAME_PREFIX+: Return traces where any root\nspan starts with +NAME_PREFIX+.</li>\n  <li>++root:NAME+ or ++NAME+: Return traces where any root span’s name is\nexactly +NAME+.</li>\n  <li>+span:NAME_PREFIX+: Return traces where any span starts with\n+NAME_PREFIX+.</li>\n  <li>++span:NAME+: Return traces where any span’s name is exactly\n+NAME+.</li>\n  <li>+latency:DURATION+: Return traces whose overall latency is\ngreater or equal to than +DURATION+. Accepted units are nanoseconds\n(+ns+), milliseconds (+ms+), and seconds (+s+). Default is +ms+. For\nexample, +latency:24ms+ returns traces whose overall latency\nis greater than or equal to 24 milliseconds.</li>\n  <li>+label:LABEL_KEY+: Return all traces containing the specified\nlabel key (exact match, case-sensitive) regardless of the key:value\npair’s value (including empty values).</li>\n  <li>+LABEL_KEY:VALUE_PREFIX+: Return all traces containing the specified\nlabel key (exact match, case-sensitive) whose value starts with\n+VALUE_PREFIX+. Both a key and a value must be specified.</li>\n  <li>++LABEL_KEY:VALUE+: Return all traces containing a key:value pair\nexactly matching the specified text. Both a key and a value must be\nspecified.</li>\n  <li>+method:VALUE+: Equivalent to +/http/method:VALUE+.</li>\n  <li>+url:VALUE+: Equivalent to +/http/url:VALUE+.</li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"order_by","types":["String"],"description":"Field used to sort the returned traces. Optional.\nCan be one of the following:</p>\n\n<ul>\n  <li>+trace_id+</li>\n  <li>+name+ (+name+ field of root span in the trace)</li>\n  <li>+duration+ (difference between +end_time+ and +start_time+ fields of\nthe root span)</li>\n  <li>+start+ (+start_time+ field of the root span)</li>\n</ul>\n\n<p>Descending order can be specified by appending +desc+ to the sort field\n(for example, +name desc+).</p>\n\n<p>Only one sort field is permitted.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/devtools/cloudtrace/v1/trace\">Google::Devtools::Cloudtrace::V1::Trace</a>&gt;"],"description":"An enumerable of Google::Devtools::Cloudtrace::V1::Trace instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"get_trace-instance","type":"instance","name":"get_trace","title":["Google","Cloud","Trace","V1","TraceServiceClient#get_trace"],"description":"<p>Gets a single trace by its ID.</p>","source":"google-cloud-trace/lib/google/cloud/trace/v1/trace_service_client.rb#L329","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/trace/v1\"\n\ntrace_service_client = Google::Cloud::Trace::V1.new\nproject_id = ''\ntrace_id = ''\nresponse = trace_service_client.get_trace(project_id, trace_id)"}],"params":[{"name":"project_id","types":["String"],"description":"ID of the Cloud project where the trace data is stored.","optional":false,"nullable":false},{"name":"trace_id","types":["String"],"description":"ID of the trace to return.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/devtools/cloudtrace/v1/trace\">Google::Devtools::Cloudtrace::V1::Trace</a>"],"description":""}]},{"id":"patch_traces-instance","type":"instance","name":"patch_traces","title":["Google","Cloud","Trace","V1","TraceServiceClient#patch_traces"],"description":"<p>Sends new traces to Stackdriver Trace or updates existing traces. If the ID\nof a trace that you send matches that of an existing trace, any fields\nin the existing trace and its spans are overwritten by the provided values,\nand any new fields provided are merged with the existing trace data. If the\nID does not match, a new trace is created.</p>","source":"google-cloud-trace/lib/google/cloud/trace/v1/trace_service_client.rb#L365","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/trace/v1\"\n\ntrace_service_client = Google::Cloud::Trace::V1.new\nproject_id = ''\ntraces = {}\ntrace_service_client.patch_traces(project_id, traces)"}],"params":[{"name":"project_id","types":["String"],"description":"ID of the Cloud project where the trace data is stored.","optional":false,"nullable":false},{"name":"traces","types":["Google::Devtools::Cloudtrace::V1::Traces | Hash"],"description":"The body of the message.\nA hash of the same form as <code>Google::Devtools::Cloudtrace::V1::Traces</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]}]}