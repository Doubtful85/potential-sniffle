{"id":"google/bigtable/v2/checkandmutaterowrequest","name":"CheckAndMutateRowRequest","title":["Google","Bigtable","V2","CheckAndMutateRowRequest"],"description":"<p>Request message for Bigtable.CheckAndMutateRow.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"methods":[{"id":"table_name-instance","type":"instance","name":"table_name","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#table_name"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The unique name of the table to which the conditional mutation should be\napplied.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>"}]},{"id":"table_name=-instance","type":"instance","name":"table_name=","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#table_name="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The unique name of the table to which the conditional mutation should be\napplied.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>"}]},{"id":"app_profile_id-instance","type":"instance","name":"app_profile_id","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#app_profile_id"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"This value specifies routing for replication. If not specified, the\n“default” application profile will be used."}]},{"id":"app_profile_id=-instance","type":"instance","name":"app_profile_id=","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#app_profile_id="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"This value specifies routing for replication. If not specified, the\n“default” application profile will be used."}]},{"id":"row_key-instance","type":"instance","name":"row_key","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#row_key"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The key of the row to which the conditional mutation should be applied."}]},{"id":"row_key=-instance","type":"instance","name":"row_key=","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#row_key="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The key of the row to which the conditional mutation should be applied."}]},{"id":"predicate_filter-instance","type":"instance","name":"predicate_filter","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#predicate_filter"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/bigtable/v2/rowfilter\">Google::Bigtable::V2::RowFilter</a>"],"description":"The filter to be applied to the contents of the specified row. Depending\non whether or not any results are yielded, either +true_mutations+ or\n+false_mutations+ will be executed. If unset, checks that the row contains\nany values at all."}]},{"id":"predicate_filter=-instance","type":"instance","name":"predicate_filter=","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#predicate_filter="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/bigtable/v2/rowfilter\">Google::Bigtable::V2::RowFilter</a>"],"description":"The filter to be applied to the contents of the specified row. Depending\non whether or not any results are yielded, either +true_mutations+ or\n+false_mutations+ will be executed. If unset, checks that the row contains\nany values at all."}]},{"id":"true_mutations-instance","type":"instance","name":"true_mutations","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#true_mutations"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/bigtable/v2/mutation\">Google::Bigtable::V2::Mutation</a>&gt;"],"description":"Changes to be atomically applied to the specified row if +predicate_filter+\nyields at least one cell when applied to +row_key+. Entries are applied in\norder, meaning that earlier mutations can be masked by later ones.\nMust contain at least one entry if +false_mutations+ is empty, and at most\n100000."}]},{"id":"true_mutations=-instance","type":"instance","name":"true_mutations=","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#true_mutations="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/bigtable/v2/mutation\">Google::Bigtable::V2::Mutation</a>&gt;"],"description":"Changes to be atomically applied to the specified row if +predicate_filter+\nyields at least one cell when applied to +row_key+. Entries are applied in\norder, meaning that earlier mutations can be masked by later ones.\nMust contain at least one entry if +false_mutations+ is empty, and at most\n100000."}]},{"id":"false_mutations-instance","type":"instance","name":"false_mutations","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#false_mutations"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/bigtable/v2/mutation\">Google::Bigtable::V2::Mutation</a>&gt;"],"description":"Changes to be atomically applied to the specified row if +predicate_filter+\ndoes not yield any cells when applied to +row_key+. Entries are applied in\norder, meaning that earlier mutations can be masked by later ones.\nMust contain at least one entry if +true_mutations+ is empty, and at most\n100000."}]},{"id":"false_mutations=-instance","type":"instance","name":"false_mutations=","title":["Google","Bigtable","V2","CheckAndMutateRowRequest#false_mutations="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L249","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/bigtable/v2/mutation\">Google::Bigtable::V2::Mutation</a>&gt;"],"description":"Changes to be atomically applied to the specified row if +predicate_filter+\ndoes not yield any cells when applied to +row_key+. Entries are applied in\norder, meaning that earlier mutations can be masked by later ones.\nMust contain at least one entry if +true_mutations+ is empty, and at most\n100000."}]}]}