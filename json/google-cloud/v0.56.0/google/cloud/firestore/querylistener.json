{"id":"google/cloud/firestore/querylistener","name":"QueryListener","title":["Google","Cloud","Firestore","QueryListener"],"description":"<h1 id=\"querylistener\">QueryListener</h1>\n\n<p>An ongoing listen operation on a query. This is returned by calling\n<a data-custom-type=\"google/cloud/firestore/query\" data-method=\"listen-instance\">Query#listen</a>.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query_listener.rb#L43","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Create a query\nquery = firestore.col(:cities).order(:population, :desc)\n\nlistener = query.listen do |snapshot|\n  puts \"The query snapshot has #{snapshot.docs.count} documents \"\n  puts \"and has #{snapshot.changes.count} changes.\"\nend\n\n# When ready, stop the listen operation and close the stream.\nlistener.stop"}],"methods":[{"id":"stop-instance","type":"instance","name":"stop","title":["Google","Cloud","Firestore","QueryListener#stop"],"description":"<p>Stops the client listening for changes.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query_listener.rb#L83","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Create a query\nquery = firestore.col(:cities).order(:population, :desc)\n\nlistener = query.listen do |snapshot|\n  puts \"The query snapshot has #{snapshot.docs.count} documents \"\n  puts \"and has #{snapshot.changes.count} changes.\"\nend\n\n# When ready, stop the listen operation and close the stream.\nlistener.stop"}],"params":[],"exceptions":[],"returns":[]},{"id":"stopped?-instance","type":"instance","name":"stopped?","title":["Google","Cloud","Firestore","QueryListener#stopped?"],"description":"<p>Whether the client has stopped listening for changes.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/query_listener.rb#L112","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Create a query\nquery = firestore.col(:cities).order(:population, :desc)\n\nlistener = query.listen do |snapshot|\n  puts \"The query snapshot has #{snapshot.docs.count} documents \"\n  puts \"and has #{snapshot.changes.count} changes.\"\nend\n\n# Checks if the listener is stopped.\nlistener.stopped? #=> false\n\n# When ready, stop the listen operation and close the stream.\nlistener.stop\n\n# Checks if the listener is stopped.\nlistener.stopped? #=> true"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]}]}