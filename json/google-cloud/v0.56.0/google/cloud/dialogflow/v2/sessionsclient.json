{"id":"google/cloud/dialogflow/v2/sessionsclient","name":"SessionsClient","title":["Google","Cloud","Dialogflow","V2","SessionsClient"],"description":"<p>A session represents an interaction with a user. You retrieve user input\nand pass it to the Google::Cloud::Dialogflow::V2::Sessions::DetectIntent (or\nGoogle::Cloud::Dialogflow::V2::Sessions::StreamingDetectIntent) method to determine\nuser intent and respond.</p>","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2/sessions_client.rb#L41","resources":[],"examples":[],"methods":[{"id":"sessions_stub-instance","type":"instance","name":"sessions_stub","title":["Google","Cloud","Dialogflow","V2","SessionsClient#sessions_stub"],"description":"","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2/sessions_client.rb#L41","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Cloud::Dialogflow::V2::Sessions::Stub"],"description":""}]},{"id":"session_path-class","type":"class","name":"session_path","title":["Google","Cloud","Dialogflow","V2","SessionsClient.session_path"],"description":"<p>Returns a fully-qualified session resource name string.</p>","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2/sessions_client.rb#L72","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"session","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Dialogflow","V2","SessionsClient#initialize"],"description":"","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2/sessions_client.rb#L108","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/dialogflow/v2/sessionsclient\">SessionsClient</a>"],"description":"a new instance of SessionsClient"}]},{"id":"detect_intent-instance","type":"instance","name":"detect_intent","title":["Google","Cloud","Dialogflow","V2","SessionsClient#detect_intent"],"description":"<p>Processes a natural language query and returns structured, actionable data\nas a result. This method is not idempotent, because it may cause contexts\nand session entity types to be updated, which in turn might affect\nresults of future queries.</p>","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2/sessions_client.rb#L243","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dialogflow\"\n\nsessions_client = Google::Cloud::Dialogflow::Sessions.new(version: :v2)\nformatted_session = Google::Cloud::Dialogflow::V2::SessionsClient.session_path(\"[PROJECT]\", \"[SESSION]\")\n\n# TODO: Initialize +query_input+:\nquery_input = {}\nresponse = sessions_client.detect_intent(formatted_session, query_input)"}],"params":[{"name":"session","types":["String"],"description":"Required. The name of the session this query is sent to. Format:\n+projects/<Project ID=\"\">/agent/sessions/<Session ID=\"\">+. It's up to the API\ncaller to choose an appropriate session ID. It can be a random number or\nsome type of user identifier (preferably hashed). The length of the session\nID must not exceed 36 bytes.</Session></Project>","optional":false,"nullable":false},{"name":"query_input","types":["Google::Cloud::Dialogflow::V2::QueryInput | Hash"],"description":"Required. The input specification. It can be set to:</p>\n\n<ol>\n  <li>\n    <p>an audio config\nwhich instructs the speech recognizer how to process the speech audio,</p>\n  </li>\n  <li>\n    <p>a conversational query in the form of text, or</p>\n  </li>\n  <li>\n    <p>an event that specifies which intent to trigger.\nA hash of the same form as <code>Google::Cloud::Dialogflow::V2::QueryInput</code>\ncan also be provided.</p>\n  </li>\n</ol>","optional":false,"nullable":false},{"name":"query_params","types":["Google::Cloud::Dialogflow::V2::QueryParameters | Hash"],"description":"Optional. The parameters of this query.\nA hash of the same form as <code>Google::Cloud::Dialogflow::V2::QueryParameters</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"input_audio","types":["String"],"description":"Optional. The natural language speech audio to be processed. This field\nshould be populated iff +query_input+ is set to an input audio config.\nA single request can contain up to 1 minute of speech audio data.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Dialogflow::V2::DetectIntentResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/dialogflow/v2/detectintentresponse\">Google::Cloud::Dialogflow::V2::DetectIntentResponse</a>"],"description":""}]},{"id":"streaming_detect_intent-instance","type":"instance","name":"streaming_detect_intent","title":["Google","Cloud","Dialogflow","V2","SessionsClient#streaming_detect_intent"],"description":"<p>Processes a natural language query in audio format in a streaming fashion\nand returns structured, actionable data as a result. This method is only\navailable via the gRPC API (not REST).</p>","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2/sessions_client.rb#L295","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dialogflow\"\n\nsessions_client = Google::Cloud::Dialogflow::Sessions.new(version: :v2)\n\n# TODO: Initialize +session+:\nsession = ''\n\n# TODO: Initialize +query_input+:\nquery_input = {}\nrequest = { session: session, query_input: query_input }\nrequests = [request]\nsessions_client.streaming_detect_intent(requests).each do |element|\n  # Process element.\nend"}],"params":[{"name":"reqs","types":["Enumerable<Google::Cloud::Dialogflow::V2::StreamingDetectIntentRequest>"],"description":"The input requests.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Enumerable&lt;<a data-custom-type=\"google/cloud/dialogflow/v2/streamingdetectintentresponse\">Google::Cloud::Dialogflow::V2::StreamingDetectIntentResponse</a>&gt;"],"description":"An enumerable of Google::Cloud::Dialogflow::V2::StreamingDetectIntentResponse instances."}]}]}