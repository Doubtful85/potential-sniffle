{"id":"google/cloud/bigtable/v2/bigtableclient","name":"BigtableClient","title":["Google","Cloud","Bigtable","V2","BigtableClient"],"description":"<p>Service for reading from and writing to existing Bigtable tables.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L38","resources":[],"examples":[],"methods":[{"id":"bigtable_stub-instance","type":"instance","name":"bigtable_stub","title":["Google","Cloud","Bigtable","V2","BigtableClient#bigtable_stub"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L38","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Bigtable::V2::Bigtable::Stub"],"description":""}]},{"id":"table_path-class","type":"class","name":"table_path","title":["Google","Cloud","Bigtable","V2","BigtableClient.table_path"],"description":"<p>Returns a fully-qualified table resource name string.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L75","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"instance","types":["String"],"description":"","optional":false,"nullable":false},{"name":"table","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Bigtable","V2","BigtableClient#initialize"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L112","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/v2/bigtableclient\">BigtableClient</a>"],"description":"a new instance of BigtableClient"}]},{"id":"read_rows-instance","type":"instance","name":"read_rows","title":["Google","Cloud","Bigtable","V2","BigtableClient#read_rows"],"description":"<p>Streams back the contents of all requested rows in key order, optionally\napplying the same Reader filter to each. Depending on their size,\nrows and cells may be broken up across multiple responses, but\natomicity of each row will still be preserved. See the\nReadRowsResponse documentation for details.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L278","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/v2\"\n\nbigtable_client = Google::Cloud::Bigtable::V2.new\nformatted_table_name = Google::Cloud::Bigtable::V2::BigtableClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\nbigtable_client.read_rows(formatted_table_name).each do |element|\n  # Process element.\nend"}],"params":[{"name":"table_name","types":["String"],"description":"The unique name of the table from which to read.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"app_profile_id","types":["String"],"description":"This value specifies routing for replication. If not specified, the\n“default” application profile will be used.","optional":true,"default":"nil","nullable":true},{"name":"rows","types":["Google::Bigtable::V2::RowSet | Hash"],"description":"The row keys and/or ranges to read. If not specified, reads from all rows.\nA hash of the same form as <code>Google::Bigtable::V2::RowSet</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"filter","types":["Google::Bigtable::V2::RowFilter | Hash"],"description":"The filter to apply to the contents of the specified row(s). If unset,\nreads the entirety of each row.\nA hash of the same form as <code>Google::Bigtable::V2::RowFilter</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"rows_limit","types":["Integer"],"description":"The read will terminate after committing to N rows’ worth of results. The\ndefault (zero) is to return all results.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Enumerable&lt;<a data-custom-type=\"google/bigtable/v2/readrowsresponse\">Google::Bigtable::V2::ReadRowsResponse</a>&gt;"],"description":"An enumerable of Google::Bigtable::V2::ReadRowsResponse instances."}]},{"id":"sample_row_keys-instance","type":"instance","name":"sample_row_keys","title":["Google","Cloud","Bigtable","V2","BigtableClient#sample_row_keys"],"description":"<p>Returns a sample of row keys in the table. The returned row keys will\ndelimit contiguous sections of the table of approximately equal size,\nwhich can be used to break up the data for distributed tasks like\nmapreduces.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L324","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/v2\"\n\nbigtable_client = Google::Cloud::Bigtable::V2.new\nformatted_table_name = Google::Cloud::Bigtable::V2::BigtableClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\nbigtable_client.sample_row_keys(formatted_table_name).each do |element|\n  # Process element.\nend"}],"params":[{"name":"table_name","types":["String"],"description":"The unique name of the table from which to sample row keys.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"app_profile_id","types":["String"],"description":"This value specifies routing for replication. If not specified, the\n“default” application profile will be used.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Enumerable&lt;<a data-custom-type=\"google/bigtable/v2/samplerowkeysresponse\">Google::Bigtable::V2::SampleRowKeysResponse</a>&gt;"],"description":"An enumerable of Google::Bigtable::V2::SampleRowKeysResponse instances."}]},{"id":"mutate_row-instance","type":"instance","name":"mutate_row","title":["Google","Cloud","Bigtable","V2","BigtableClient#mutate_row"],"description":"<p>Mutates a row atomically. Cells already present in the row are left\nunchanged unless explicitly changed by +mutation+.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L375","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/v2\"\n\nbigtable_client = Google::Cloud::Bigtable::V2.new\nformatted_table_name = Google::Cloud::Bigtable::V2::BigtableClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\n\n# TODO: Initialize +row_key+:\nrow_key = ''\n\n# TODO: Initialize +mutations+:\nmutations = []\nresponse = bigtable_client.mutate_row(formatted_table_name, row_key, mutations)"}],"params":[{"name":"table_name","types":["String"],"description":"The unique name of the table to which the mutation should be applied.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"row_key","types":["String"],"description":"The key of the row to which the mutation should be applied.","optional":false,"nullable":false},{"name":"mutations","types":["Array<Google::Bigtable::V2::Mutation | Hash>"],"description":"Changes to be atomically applied to the specified row. Entries are applied\nin order, meaning that earlier mutations can be masked by later ones.\nMust contain at least one entry and at most 100000.\nA hash of the same form as <code>Google::Bigtable::V2::Mutation</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"app_profile_id","types":["String"],"description":"This value specifies routing for replication. If not specified, the\n“default” application profile will be used.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::V2::MutateRowResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/v2/mutaterowresponse\">Google::Bigtable::V2::MutateRowResponse</a>"],"description":""}]},{"id":"mutate_rows-instance","type":"instance","name":"mutate_rows","title":["Google","Cloud","Bigtable","V2","BigtableClient#mutate_rows"],"description":"<p>Mutates multiple rows in a batch. Each individual row is mutated\natomically as in MutateRow, but the entire batch is not executed\natomically.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L428","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/v2\"\n\nbigtable_client = Google::Cloud::Bigtable::V2.new\nformatted_table_name = Google::Cloud::Bigtable::V2::BigtableClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\n\n# TODO: Initialize +entries+:\nentries = []\nbigtable_client.mutate_rows(formatted_table_name, entries).each do |element|\n  # Process element.\nend"}],"params":[{"name":"table_name","types":["String"],"description":"The unique name of the table to which the mutations should be applied.","optional":false,"nullable":false},{"name":"entries","types":["Array<Google::Bigtable::V2::MutateRowsRequest::Entry | Hash>"],"description":"The row keys and corresponding mutations to be applied in bulk.\nEach entry is applied as an atomic mutation, but the entries may be\napplied in arbitrary order (even between entries for the same row).\nAt least one entry must be specified, and in total the entries can\ncontain at most 100000 mutations.\nA hash of the same form as <code>Google::Bigtable::V2::MutateRowsRequest::Entry</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"app_profile_id","types":["String"],"description":"This value specifies routing for replication. If not specified, the\n“default” application profile will be used.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Enumerable&lt;<a data-custom-type=\"google/bigtable/v2/mutaterowsresponse\">Google::Bigtable::V2::MutateRowsResponse</a>&gt;"],"description":"An enumerable of Google::Bigtable::V2::MutateRowsResponse instances."}]},{"id":"check_and_mutate_row-instance","type":"instance","name":"check_and_mutate_row","title":["Google","Cloud","Bigtable","V2","BigtableClient#check_and_mutate_row"],"description":"<p>Mutates a row atomically based on the output of a predicate Reader filter.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L495","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/v2\"\n\nbigtable_client = Google::Cloud::Bigtable::V2.new\nformatted_table_name = Google::Cloud::Bigtable::V2::BigtableClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\n\n# TODO: Initialize +row_key+:\nrow_key = ''\nresponse = bigtable_client.check_and_mutate_row(formatted_table_name, row_key)"}],"params":[{"name":"table_name","types":["String"],"description":"The unique name of the table to which the conditional mutation should be\napplied.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"row_key","types":["String"],"description":"The key of the row to which the conditional mutation should be applied.","optional":false,"nullable":false},{"name":"app_profile_id","types":["String"],"description":"This value specifies routing for replication. If not specified, the\n“default” application profile will be used.","optional":true,"default":"nil","nullable":true},{"name":"predicate_filter","types":["Google::Bigtable::V2::RowFilter | Hash"],"description":"The filter to be applied to the contents of the specified row. Depending\non whether or not any results are yielded, either +true_mutations+ or\n+false_mutations+ will be executed. If unset, checks that the row contains\nany values at all.\nA hash of the same form as <code>Google::Bigtable::V2::RowFilter</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"true_mutations","types":["Array<Google::Bigtable::V2::Mutation | Hash>"],"description":"Changes to be atomically applied to the specified row if +predicate_filter+\nyields at least one cell when applied to +row_key+. Entries are applied in\norder, meaning that earlier mutations can be masked by later ones.\nMust contain at least one entry if +false_mutations+ is empty, and at most\n100000.\nA hash of the same form as <code>Google::Bigtable::V2::Mutation</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"false_mutations","types":["Array<Google::Bigtable::V2::Mutation | Hash>"],"description":"Changes to be atomically applied to the specified row if +predicate_filter+\ndoes not yield any cells when applied to +row_key+. Entries are applied in\norder, meaning that earlier mutations can be masked by later ones.\nMust contain at least one entry if +true_mutations+ is empty, and at most\n100000.\nA hash of the same form as <code>Google::Bigtable::V2::Mutation</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::V2::CheckAndMutateRowResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/v2/checkandmutaterowresponse\">Google::Bigtable::V2::CheckAndMutateRowResponse</a>"],"description":""}]},{"id":"read_modify_write_row-instance","type":"instance","name":"read_modify_write_row","title":["Google","Cloud","Bigtable","V2","BigtableClient#read_modify_write_row"],"description":"<p>Modifies a row atomically on the server. The method reads the latest\nexisting timestamp and value from the specified columns and writes a new\nentry based on pre-defined read/modify/write rules. The new value for the\ntimestamp is the greater of the existing timestamp or the current server\ntime. The method returns the new contents of all modified cells.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/bigtable_client.rb#L559","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/v2\"\n\nbigtable_client = Google::Cloud::Bigtable::V2.new\nformatted_table_name = Google::Cloud::Bigtable::V2::BigtableClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\n\n# TODO: Initialize +row_key+:\nrow_key = ''\n\n# TODO: Initialize +rules+:\nrules = []\nresponse = bigtable_client.read_modify_write_row(formatted_table_name, row_key, rules)"}],"params":[{"name":"table_name","types":["String"],"description":"The unique name of the table to which the read/modify/write rules should be\napplied.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"row_key","types":["String"],"description":"The key of the row to which the read/modify/write rules should be applied.","optional":false,"nullable":false},{"name":"rules","types":["Array<Google::Bigtable::V2::ReadModifyWriteRule | Hash>"],"description":"Rules specifying how the specified row’s contents are to be transformed\ninto writes. Entries are applied in order, meaning that earlier rules will\naffect the results of later ones.\nA hash of the same form as <code>Google::Bigtable::V2::ReadModifyWriteRule</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"app_profile_id","types":["String"],"description":"This value specifies routing for replication. If not specified, the\n“default” application profile will be used.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::V2::ReadModifyWriteRowResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/v2/readmodifywriterowresponse\">Google::Bigtable::V2::ReadModifyWriteRowResponse</a>"],"description":""}]}]}