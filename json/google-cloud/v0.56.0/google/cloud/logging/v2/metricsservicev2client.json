{"id":"google/cloud/logging/v2/metricsservicev2client","name":"MetricsServiceV2Client","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client"],"description":"<p>Service for configuring logs-based metrics.</p>","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L38","resources":[],"examples":[],"methods":[{"id":"project_path-class","type":"class","name":"project_path","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client.project_path"],"description":"<p>Returns a fully-qualified project resource name string.</p>","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L88","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"metric_path-class","type":"class","name":"metric_path","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client.metric_path"],"description":"<p>Returns a fully-qualified metric resource name string.</p>","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L98","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"metric","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client#initialize"],"description":"","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L134","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/v2/metricsservicev2client\">MetricsServiceV2Client</a>"],"description":"a new instance of MetricsServiceV2Client"}]},{"id":"list_log_metrics-instance","type":"instance","name":"list_log_metrics","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client#list_log_metrics"],"description":"<p>Lists logs-based metrics.</p>","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L280","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging/v2\"\n\nmetrics_service_v2_client = Google::Cloud::Logging::V2::MetricsServiceV2Client.new\nformatted_parent = Google::Cloud::Logging::V2::MetricsServiceV2Client.project_path(\"[PROJECT]\")\n\n# Iterate over all results.\nmetrics_service_v2_client.list_log_metrics(formatted_parent).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\nmetrics_service_v2_client.list_log_metrics(formatted_parent).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"parent","types":["String"],"description":"Required. The name of the project containing the metrics:</p>\n\n<pre><code>\"projects/[PROJECT_ID]\"\n</code></pre>","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Logging::V2::LogMetric>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/logging/v2/logmetric\">Google::Logging::V2::LogMetric</a>&gt;"],"description":"An enumerable of Google::Logging::V2::LogMetric instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"get_log_metric-instance","type":"instance","name":"get_log_metric","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client#get_log_metric"],"description":"<p>Gets a logs-based metric.</p>","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L314","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging/v2\"\n\nmetrics_service_v2_client = Google::Cloud::Logging::V2::MetricsServiceV2Client.new\nformatted_metric_name = Google::Cloud::Logging::V2::MetricsServiceV2Client.metric_path(\"[PROJECT]\", \"[METRIC]\")\nresponse = metrics_service_v2_client.get_log_metric(formatted_metric_name)"}],"params":[{"name":"metric_name","types":["String"],"description":"The resource name of the desired metric:</p>\n\n<pre><code>\"projects/[PROJECT_ID]/metrics/[METRIC_ID]\"\n</code></pre>","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Logging::V2::LogMetric"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/logging/v2/logmetric\">Google::Logging::V2::LogMetric</a>"],"description":""}]},{"id":"create_log_metric-instance","type":"instance","name":"create_log_metric","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client#create_log_metric"],"description":"<p>Creates a logs-based metric.</p>","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L356","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging/v2\"\n\nmetrics_service_v2_client = Google::Cloud::Logging::V2::MetricsServiceV2Client.new\nformatted_parent = Google::Cloud::Logging::V2::MetricsServiceV2Client.project_path(\"[PROJECT]\")\n\n# TODO: Initialize +metric+:\nmetric = {}\nresponse = metrics_service_v2_client.create_log_metric(formatted_parent, metric)"}],"params":[{"name":"parent","types":["String"],"description":"The resource name of the project in which to create the metric:</p>\n\n<pre><code>\"projects/[PROJECT_ID]\"\n</code></pre>\n\n<p>The new metric must be provided in the request.","optional":false,"nullable":false},{"name":"metric","types":["Google::Logging::V2::LogMetric | Hash"],"description":"The new logs-based metric, which must not have an identifier that\nalready exists.\nA hash of the same form as <code>Google::Logging::V2::LogMetric</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Logging::V2::LogMetric"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/logging/v2/logmetric\">Google::Logging::V2::LogMetric</a>"],"description":""}]},{"id":"update_log_metric-instance","type":"instance","name":"update_log_metric","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client#update_log_metric"],"description":"<p>Creates or updates a logs-based metric.</p>","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L401","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging/v2\"\n\nmetrics_service_v2_client = Google::Cloud::Logging::V2::MetricsServiceV2Client.new\nformatted_metric_name = Google::Cloud::Logging::V2::MetricsServiceV2Client.metric_path(\"[PROJECT]\", \"[METRIC]\")\n\n# TODO: Initialize +metric+:\nmetric = {}\nresponse = metrics_service_v2_client.update_log_metric(formatted_metric_name, metric)"}],"params":[{"name":"metric_name","types":["String"],"description":"The resource name of the metric to update:</p>\n\n<pre><code>\"projects/[PROJECT_ID]/metrics/[METRIC_ID]\"\n</code></pre>\n\n<p>The updated metric must be provided in the request and it’s\n+name+ field must be the same as +[METRIC_ID]+ If the metric\ndoes not exist in +[PROJECT_ID]+, then a new metric is created.","optional":false,"nullable":false},{"name":"metric","types":["Google::Logging::V2::LogMetric | Hash"],"description":"The updated metric.\nA hash of the same form as <code>Google::Logging::V2::LogMetric</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Logging::V2::LogMetric"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/logging/v2/logmetric\">Google::Logging::V2::LogMetric</a>"],"description":""}]},{"id":"delete_log_metric-instance","type":"instance","name":"delete_log_metric","title":["Google","Cloud","Logging","V2","MetricsServiceV2Client#delete_log_metric"],"description":"<p>Deletes a logs-based metric.</p>","source":"google-cloud-logging/lib/google/cloud/logging/v2/metrics_service_v2_client.rb#L434","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging/v2\"\n\nmetrics_service_v2_client = Google::Cloud::Logging::V2::MetricsServiceV2Client.new\nformatted_metric_name = Google::Cloud::Logging::V2::MetricsServiceV2Client.metric_path(\"[PROJECT]\", \"[METRIC]\")\nmetrics_service_v2_client.delete_log_metric(formatted_metric_name)"}],"params":[{"name":"metric_name","types":["String"],"description":"The resource name of the metric to delete:</p>\n\n<pre><code>\"projects/[PROJECT_ID]/metrics/[METRIC_ID]\"\n</code></pre>","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":null,"description":"[]","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]}]}