{"id":"google/firestore/v1beta1/commitrequest","name":"CommitRequest","title":["Google","Firestore","V1beta1","CommitRequest"],"description":"<p>The request for Google::Firestore::V1beta1::Firestore::Commit.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L238","resources":[],"examples":[],"methods":[{"id":"database-instance","type":"instance","name":"database","title":["Google","Firestore","V1beta1","CommitRequest#database"],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L238","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The database name. In the format:\n+projects/project_id/databases/database_id+."}]},{"id":"database=-instance","type":"instance","name":"database=","title":["Google","Firestore","V1beta1","CommitRequest#database="],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L238","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The database name. In the format:\n+projects/project_id/databases/database_id+."}]},{"id":"writes-instance","type":"instance","name":"writes","title":["Google","Firestore","V1beta1","CommitRequest#writes"],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L238","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/firestore/v1beta1/write\">Google::Firestore::V1beta1::Write</a>&gt;"],"description":"The writes to apply.</p>\n\n<p>Always executed atomically and in order."}]},{"id":"writes=-instance","type":"instance","name":"writes=","title":["Google","Firestore","V1beta1","CommitRequest#writes="],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L238","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/firestore/v1beta1/write\">Google::Firestore::V1beta1::Write</a>&gt;"],"description":"The writes to apply.</p>\n\n<p>Always executed atomically and in order."}]},{"id":"transaction-instance","type":"instance","name":"transaction","title":["Google","Firestore","V1beta1","CommitRequest#transaction"],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L238","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"If set, applies all writes in this transaction, and commits it."}]},{"id":"transaction=-instance","type":"instance","name":"transaction=","title":["Google","Firestore","V1beta1","CommitRequest#transaction="],"description":"","source":"google-cloud-firestore/lib/google/cloud/firestore/v1beta1/doc/google/firestore/v1beta1/firestore.rb#L238","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"If set, applies all writes in this transaction, and commits it."}]}]}