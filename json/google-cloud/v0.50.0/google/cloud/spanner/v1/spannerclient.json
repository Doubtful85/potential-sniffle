{"id":"google/cloud/spanner/v1/spannerclient","name":"SpannerClient","title":["Google","Cloud","Spanner","V1","SpannerClient"],"description":"<p>Cloud Spanner API</p>\n\n<p>The Cloud Spanner API can be used to manage sessions and execute\ntransactions on data stored in Cloud Spanner databases.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L41","resources":[],"examples":[],"methods":[{"id":"spanner_stub-instance","type":"instance","name":"spanner_stub","title":["Google","Cloud","Spanner","V1","SpannerClient#spanner_stub"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L41","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Spanner::V1::Spanner::Stub"],"description":""}]},{"id":"database_path-class","type":"class","name":"database_path","title":["Google","Cloud","Spanner","V1","SpannerClient.database_path"],"description":"<p>Returns a fully-qualified database resource name string.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L87","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"instance","types":["String"],"description":"","optional":false,"nullable":false},{"name":"database","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"session_path-class","type":"class","name":"session_path","title":["Google","Cloud","Spanner","V1","SpannerClient.session_path"],"description":"<p>Returns a fully-qualified session resource name string.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L101","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"instance","types":["String"],"description":"","optional":false,"nullable":false},{"name":"database","types":["String"],"description":"","optional":false,"nullable":false},{"name":"session","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Spanner","V1","SpannerClient#initialize"],"description":"","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L134","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/v1/spannerclient\">SpannerClient</a>"],"description":"a new instance of SpannerClient"}]},{"id":"create_session-instance","type":"instance","name":"create_session","title":["Google","Cloud","Spanner","V1","SpannerClient#create_session"],"description":"<p>Creates a new session. A session can be used to perform\ntransactions that read and/or modify data in a Cloud Spanner database.\nSessions are meant to be reused for many consecutive\ntransactions.</p>\n\n<p>Sessions can only execute one transaction at a time. To execute\nmultiple concurrent read-write/write-only transactions, create\nmultiple sessions. Note that standalone reads and queries use a\ntransaction internally, and count toward the one transaction\nlimit.</p>\n\n<p>Cloud Spanner limits the number of sessions that can exist at any given\ntime; thus, it is a good idea to delete idle and/or unneeded sessions.\nAside from explicit deletes, Cloud Spanner can delete sessions for which no\noperations are sent for more than an hour. If a session is deleted,\nrequests to it return +NOT_FOUND+.</p>\n\n<p>Idle sessions can be kept alive by sending a trivial SQL query\nperiodically, e.g., +”SELECT 1”+.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L297","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_database = Google::Cloud::Spanner::V1::SpannerClient.database_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\")\nresponse = spanner_client.create_session(formatted_database)"}],"params":[{"name":"database","types":["String"],"description":"Required. The database in which the new session is created.","optional":false,"nullable":false},{"name":"session","types":["Google::Spanner::V1::Session | Hash"],"description":"The session to create.\nA hash of the same form as <code>Google::Spanner::V1::Session</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/session\">Google::Spanner::V1::Session</a>"],"description":""}]},{"id":"get_session-instance","type":"instance","name":"get_session","title":["Google","Cloud","Spanner","V1","SpannerClient#get_session"],"description":"<p>Gets a session. Returns +NOT_FOUND+ if the session does not exist.\nThis is mainly useful for determining whether a session is still\nalive.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L327","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_name = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\nresponse = spanner_client.get_session(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"Required. The name of the session to retrieve.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/session\">Google::Spanner::V1::Session</a>"],"description":""}]},{"id":"list_sessions-instance","type":"instance","name":"list_sessions","title":["Google","Cloud","Spanner","V1","SpannerClient#list_sessions"],"description":"<p>Lists all sessions in a given database.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L386","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_database = Google::Cloud::Spanner::V1::SpannerClient.database_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\")\n\n# Iterate over all results.\nspanner_client.list_sessions(formatted_database).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\nspanner_client.list_sessions(formatted_database).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"database","types":["String"],"description":"Required. The database in which to list sessions.","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"filter","types":["String"],"description":"An expression for filtering the results of the request. Filter rules are\ncase insensitive. The fields eligible for filtering are:</p>\n\n<ul>\n  <li>+labels.key+ where key is the name of a label</li>\n</ul>\n\n<p>Some examples of using filters are:</p>\n\n<ul>\n  <li>+labels.env:*+ –&gt; The session has the label “env”.\n    <ul>\n      <li>+labels.env:dev+ –&gt; The session has the label “env” and the value of\nthe label contains the string “dev”.</li>\n    </ul>\n  </li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/spanner/v1/session\">Google::Spanner::V1::Session</a>&gt;"],"description":"An enumerable of Google::Spanner::V1::Session instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"delete_session-instance","type":"instance","name":"delete_session","title":["Google","Cloud","Spanner","V1","SpannerClient#delete_session"],"description":"<p>Ends a session, releasing server resources associated with it.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L415","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_name = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\nspanner_client.delete_session(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"Required. The name of the session to delete.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"execute_sql-instance","type":"instance","name":"execute_sql","title":["Google","Cloud","Spanner","V1","SpannerClient#execute_sql"],"description":"<p>Executes an SQL query, returning all rows in a single reply. This\nmethod cannot be used to return a result set larger than 10 MiB;\nif the query yields more data than that, the query fails with\na +FAILED_PRECONDITION+ error.</p>\n\n<p>Queries inside read-write transactions might return +ABORTED+. If\nthis occurs, the application should restart the transaction from\nthe beginning. See <a data-custom-type=\"google/spanner/v1/transaction\">Transaction</a> for more details.</p>\n\n<p>Larger result sets can be fetched in streaming fashion by calling\nGoogle::Spanner::V1::Spanner::ExecuteStreamingSql instead.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L506","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +sql+:\nsql = ''\nresponse = spanner_client.execute_sql(formatted_session, sql)"}],"params":[{"name":"session","types":["String"],"description":"Required. The session in which the SQL query should be performed.","optional":false,"nullable":false},{"name":"sql","types":["String"],"description":"Required. The SQL query string.","optional":false,"nullable":false},{"name":"transaction","types":["Google::Spanner::V1::TransactionSelector | Hash"],"description":"The transaction to use. If none is provided, the default is a\ntemporary read-only transaction with strong concurrency.\nA hash of the same form as <code>Google::Spanner::V1::TransactionSelector</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"params","types":["Google::Protobuf::Struct | Hash"],"description":"The SQL query string can contain parameter placeholders. A parameter\nplaceholder consists of +’@’+ followed by the parameter\nname. Parameter names consist of any combination of letters,\nnumbers, and underscores.</p>\n\n<p>Parameters can appear anywhere that a literal value is expected.  The same\nparameter name can be used more than once, for example:\n  +”WHERE id &gt; @msg_id AND id &lt; @msg_id + 100”+</p>\n\n<p>It is an error to execute an SQL query with unbound parameters.</p>\n\n<p>Parameter values are specified using +params+, which is a JSON\nobject whose keys are parameter names, and whose values are the\ncorresponding parameter values.\nA hash of the same form as <code>Google::Protobuf::Struct</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"param_types","types":["Hash{String => Google::Spanner::V1::Type | Hash}"],"description":"It is not always possible for Cloud Spanner to infer the right SQL type\nfrom a JSON value.  For example, values of type +BYTES+ and values\nof type +STRING+ both appear in Google::Spanner::V1::ExecuteSqlRequest#params as JSON strings.</p>\n\n<p>In these cases, +param_types+ can be used to specify the exact\nSQL type for some or all of the SQL query parameters. See the\ndefinition of Google::Spanner::V1::Type for more information\nabout SQL types.\nA hash of the same form as <code>Google::Spanner::V1::Type</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"resume_token","types":["String"],"description":"If this request is resuming a previously interrupted SQL query\nexecution, +resume_token+ should be copied from the last\n<a data-custom-type=\"google/spanner/v1/partialresultset\">PartialResultSet</a> yielded before the interruption. Doing this\nenables the new SQL query execution to resume where the last one left\noff. The rest of the request parameters must exactly match the\nrequest that yielded this token.","optional":true,"default":"nil","nullable":true},{"name":"query_mode","types":["Google::Spanner::V1::ExecuteSqlRequest::QueryMode"],"description":"Used to control the amount of debugging information returned in\n<a data-custom-type=\"google/spanner/v1/resultsetstats\">ResultSetStats</a>. If Google::Spanner::V1::ExecuteSqlRequest#partition_token is set, Google::Spanner::V1::ExecuteSqlRequest#query_mode can only\nbe set to <a data-custom-type=\"google/spanner/v1/executesqlrequest/querymode/normal\">QueryMode::NORMAL</a>.","optional":true,"default":"nil","nullable":true},{"name":"partition_token","types":["String"],"description":"If present, results will be restricted to the specified partition\npreviously created using PartitionQuery().  There must be an exact\nmatch for the values of fields common to this message and the\nPartitionQueryRequest message used to create this partition_token.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/resultset\">Google::Spanner::V1::ResultSet</a>"],"description":""}]},{"id":"execute_streaming_sql-instance","type":"instance","name":"execute_streaming_sql","title":["Google","Cloud","Spanner","V1","SpannerClient#execute_streaming_sql"],"description":"<p>Like Google::Spanner::V1::Spanner::ExecuteSql, except returns the result\nset as a stream. Unlike Google::Spanner::V1::Spanner::ExecuteSql, there\nis no limit on the size of the returned result set. However, no\nindividual row in the result set can exceed 100 MiB, and no\ncolumn value can exceed 10 MiB.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L608","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +sql+:\nsql = ''\nspanner_client.execute_streaming_sql(formatted_session, sql).each do |element|\n  # Process element.\nend"}],"params":[{"name":"session","types":["String"],"description":"Required. The session in which the SQL query should be performed.","optional":false,"nullable":false},{"name":"sql","types":["String"],"description":"Required. The SQL query string.","optional":false,"nullable":false},{"name":"transaction","types":["Google::Spanner::V1::TransactionSelector | Hash"],"description":"The transaction to use. If none is provided, the default is a\ntemporary read-only transaction with strong concurrency.\nA hash of the same form as <code>Google::Spanner::V1::TransactionSelector</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"params","types":["Google::Protobuf::Struct | Hash"],"description":"The SQL query string can contain parameter placeholders. A parameter\nplaceholder consists of +’@’+ followed by the parameter\nname. Parameter names consist of any combination of letters,\nnumbers, and underscores.</p>\n\n<p>Parameters can appear anywhere that a literal value is expected.  The same\nparameter name can be used more than once, for example:\n  +”WHERE id &gt; @msg_id AND id &lt; @msg_id + 100”+</p>\n\n<p>It is an error to execute an SQL query with unbound parameters.</p>\n\n<p>Parameter values are specified using +params+, which is a JSON\nobject whose keys are parameter names, and whose values are the\ncorresponding parameter values.\nA hash of the same form as <code>Google::Protobuf::Struct</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"param_types","types":["Hash{String => Google::Spanner::V1::Type | Hash}"],"description":"It is not always possible for Cloud Spanner to infer the right SQL type\nfrom a JSON value.  For example, values of type +BYTES+ and values\nof type +STRING+ both appear in Google::Spanner::V1::ExecuteSqlRequest#params as JSON strings.</p>\n\n<p>In these cases, +param_types+ can be used to specify the exact\nSQL type for some or all of the SQL query parameters. See the\ndefinition of Google::Spanner::V1::Type for more information\nabout SQL types.\nA hash of the same form as <code>Google::Spanner::V1::Type</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"resume_token","types":["String"],"description":"If this request is resuming a previously interrupted SQL query\nexecution, +resume_token+ should be copied from the last\n<a data-custom-type=\"google/spanner/v1/partialresultset\">PartialResultSet</a> yielded before the interruption. Doing this\nenables the new SQL query execution to resume where the last one left\noff. The rest of the request parameters must exactly match the\nrequest that yielded this token.","optional":true,"default":"nil","nullable":true},{"name":"query_mode","types":["Google::Spanner::V1::ExecuteSqlRequest::QueryMode"],"description":"Used to control the amount of debugging information returned in\n<a data-custom-type=\"google/spanner/v1/resultsetstats\">ResultSetStats</a>. If Google::Spanner::V1::ExecuteSqlRequest#partition_token is set, Google::Spanner::V1::ExecuteSqlRequest#query_mode can only\nbe set to <a data-custom-type=\"google/spanner/v1/executesqlrequest/querymode/normal\">QueryMode::NORMAL</a>.","optional":true,"default":"nil","nullable":true},{"name":"partition_token","types":["String"],"description":"If present, results will be restricted to the specified partition\npreviously created using PartitionQuery().  There must be an exact\nmatch for the values of fields common to this message and the\nPartitionQueryRequest message used to create this partition_token.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Enumerable&lt;<a data-custom-type=\"google/spanner/v1/partialresultset\">Google::Spanner::V1::PartialResultSet</a>&gt;"],"description":"An enumerable of Google::Spanner::V1::PartialResultSet instances."}]},{"id":"read-instance","type":"instance","name":"read","title":["Google","Cloud","Spanner","V1","SpannerClient#read"],"description":"<p>Reads rows from the database using key lookups and scans, as a\nsimple key/value style alternative to\nGoogle::Spanner::V1::Spanner::ExecuteSql.  This method cannot be used to\nreturn a result set larger than 10 MiB; if the read matches more\ndata than that, the read fails with a +FAILED_PRECONDITION+\nerror.</p>\n\n<p>Reads inside read-write transactions might return +ABORTED+. If\nthis occurs, the application should restart the transaction from\nthe beginning. See <a data-custom-type=\"google/spanner/v1/transaction\">Transaction</a> for more details.</p>\n\n<p>Larger result sets can be yielded in streaming fashion by calling\nGoogle::Spanner::V1::Spanner::StreamingRead instead.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L714","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +table+:\ntable = ''\n\n# TODO: Initialize +columns+:\ncolumns = []\n\n# TODO: Initialize +key_set+:\nkey_set = {}\nresponse = spanner_client.read(formatted_session, table, columns, key_set)"}],"params":[{"name":"session","types":["String"],"description":"Required. The session in which the read should be performed.","optional":false,"nullable":false},{"name":"table","types":["String"],"description":"Required. The name of the table in the database to be read.","optional":false,"nullable":false},{"name":"columns","types":["Array<String>"],"description":"The columns of Google::Spanner::V1::ReadRequest#table to be returned for each row matching\nthis request.","optional":false,"nullable":false},{"name":"key_set","types":["Google::Spanner::V1::KeySet | Hash"],"description":"Required. +key_set+ identifies the rows to be yielded. +key_set+ names the\nprimary keys of the rows in Google::Spanner::V1::ReadRequest#table to be yielded, unless Google::Spanner::V1::ReadRequest#index\nis present. If Google::Spanner::V1::ReadRequest#index is present, then Google::Spanner::V1::ReadRequest#key_set instead names\nindex keys in Google::Spanner::V1::ReadRequest#index.</p>\n\n<p>If the Google::Spanner::V1::ReadRequest#partition_token field is empty, rows are yielded\nin table primary key order (if Google::Spanner::V1::ReadRequest#index is empty) or index key order\n(if Google::Spanner::V1::ReadRequest#index is non-empty).  If the Google::Spanner::V1::ReadRequest#partition_token field is not\nempty, rows will be yielded in an unspecified order.</p>\n\n<p>It is not an error for the +key_set+ to name rows that do not\nexist in the database. Read yields nothing for nonexistent rows.\nA hash of the same form as <code>Google::Spanner::V1::KeySet</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"transaction","types":["Google::Spanner::V1::TransactionSelector | Hash"],"description":"The transaction to use. If none is provided, the default is a\ntemporary read-only transaction with strong concurrency.\nA hash of the same form as <code>Google::Spanner::V1::TransactionSelector</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"index","types":["String"],"description":"If non-empty, the name of an index on Google::Spanner::V1::ReadRequest#table. This index is\nused instead of the table primary key when interpreting Google::Spanner::V1::ReadRequest#key_set\nand sorting result rows. See Google::Spanner::V1::ReadRequest#key_set for further information.","optional":true,"default":"nil","nullable":true},{"name":"limit","types":["Integer"],"description":"If greater than zero, only the first +limit+ rows are yielded. If +limit+\nis zero, the default is no limit. A limit cannot be specified if\n+partition_token+ is set.","optional":true,"default":"nil","nullable":true},{"name":"resume_token","types":["String"],"description":"If this request is resuming a previously interrupted read,\n+resume_token+ should be copied from the last\n<a data-custom-type=\"google/spanner/v1/partialresultset\">PartialResultSet</a> yielded before the interruption. Doing this\nenables the new read to resume where the last read left off. The\nrest of the request parameters must exactly match the request\nthat yielded this token.","optional":true,"default":"nil","nullable":true},{"name":"partition_token","types":["String"],"description":"If present, results will be restricted to the specified partition\npreviously created using PartitionRead().    There must be an exact\nmatch for the values of fields common to this message and the\nPartitionReadRequest message used to create this partition_token.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/resultset\">Google::Spanner::V1::ResultSet</a>"],"description":""}]},{"id":"streaming_read-instance","type":"instance","name":"streaming_read","title":["Google","Cloud","Spanner","V1","SpannerClient#streaming_read"],"description":"<p>Like Google::Spanner::V1::Spanner::Read, except returns the result set as a\nstream. Unlike Google::Spanner::V1::Spanner::Read, there is no limit on the\nsize of the returned result set. However, no individual row in\nthe result set can exceed 100 MiB, and no column value can exceed\n10 MiB.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L818","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +table+:\ntable = ''\n\n# TODO: Initialize +columns+:\ncolumns = []\n\n# TODO: Initialize +key_set+:\nkey_set = {}\nspanner_client.streaming_read(formatted_session, table, columns, key_set).each do |element|\n  # Process element.\nend"}],"params":[{"name":"session","types":["String"],"description":"Required. The session in which the read should be performed.","optional":false,"nullable":false},{"name":"table","types":["String"],"description":"Required. The name of the table in the database to be read.","optional":false,"nullable":false},{"name":"columns","types":["Array<String>"],"description":"The columns of Google::Spanner::V1::ReadRequest#table to be returned for each row matching\nthis request.","optional":false,"nullable":false},{"name":"key_set","types":["Google::Spanner::V1::KeySet | Hash"],"description":"Required. +key_set+ identifies the rows to be yielded. +key_set+ names the\nprimary keys of the rows in Google::Spanner::V1::ReadRequest#table to be yielded, unless Google::Spanner::V1::ReadRequest#index\nis present. If Google::Spanner::V1::ReadRequest#index is present, then Google::Spanner::V1::ReadRequest#key_set instead names\nindex keys in Google::Spanner::V1::ReadRequest#index.</p>\n\n<p>If the Google::Spanner::V1::ReadRequest#partition_token field is empty, rows are yielded\nin table primary key order (if Google::Spanner::V1::ReadRequest#index is empty) or index key order\n(if Google::Spanner::V1::ReadRequest#index is non-empty).  If the Google::Spanner::V1::ReadRequest#partition_token field is not\nempty, rows will be yielded in an unspecified order.</p>\n\n<p>It is not an error for the +key_set+ to name rows that do not\nexist in the database. Read yields nothing for nonexistent rows.\nA hash of the same form as <code>Google::Spanner::V1::KeySet</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"transaction","types":["Google::Spanner::V1::TransactionSelector | Hash"],"description":"The transaction to use. If none is provided, the default is a\ntemporary read-only transaction with strong concurrency.\nA hash of the same form as <code>Google::Spanner::V1::TransactionSelector</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"index","types":["String"],"description":"If non-empty, the name of an index on Google::Spanner::V1::ReadRequest#table. This index is\nused instead of the table primary key when interpreting Google::Spanner::V1::ReadRequest#key_set\nand sorting result rows. See Google::Spanner::V1::ReadRequest#key_set for further information.","optional":true,"default":"nil","nullable":true},{"name":"limit","types":["Integer"],"description":"If greater than zero, only the first +limit+ rows are yielded. If +limit+\nis zero, the default is no limit. A limit cannot be specified if\n+partition_token+ is set.","optional":true,"default":"nil","nullable":true},{"name":"resume_token","types":["String"],"description":"If this request is resuming a previously interrupted read,\n+resume_token+ should be copied from the last\n<a data-custom-type=\"google/spanner/v1/partialresultset\">PartialResultSet</a> yielded before the interruption. Doing this\nenables the new read to resume where the last read left off. The\nrest of the request parameters must exactly match the request\nthat yielded this token.","optional":true,"default":"nil","nullable":true},{"name":"partition_token","types":["String"],"description":"If present, results will be restricted to the specified partition\npreviously created using PartitionRead().    There must be an exact\nmatch for the values of fields common to this message and the\nPartitionReadRequest message used to create this partition_token.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Enumerable&lt;<a data-custom-type=\"google/spanner/v1/partialresultset\">Google::Spanner::V1::PartialResultSet</a>&gt;"],"description":"An enumerable of Google::Spanner::V1::PartialResultSet instances."}]},{"id":"begin_transaction-instance","type":"instance","name":"begin_transaction","title":["Google","Cloud","Spanner","V1","SpannerClient#begin_transaction"],"description":"<p>Begins a new transaction. This step can often be skipped:\nGoogle::Spanner::V1::Spanner::Read, Google::Spanner::V1::Spanner::ExecuteSql and\nGoogle::Spanner::V1::Spanner::Commit can begin a new transaction as a\nside-effect.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L870","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +options_+:\noptions_ = {}\nresponse = spanner_client.begin_transaction(formatted_session, options_)"}],"params":[{"name":"session","types":["String"],"description":"Required. The session in which the transaction runs.","optional":false,"nullable":false},{"name":"options_","types":["Google::Spanner::V1::TransactionOptions | Hash"],"description":"Required. Options for the new transaction.\nA hash of the same form as <code>Google::Spanner::V1::TransactionOptions</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/transaction\">Google::Spanner::V1::Transaction</a>"],"description":""}]},{"id":"commit-instance","type":"instance","name":"commit","title":["Google","Cloud","Spanner","V1","SpannerClient#commit"],"description":"<p>Commits a transaction. The request includes the mutations to be\napplied to rows in the database.</p>\n\n<p>+Commit+ might return an +ABORTED+ error. This can occur at any time;\ncommonly, the cause is conflicts with concurrent\ntransactions. However, it can also happen for a variety of other\nreasons. If +Commit+ returns +ABORTED+, the caller should re-attempt\nthe transaction from the beginning, re-using the same session.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L928","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +mutations+:\nmutations = []\nresponse = spanner_client.commit(formatted_session, mutations)"}],"params":[{"name":"session","types":["String"],"description":"Required. The session in which the transaction to be committed is running.","optional":false,"nullable":false},{"name":"mutations","types":["Array<Google::Spanner::V1::Mutation | Hash>"],"description":"The mutations to be executed when this transaction commits. All\nmutations are applied atomically, in the order they appear in\nthis list.\nA hash of the same form as <code>Google::Spanner::V1::Mutation</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"transaction_id","types":["String"],"description":"Commit a previously-started transaction.","optional":true,"default":"nil","nullable":true},{"name":"single_use_transaction","types":["Google::Spanner::V1::TransactionOptions | Hash"],"description":"Execute mutations in a temporary transaction. Note that unlike\ncommit of a previously-started transaction, commit with a\ntemporary transaction is non-idempotent. That is, if the\n+CommitRequest+ is sent to Cloud Spanner more than once (for\ninstance, due to retries in the application, or in the\ntransport library), it is possible that the mutations are\nexecuted more than once. If this is undesirable, use\nGoogle::Spanner::V1::Spanner::BeginTransaction and\nGoogle::Spanner::V1::Spanner::Commit instead.\nA hash of the same form as <code>Google::Spanner::V1::TransactionOptions</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/commitresponse\">Google::Spanner::V1::CommitResponse</a>"],"description":""}]},{"id":"rollback-instance","type":"instance","name":"rollback","title":["Google","Cloud","Spanner","V1","SpannerClient#rollback"],"description":"<p>Rolls back a transaction, releasing any locks it holds. It is a good\nidea to call this for any transaction that includes one or more\nGoogle::Spanner::V1::Spanner::Read or Google::Spanner::V1::Spanner::ExecuteSql requests and\nultimately decides not to commit.</p>\n\n<p>+Rollback+ returns +OK+ if it successfully aborts the transaction, the\ntransaction was already aborted, or the transaction is not\nfound. +Rollback+ never returns +ABORTED+.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L971","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +transaction_id+:\ntransaction_id = ''\nspanner_client.rollback(formatted_session, transaction_id)"}],"params":[{"name":"session","types":["String"],"description":"Required. The session in which the transaction to roll back is running.","optional":false,"nullable":false},{"name":"transaction_id","types":["String"],"description":"Required. The transaction to roll back.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"partition_query-instance","type":"instance","name":"partition_query","title":["Google","Cloud","Spanner","V1","SpannerClient#partition_query"],"description":"<p>Creates a set of partition tokens that can be used to execute a query\noperation in parallel.  Each of the returned partition tokens can be used\nby Google::Spanner::V1::Spanner::ExecuteStreamingSql to specify a subset\nof the query result to read.  The same session and read-only transaction\nmust be used by the PartitionQueryRequest used to create the\npartition tokens and the ExecuteSqlRequests that use the partition tokens.\nPartition tokens become invalid when the session used to create them\nis deleted or begins a new transaction.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L1054","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +sql+:\nsql = ''\nresponse = spanner_client.partition_query(formatted_session, sql)"}],"params":[{"name":"session","types":["String"],"description":"Required. The session used to create the partitions.","optional":false,"nullable":false},{"name":"sql","types":["String"],"description":"The query request to generate partitions for. The request will fail if\nthe query is not root partitionable. The query plan of a root\npartitionable query has a single distributed union operator. A distributed\nunion operator conceptually divides one or more tables into multiple\nsplits, remotely evaluates a subquery independently on each split, and\nthen unions all results.","optional":false,"nullable":false},{"name":"transaction","types":["Google::Spanner::V1::TransactionSelector | Hash"],"description":"Read only snapshot transactions are supported, read/write and single use\ntransactions are not.\nA hash of the same form as <code>Google::Spanner::V1::TransactionSelector</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"params","types":["Google::Protobuf::Struct | Hash"],"description":"The SQL query string can contain parameter placeholders. A parameter\nplaceholder consists of +’@’+ followed by the parameter\nname. Parameter names consist of any combination of letters,\nnumbers, and underscores.</p>\n\n<p>Parameters can appear anywhere that a literal value is expected.  The same\nparameter name can be used more than once, for example:\n  +”WHERE id &gt; @msg_id AND id &lt; @msg_id + 100”+</p>\n\n<p>It is an error to execute an SQL query with unbound parameters.</p>\n\n<p>Parameter values are specified using +params+, which is a JSON\nobject whose keys are parameter names, and whose values are the\ncorresponding parameter values.\nA hash of the same form as <code>Google::Protobuf::Struct</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"param_types","types":["Hash{String => Google::Spanner::V1::Type | Hash}"],"description":"It is not always possible for Cloud Spanner to infer the right SQL type\nfrom a JSON value.  For example, values of type +BYTES+ and values\nof type +STRING+ both appear in Google::Spanner::V1::PartitionQueryRequest#params as JSON strings.</p>\n\n<p>In these cases, +param_types+ can be used to specify the exact\nSQL type for some or all of the SQL query parameters. See the\ndefinition of Google::Spanner::V1::Type for more information\nabout SQL types.\nA hash of the same form as <code>Google::Spanner::V1::Type</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"partition_options","types":["Google::Spanner::V1::PartitionOptions | Hash"],"description":"Additional options that affect how many partitions are created.\nA hash of the same form as <code>Google::Spanner::V1::PartitionOptions</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/partitionresponse\">Google::Spanner::V1::PartitionResponse</a>"],"description":""}]},{"id":"partition_read-instance","type":"instance","name":"partition_read","title":["Google","Cloud","Spanner","V1","SpannerClient#partition_read"],"description":"<p>Creates a set of partition tokens that can be used to execute a read\noperation in parallel.  Each of the returned partition tokens can be used\nby Google::Spanner::V1::Spanner::StreamingRead to specify a subset of the read\nresult to read.  The same session and read-only transaction must be used by\nthe PartitionReadRequest used to create the partition tokens and the\nReadRequests that use the partition tokens.\nPartition tokens become invalid when the session used to create them\nis deleted or begins a new transaction.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/v1/spanner_client.rb#L1131","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner/v1\"\n\nspanner_client = Google::Cloud::Spanner::V1.new\nformatted_session = Google::Cloud::Spanner::V1::SpannerClient.session_path(\"[PROJECT]\", \"[INSTANCE]\", \"[DATABASE]\", \"[SESSION]\")\n\n# TODO: Initialize +table+:\ntable = ''\n\n# TODO: Initialize +key_set+:\nkey_set = {}\nresponse = spanner_client.partition_read(formatted_session, table, key_set)"}],"params":[{"name":"session","types":["String"],"description":"Required. The session used to create the partitions.","optional":false,"nullable":false},{"name":"table","types":["String"],"description":"Required. The name of the table in the database to be read.","optional":false,"nullable":false},{"name":"key_set","types":["Google::Spanner::V1::KeySet | Hash"],"description":"Required. +key_set+ identifies the rows to be yielded. +key_set+ names the\nprimary keys of the rows in Google::Spanner::V1::PartitionReadRequest#table to be yielded, unless Google::Spanner::V1::PartitionReadRequest#index\nis present. If Google::Spanner::V1::PartitionReadRequest#index is present, then Google::Spanner::V1::PartitionReadRequest#key_set instead names\nindex keys in Google::Spanner::V1::PartitionReadRequest#index.</p>\n\n<p>It is not an error for the +key_set+ to name rows that do not\nexist in the database. Read yields nothing for nonexistent rows.\nA hash of the same form as <code>Google::Spanner::V1::KeySet</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"transaction","types":["Google::Spanner::V1::TransactionSelector | Hash"],"description":"Read only snapshot transactions are supported, read/write and single use\ntransactions are not.\nA hash of the same form as <code>Google::Spanner::V1::TransactionSelector</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"index","types":["String"],"description":"If non-empty, the name of an index on Google::Spanner::V1::PartitionReadRequest#table. This index is\nused instead of the table primary key when interpreting Google::Spanner::V1::PartitionReadRequest#key_set\nand sorting result rows. See Google::Spanner::V1::PartitionReadRequest#key_set for further information.","optional":true,"default":"nil","nullable":true},{"name":"columns","types":["Array<String>"],"description":"The columns of Google::Spanner::V1::PartitionReadRequest#table to be returned for each row matching\nthis request.","optional":true,"default":"nil","nullable":true},{"name":"partition_options","types":["Google::Spanner::V1::PartitionOptions | Hash"],"description":"Additional options that affect how many partitions are created.\nA hash of the same form as <code>Google::Spanner::V1::PartitionOptions</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/spanner/v1/partitionresponse\">Google::Spanner::V1::PartitionResponse</a>"],"description":""}]}]}