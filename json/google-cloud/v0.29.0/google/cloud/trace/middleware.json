{"id":"google/cloud/trace/middleware","name":"Middleware","title":["Google","Cloud","Trace","Middleware"],"description":"<h1 id=\"trace-middleware\">Trace Middleware</h1>\n\n<p>A Rack middleware that manages trace context and captures a trace of\nthe request. Specifically, it:</p>\n\n<ul>\n  <li>Reads the trace context from the request headers, if present.\nOtherwise, generates a new trace context.</li>\n  <li>Makes a sampling decision if one is not already specified.</li>\n  <li>Records a span measuring the entire handling of the request,\nannotated with a set of standard request data.</li>\n  <li>Makes the trace context available so downstream middlewares and the\napp can add further spans to the trace.</li>\n  <li>Sends the completed trace to the Stackdriver service.</li>\n</ul>\n\n<h2 id=\"installing\">Installing</h2>\n\n<p>To use this middleware, simply install it in your middleware stack.\nHere is an example Sinatra application that includes the Trace\nmiddleware:</p>\n\n<pre><code class=\"language-ruby\"># Simple sinatra application\n\nrequire \"sinatra\"\nrequire \"google/cloud/trace\"\n\nuse Google::Cloud::Trace::Middleware\n\nget \"/\" do\n  \"Hello World!\"\nend\n</code></pre>\n\n<p>Here is an example <code>config.ru</code> file for a web application that uses\nthe standard Rack configuration mechanism.</p>\n\n<pre><code class=\"language-ruby\"># config.ru for simple Rack application\n\nrequire \"google/cloud/trace\"\nuse Google::Cloud::Trace::Middleware\n\nrun MyApp\n</code></pre>\n\n<p>If your application uses Ruby On Rails, you may also use the provided\n<a data-custom-type=\"google/cloud/trace/railtie\">Google::Cloud::Trace::Railtie</a> for close integration with Rails and\nActiveRecord.</p>\n\n<h2 id=\"custom-measurements\">Custom measurements</h2>\n\n<p>By default, this middleware creates traces that measure just the http\nrequest handling as a whole. If you want to provide more detailed\nmeasurements of smaller processes, use the classes provided in this\nlibrary. Below is a Sinatra example to get you started.</p>\n\n<pre><code class=\"language-ruby\"># Simple sinatra application\n\nrequire \"sinatra\"\nrequire \"google/cloud/trace\"\n\nuse Google::Cloud::Trace::Middleware\n\nget \"/\" do\n  Google::Cloud::Trace.in_span \"Sleeping on the job!\" do\n    sleep rand\n  end\n  \"Hello World!\"\nend\n</code></pre>\n\n<h2 id=\"sampling-and-blacklisting\">Sampling and blacklisting</h2>\n\n<p>A sampler makes the decision whether to record a trace for each\nrequest (if the decision was not made by the context, e.g. by providing\na request header). By default, this sampler is the default\n<a data-custom-type=\"google/cloud/trace/timesampler\">Google::Cloud::Trace::TimeSampler</a>, which enforces a maximum QPS per\nprocess, and blacklists a small number of request paths such as\nhealth checks sent by Google App Engine. You may adjust this behavior\nby providing an alternate sampler. See\n<a data-custom-type=\"google/cloud/trace/timesampler\">Google::Cloud::Trace::TimeSampler</a>.</p>","source":"google-cloud-trace/lib/google/cloud/trace/middleware.rb#L106","resources":[],"examples":[],"methods":[{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Trace","Middleware#initialize"],"description":"<p>Create a new Middleware for traces</p>","source":"google-cloud-trace/lib/google/cloud/trace/middleware.rb#L122","resources":[],"examples":[],"params":[{"name":"app","types":["Rack Application"],"description":"Rack application","optional":false,"nullable":false},{"name":"service","types":["Google::Cloud::Trace::Service"],"description":"The service object.\nOptional if running on GCE.","optional":true,"default":"nil","nullable":true},{"name":"*kwargs","types":["Hash"],"description":"Hash of configuration settings. Used for\nbackward API compatibility. See the <a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/stackdriver/guides/instrumentation_configuration\">Configuration\nGuide</a>\nfor the prefered way to set configuration parameters.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/trace/middleware\">Middleware</a>"],"description":"a new instance of Middleware"}]},{"id":"call-instance","type":"instance","name":"call","title":["Google","Cloud","Trace","Middleware#call"],"description":"<p>Implementation of the trace middleware. Creates a trace for this\nrequest, populates it with a root span for the entire request, and\nensures it is reported back to Stackdriver.</p>","source":"google-cloud-trace/lib/google/cloud/trace/middleware.rb#L145","resources":[],"examples":[],"params":[{"name":"env","types":["Hash"],"description":"Rack environment hash","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Rack::Response"],"description":"The response from downstream Rack app"}]}]}