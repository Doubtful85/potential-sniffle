{"id":"google/cloud/dialogflow/v2/agents","name":"Agents","title":["Google","Cloud","Dialogflow","V2","Agents"],"description":"<p>rubocop:enable LineLength</p>","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2.rb#L60","resources":[],"examples":[],"methods":[{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","Dialogflow","V2","Agents.new"],"description":"<p>Agents are best described as Natural Language Understanding (NLU) modules\nthat transform user requests into actionable data. You can include agents\nin your app, product, or service to determine user intent and respond to the\nuser in a natural way.</p>\n\n<p>After you create an agent, you can add <a data-custom-type=\"google/cloud/dialogflow/v2/intents\">Intents</a>, <a data-custom-type=\"google/cloud/dialogflow/v2/contexts\">Contexts</a>,\n<a data-custom-type=\"google/cloud/dialogflow/v2/entitytypes\">Entity Types</a>, Google::Cloud::Dialogflow::V2::WebhookRequest, and so on to\nmanage the flow of a conversation and match user input to predefined intents\nand actions.</p>\n\n<p>You can create an agent using both Dialogflow Standard Edition and\nDialogflow Enterprise Edition. For details, see\n<a href=\"https://cloud.google.com/dialogflow-enterprise/docs/editions\">Dialogflow Editions</a>.</p>\n\n<p>You can save your agent for backup or versioning by exporting the agent by\nusing the Google::Cloud::Dialogflow::V2::Agents::ExportAgent method. You can import a saved\nagent by using the Google::Cloud::Dialogflow::V2::Agents::ImportAgent method.</p>\n\n<p>Dialogflow provides several\n<a href=\"https://dialogflow.com/docs/prebuilt-agents\">prebuilt agents</a> for common\nconversation scenarios such as determining a date and time, converting\ncurrency, and so on.</p>\n\n<p>For more information about agents, see the\n<a href=\"https://dialogflow.com/docs/agents\">Dialogflow documentation</a>.</p>","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2.rb#L112","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[]}]}