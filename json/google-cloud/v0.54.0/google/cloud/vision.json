{"id":"google/cloud/vision","name":"Vision","title":["Google","Cloud","Vision"],"description":"<h1 id=\"ruby-client-for-google-cloud-vision-api-alpha\">Ruby Client for Google Cloud Vision API (<a href=\"https://github.com/GoogleCloudPlatform/google-cloud-ruby#versioning\">Alpha</a>)</h1>\n\n<p><a href=\"https://cloud.google.com/vision\">Google Cloud Vision API</a>:\nIntegrates Google Vision features, including image labeling, face, logo, and\nlandmark detection, optical character recognition (OCR), and detection of\nexplicit content, into applications.</p>\n<ul>\n  <li><a href=\"https://cloud.google.com/vision\">Product Documentation</a></li>\n</ul>\n\n<h2 id=\"quick-start\">Quick Start</h2>\n<p>In order to use this library, you first need to go through the following\nsteps:</p>\n\n<ol>\n  <li><a href=\"https://console.cloud.google.com/project\">Select or create a Cloud Platform project.</a></li>\n  <li><a href=\"https://console.cloud.google.com/apis/api/vision\">Enable the Google Cloud Vision API.</a></li>\n  <li><a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud/master/guides/authentication\">Setup Authentication.</a></li>\n</ol>\n\n<h3 id=\"installation\">Installation</h3>\n<pre><code>$ gem install google-cloud-vision\n</code></pre>\n\n<h3 id=\"preview\">Preview</h3>\n<h4 id=\"imageannotatorclient\">ImageAnnotatorClient</h4>\n<pre><code class=\"language-rb\">require \"google/cloud/vision\"\n\nimage_annotator_client = Google::Cloud::Vision.new\ngcs_image_uri = \"gs://gapic-toolkit/President_Barack_Obama.jpg\"\nsource = { gcs_image_uri: gcs_image_uri }\nimage = { source: source }\ntype = :FACE_DETECTION\nfeatures_element = { type: type }\nfeatures = [features_element]\nrequests_element = { image: image, features: features }\nrequests = [requests_element]\nresponse = image_annotator_client.batch_annotate_images(requests)\n</code></pre>\n\n<h3 id=\"next-steps\">Next Steps</h3>\n<ul>\n  <li>Read the <a href=\"https://cloud.google.com/vision\">Google Cloud Vision API Product documentation</a>\nto learn more about the product and see How-to Guides.</li>\n  <li>View this <a href=\"https://github.com/GoogleCloudPlatform/google-cloud-ruby/blob/master/README.md\">repositoryâ€™s main README</a>\nto see the full list of Cloud APIs that we cover.</li>\n</ul>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L224","resources":[],"examples":[],"methods":[{"id":"default_max_faces=-class","type":"class","name":"default_max_faces=","title":["Google","Cloud","Vision.default_max_faces="],"description":"<p>The default max results to return for facial detection requests. This\nis used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>.</p>\n\n<p>The default value is <code>100</code>.</p>\n\n<p>This is also available on the configuration as\n<code>Google::Cloud::Vision.configure.default_max_faces</code></p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L282","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_faces #=> 100\n\nannotation = vision.annotate \"path/to/faces.jpg\", faces: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/faces.jpg\", faces: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_faces = 5\n\nannotation = vision.annotate \"path/to/faces.jpg\", faces: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/faces.jpg\", faces: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_faces #=> 100\n\nfaces = vision.image(\"path/to/faces.jpg\").faces\n# This is the same as calling\n# faces = vision.image(\"path/to/faces.jpg\").faces 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_faces = 5\n\nfaces = vision.image(\"path/to/faces.jpg\").faces\n# This is the same as calling\n# faces = vision.image(\"path/to/faces.jpg\").faces 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_faces-class","type":"class","name":"default_max_faces","title":["Google","Cloud","Vision.default_max_faces"],"description":"<p>The default max results to return for face detection requests.</p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L289","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_landmarks=-class","type":"class","name":"default_max_landmarks=","title":["Google","Cloud","Vision.default_max_landmarks="],"description":"<p>The default max results to return for landmark detection requests.\nThis is used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>.</p>\n\n<p>The default value is 100.</p>\n\n<p>This is also available on the configuration as\n<code>Google::Cloud::Vision.configure.default_max_landmarks</code></p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L351","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_landmarks #=> 100\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, landmarks: true\n# This is the same as calling\n# annotation = vision.annotate img, landmarks: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_landmarks = 5\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, landmarks: true\n# This is the same as calling\n# annotation = vision.annotate img, landmarks: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_landmarks #=> 100\n\nlandmarks = vision.image(\"path/to/landmarks.jpg\").landmarks\n# This is the same as calling\n# landmarks = vision.image(\"path/to/landmarks.jpg\").landmarks 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_landmarks = 5\n\nlandmarks = vision.image(\"path/to/landmarks.jpg\").landmarks\n# This is the same as calling\n# landmarks = vision.image(\"path/to/landmarks.jpg\").landmarks 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_landmarks-class","type":"class","name":"default_max_landmarks","title":["Google","Cloud","Vision.default_max_landmarks"],"description":"<p>The default max results to return for landmark detection requests.</p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L358","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_logos=-class","type":"class","name":"default_max_logos=","title":["Google","Cloud","Vision.default_max_logos="],"description":"<p>The default max results to return for logo detection requests. This is\nused on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>.</p>\n\n<p>The default value is 100.</p>\n\n<p>This is also available on the configuration as\n<code>Google::Cloud::Vision.configure.default_max_logos</code></p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L418","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_logos #=> 100\n\nannotation = vision.annotate \"path/to/logos.jpg\", logos: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/logos.jpg\", logos: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_logos = 5\n\nannotation = vision.annotate \"path/to/logos.jpg\", logos: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/logos.jpg\", logos: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_logos #=> 100\n\nlogos = vision.image(\"path/to/logos.jpg\").logos\n# This is the same as calling\n# logos = vision.image(\"path/to/logos.jpg\").logos 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_logos = 5\n\nlogos = vision.image(\"path/to/logos.jpg\").logos\n# This is the same as calling\n# logos = vision.image(\"path/to/logos.jpg\").logos 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_logos-class","type":"class","name":"default_max_logos","title":["Google","Cloud","Vision.default_max_logos"],"description":"<p>The default max results to return for logo detection requests.</p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L425","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_labels=-class","type":"class","name":"default_max_labels=","title":["Google","Cloud","Vision.default_max_labels="],"description":"<p>The default max results to return for label detection requests. This\nis used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>.</p>\n\n<p>The default value is 100.</p>\n\n<p>This is also available on the configuration as\n<code>Google::Cloud::Vision.configure.default_max_labels</code></p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L485","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_labels #=> 100\n\nannotation = vision.annotate \"path/to/labels.jpg\", labels: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/labels.jpg\", labels: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_labels = 5\n\nannotation = vision.annotate \"path/to/labels.jpg\", labels: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/labels.jpg\", labels: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_labels #=> 100\n\nlabels = vision.image(\"path/to/labels.jpg\").labels\n# This is the same as calling\n# labels = vision.image(\"path/to/labels.jpg\").labels 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_labels = 5\n\nlabels = vision.image(\"path/to/labels.jpg\").labels\n# This is the same as calling\n# labels = vision.image(\"path/to/labels.jpg\").labels 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_labels-class","type":"class","name":"default_max_labels","title":["Google","Cloud","Vision.default_max_labels"],"description":"<p>The default max results to return for label detection requests.</p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L492","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_crop_hints=-class","type":"class","name":"default_max_crop_hints=","title":["Google","Cloud","Vision.default_max_crop_hints="],"description":"<p>The default max results to return for crop hints detection requests.\nThis is used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"crop_hints-instance\">Image#crop_hints</a>.</p>\n\n<p>The default value is 100.</p>\n\n<p>This is also available on the configuration as\n<code>Google::Cloud::Vision.configure.default_max_crop_hints</code></p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L554","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_crop_hints #=> 100\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, crop_hints: true\n# This is the same as calling\n# annotation = vision.annotate img, crop_hints: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_crop_hints = 5\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, crop_hints: true\n# This is the same as calling\n# annotation = vision.annotate img, crop_hints: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"crop_hints-instance\">Image#crop_hints</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_crop_hints #=> 100\n\ncrop_hints = vision.image(\"path/to/landmarks.jpg\").crop_hints\n# This is the same as calling\n# crop_hints = vision.image(\"path/to/landmarks.jpg\").crop_hints 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"crop_hints-instance\">Image#crop_hints</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_crop_hints = 5\n\ncrop_hints = vision.image(\"path/to/landmarks.jpg\").crop_hints\n# This is the same as calling\n# crop_hints = vision.image(\"path/to/landmarks.jpg\").crop_hints 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_crop_hints-class","type":"class","name":"default_max_crop_hints","title":["Google","Cloud","Vision.default_max_crop_hints"],"description":"<p>The default max results to return for crop hints detection requests.</p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L561","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_web=-class","type":"class","name":"default_max_web=","title":["Google","Cloud","Vision.default_max_web="],"description":"<p>The default max results to return for web detection requests.\nThis is used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"web-instance\">Image#web</a>.</p>\n\n<p>The default value is 100.</p>\n\n<p>This is also available on the configuration as\n<code>Google::Cloud::Vision.configure.default_max_web</code></p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L623","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_web #=> 100\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, web: true\n# This is the same as calling\n# annotation = vision.annotate img, web: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_web = 5\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, web: true\n# This is the same as calling\n# annotation = vision.annotate img, web: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"web-instance\">Image#web</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nGoogle::Cloud::Vision.default_max_web #=> 100\n\nweb = vision.image(\"path/to/landmarks.jpg\").web\n# This is the same as calling\n# web = vision.image(\"path/to/landmarks.jpg\").web 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"web-instance\">Image#web</a>:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_web = 5\n\nweb = vision.image(\"path/to/landmarks.jpg\").web\n# This is the same as calling\n# web = vision.image(\"path/to/landmarks.jpg\").web 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_web-class","type":"class","name":"default_max_web","title":["Google","Cloud","Vision.default_max_web"],"description":"<p>The default max results to return for web detection requests.</p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L630","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","Vision.new"],"description":"<p>Creates a new object for connecting to the Vision service.\nEach call creates a new connection.</p>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L672","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nimage = vision.image \"path/to/landmark.jpg\"\n\nlandmark = image.landmark\nlandmark.description #=> \"Mount Rushmore\""}],"params":[{"name":"project_id","types":["String"],"description":"Project identifier for the Vision service you\nare connecting to. If not present, the default project for the\ncredentials is used.","optional":true,"default":"nil","nullable":true},{"name":"credentials","types":["String","Hash","Google::Auth::Credentials"],"description":"The path to\nthe keyfile as a String, the contents of the keyfile as a Hash, or a\nGoogle::Auth::Credentials object. (See <a data-custom-type=\"google/cloud/vision/credentials\">Vision::Credentials</a>)","optional":true,"default":"nil","nullable":true},{"name":"scope","types":["String","Array<String>"],"description":"The OAuth 2.0 scopes controlling\nthe set of resources and operations that the connection can access.\nSee <a href=\"https://developers.google.com/identity/protocols/OAuth2\">Using OAuth 2.0 to Access Google\nAPIs</a>.</p>\n\n<p>The default scope is:</p>\n\n<ul>\n  <li><code>https://www.googleapis.com/auth/cloud-platform</code></li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Integer"],"description":"Default timeout to use in requests. Optional.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A hash of values to override the default\nbehavior of the API client. Optional.","optional":true,"default":"nil","nullable":true},{"name":"project","types":["String"],"description":"Alias for the <code>project_id</code> argument. Deprecated.","optional":true,"default":"nil","nullable":true},{"name":"keyfile","types":["String"],"description":"Alias for the <code>credentials</code> argument.\nDeprecated.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"ArgumentError","description":""}],"returns":[{"types":["<a data-custom-type=\"google/cloud/vision/project\">Google::Cloud::Vision::Project</a>"],"description":""}]},{"id":"configure-class","type":"class","name":"configure","title":["Google","Cloud","Vision.configure"],"description":"<p>Configure the Google Cloud Vision library.</p>\n\n<p>The following Vision configuration parameters are supported:</p>\n\n<ul>\n  <li><code>project_id</code> - (String) Identifier for a Vision project. (The\nparameter <code>project</code> is considered deprecated, but may also be used.)</li>\n  <li><code>credentials</code> - (String, Hash, Google::Auth::Credentials) The path to\nthe keyfile as a String, the contents of the keyfile as a Hash, or a\nGoogle::Auth::Credentials object. (See <a data-custom-type=\"google/cloud/vision/credentials\">Vision::Credentials</a>) (The\nparameter <code>keyfile</code> is considered deprecated, but may also be used.)</li>\n  <li><code>scope</code> - (String, Array<String>) The OAuth 2.0 scopes controlling\nthe set of resources and operations that the connection can access.</String></li>\n  <li><code>timeout</code> - (Integer) Default timeout to use in requests.</li>\n  <li><code>client_config</code> - (Hash) A hash of values to override the default\nbehavior of the API client.</li>\n  <li><code>default_max_faces</code> - (Integer) The default max results to return for\nfacial detection requests. See <a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_faces=-class\">Vision.default_max_faces=</a>.</li>\n  <li><code>default_max_landmarks</code> - (Integer) The default max results to return\nfor landmark detection requests. See <a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_landmarks=-class\">Vision.default_max_landmarks=</a>.</li>\n  <li><code>default_max_logos</code> - (Integer) The default max results to return for\nlogo detection requests. See <a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_logos=-class\">Vision.default_max_logos=</a>.</li>\n  <li><code>default_max_labels</code> - (Integer) The default max results to return for\nlabel detection requests. See <a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_labels=-class\">Vision.default_max_labels=</a>.</li>\n  <li><code>default_max_crop_hints</code> - (Integer) The default max results to return\nfor crop hints detection requests. See\n<a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_crop_hints=-class\">Vision.default_max_crop_hints=</a>.</li>\n  <li><code>default_max_web</code> - (Integer) The default max results to return for\nweb detection requests. See <a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_faces=-class\">Vision.default_max_faces=</a>.</li>\n</ul>","source":"google-cloud-vision/lib/google/cloud/vision.rb#L727","resources":[],"examples":[],"params":[{"name":"yield","types":["block"],"description":"","optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Google::Cloud::Config"],"description":"The configuration object the\nGoogle::Cloud::Vision library uses."}]}]}