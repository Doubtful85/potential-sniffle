{"id":"google/cloud/debugger/agent","name":"Agent","title":["Google","Cloud","Debugger","Agent"],"description":"<h1 id=\"agent\">Agent</h1>\n\n<p>The Stackdriver Debugger Agent runs on the same system where a debuggee\napplication is running. The agent is responsible for sending state data,\nsuch as the value of program variables and the call stack, to\nStackdriver Debugger when the code at a breakpoint location is executed.</p>\n\n<p>The Debugger Agent runs in its own child thread when started. It ensures\nthe instrumented application is registered properly and constantly\nmonitors for any active breakpoints. Once the agent gets updated with\nactive breakpoints from Stackdriver Debugger service, it facilitates\nthe breakpoints in application requests thread, then transport the\nresult snapshot back to Stackdriver Debugger service asynchronously.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L49","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/debugger\"\n\ndebugger = Google::Cloud::Debugger.new\nagent = debugger.agent\nagent.start"}],"methods":[{"id":"debuggee-instance","type":"instance","name":"debuggee","title":["Google","Cloud","Debugger","Agent#debuggee"],"description":"<p>The gRPC Debuggee representation of the debuggee application. It\ncontains identification information to match running application to\nspecific Cloud Source Repository code base, and correctly group\nsame versions of the debuggee application together through a generated\nunique identifier.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L69","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/debugger/debuggee\">Google::Cloud::Debugger::Debuggee</a>"],"description":""}]},{"id":"breakpoint_manager-instance","type":"instance","name":"breakpoint_manager","title":["Google","Cloud","Debugger","Agent#breakpoint_manager"],"description":"<p>It manages syncing breakpoints between the Debugger Agent and\nStackdriver Debugger service</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L75","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/debugger/breakpointmanager\">Google::Cloud::Debugger::BreakpointManager</a>"],"description":""}]},{"id":"tracer-instance","type":"instance","name":"tracer","title":["Google","Cloud","Debugger","Agent#tracer"],"description":"<p>It monitors the debuggee application and triggers breakpoint\nevaluation when breakpoints are set.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L81","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/debugger/tracer\">Google::Cloud::Debugger::Tracer</a>"],"description":""}]},{"id":"transmitter-instance","type":"instance","name":"transmitter","title":["Google","Cloud","Debugger","Agent#transmitter"],"description":"<p>It sends evaluated breakpoints snapshot back to Stackdriver Debugger\nService.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L87","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Cloud::Debugger::Transmiter"],"description":""}]},{"id":"logger-instance","type":"instance","name":"logger","title":["Google","Cloud","Debugger","Agent#logger"],"description":"<p>The logger used to write the results of Logpoints.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L91","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"logger=-instance","type":"instance","name":"logger=","title":["Google","Cloud","Debugger","Agent#logger="],"description":"<p>The logger used to write the results of Logpoints.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L91","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"quota_manager-instance","type":"instance","name":"quota_manager","title":["Google","Cloud","Debugger","Agent#quota_manager"],"description":"<p>A quota tracking object helps tracking resource consumption during\nevaluations.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L96","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"quota_manager=-instance","type":"instance","name":"quota_manager=","title":["Google","Cloud","Debugger","Agent#quota_manager="],"description":"<p>A quota tracking object helps tracking resource consumption during\nevaluations.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L96","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"app_root-instance","type":"instance","name":"app_root","title":["Google","Cloud","Debugger","Agent#app_root"],"description":"<p>Absolute path to the debuggee Ruby application root directory. The\nStackdriver Debugger service creates canonical breakpoints with only\nrelative path. So the debugger agent combines the relative path to\nthe application directory to trace and evaluate breakpoints.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L104","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"app_root=-instance","type":"instance","name":"app_root=","title":["Google","Cloud","Debugger","Agent#app_root="],"description":"<p>Absolute path to the debuggee Ruby application root directory. The\nStackdriver Debugger service creates canonical breakpoints with only\nrelative path. So the debugger agent combines the relative path to\nthe application directory to trace and evaluate breakpoints.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L104","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Debugger","Agent#initialize"],"description":"<p>Create a new Debugger Agent instance.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L123","resources":[],"examples":[],"params":[{"name":"service","types":["Google::Cloud::Debugger::Service"],"description":"The gRPC Service\nobject","optional":false,"nullable":false},{"name":"logger","types":["Google::Cloud::Logging::Logger"],"description":"The logger used\nto write the results of Logpoints.","optional":true,"default":"nil","nullable":true},{"name":"module_name","types":["String"],"description":"Name for the debuggee application.","optional":false,"nullable":false},{"name":"module_version","types":["String"],"description":"Version identifier for the debuggee\napplication.","optional":false,"nullable":false},{"name":"app_root","types":["String"],"description":"Absolute path to the root directory of\nthe debuggee application. Default to Rack root.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/debugger/agent\">Agent</a>"],"description":"a new instance of Agent"}]},{"id":"start-instance","type":"instance","name":"start","title":["Google","Cloud","Debugger","Agent#start"],"description":"<p>Starts the Debugger Agent in a child thread, where debuggee\napplication registration and breakpoints querying will take place.\nIt also starts the transmitter in another child thread.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L151","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"stop-instance","type":"instance","name":"stop","title":["Google","Cloud","Debugger","Agent#stop"],"description":"<p>Stops and terminates the Debugger Agent. It also properly shuts down\ntransmitter and tracer.</p>\n\n<p>Once Debugger Agent is stopped, it cannot be started again.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L162","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"stop_tracer-instance","type":"instance","name":"stop_tracer","title":["Google","Cloud","Debugger","Agent#stop_tracer"],"description":"<p>Stops the tracer regardless of whether any active breakpoints are\npresent. Once the tracer stops monitoring the debuggee application,\nthe application can return to normal performance.</p>","source":"google-cloud-debugger/lib/google/cloud/debugger/agent.rb#L171","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}]}