{"id":"google/cloud/firestore/collectionreference","name":"CollectionReference","title":["Google","Cloud","Firestore","CollectionReference"],"description":"<h1 id=\"collectionreference\">CollectionReference</h1>\n\n<p>A collection reference object ise used for adding documents, getting\ndocument references, and querying for documents (See <a data-custom-type=\"google/cloud/firestore/query\">Query</a>).</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/collection_reference.rb#L44","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Get and print all city documents\ncities_col.get do |city|\n  puts \"#{city.document_id} has #{city[:population]} residents.\"\nend"}],"methods":[{"id":"collection_id-instance","type":"instance","name":"collection_id","title":["Google","Cloud","Firestore","CollectionReference#collection_id"],"description":"<p>The collection identifier for the collection resource.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/collection_reference.rb#L53","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"collection identifier."}]},{"id":"collection_path-instance","type":"instance","name":"collection_path","title":["Google","Cloud","Firestore","CollectionReference#collection_path"],"description":"<p>A string representing the path of the collection, relative to the\ndocument root of the database.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/collection_reference.rb#L62","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"collection path."}]},{"id":"doc-instance","type":"instance","name":"doc","title":["Google","Cloud","Firestore","CollectionReference#doc"],"description":"<p>Retrieves a document reference.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/collection_reference.rb#L121","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Get a document reference\nnyc_ref = cities_col.doc \"NYC\"\n\n# The document ID is what was provided\nnyc_ref.document_id #=> \"NYC\""},{"caption":"<p>Create a document reference with a random ID:</p>","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Get a document reference without specifying path\nrandom_ref = cities_col.doc\n\n# The document ID is randomly generated\nrandom_ref.document_id #=> \"RANDOMID123XYZ\""}],"params":[{"name":"document_path","types":["String","nil"],"description":"A string representing the path of\nthe document, relative to the document root of the database. If a\nstring is not provided, and random document identifier will be\ngenerated. Optional.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/documentreference\">DocumentReference</a>"],"description":"A document."}]},{"id":"parent-instance","type":"instance","name":"parent","title":["Google","Cloud","Firestore","CollectionReference#parent"],"description":"<p>The document reference or database the collection reference belongs\nto. If the collection is a root collection, it will return the\ndatabase object. If the collection is nested under a document, it\nwill return the document reference object.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/collection_reference.rb#L159","resources":[],"examples":[{"caption":"<p>Returns database object for root collections:</p>","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Get the document's parent collection\ndatabase = cities_col.parent"},{"caption":"<p>Returns document object for nested collections:</p>","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\nprecincts_ref = firestore.col \"cities/NYC/precincts\"\n\n# Get the document's parent collection\nnyc_ref = precincts_ref.parent"}],"params":[],"exceptions":[],"returns":[{"types":["Database","<a data-custom-type=\"google/cloud/firestore/documentreference\">DocumentReference</a>"],"description":"parent object."}]},{"id":"add-instance","type":"instance","name":"add","title":["Google","Cloud","Firestore","CollectionReference#add"],"description":"<p>Create a document with random document identifier.</p>\n\n<p>The operation will fail if the document already exists.</p>","source":"google-cloud-firestore/lib/google/cloud/firestore/collection_reference.rb#L207","resources":[],"examples":[{"caption":"<p>Create a document with a random ID:</p>","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Get a document reference without data\nrandom_ref = cities_col.add\n\n# The document ID is randomly generated\nrandom_ref.document_id #=> \"RANDOMID123XYZ\""},{"caption":"<p>Create a document snapshot:</p>","code":"require \"google/cloud/firestore\"\n\nfirestore = Google::Cloud::Firestore.new\n\n# Get a collection reference\ncities_col = firestore.col \"cities\"\n\n# Get a document snapshot\nrandom_ref = cities_col.add({ name: \"New York City\" })\n\n# The document ID is randomly generated\nrandom_ref.document_id #=> \"RANDOMID123XYZ\""}],"params":[{"name":"data","types":["Hash"],"description":"The documentâ€™s fields and values. Optional.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/firestore/documentreference\">DocumentReference</a>"],"description":"A created document."}]}]}