{"id":"google/bigtable/v2/readrowsresponse/cellchunk","name":"CellChunk","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk"],"description":"<p>Specifies a piece of a row’s contents returned as part of the read\nresponse stream.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"methods":[{"id":"row_key-instance","type":"instance","name":"row_key","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#row_key"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The row key for this chunk of data.  If the row key is empty,\nthis CellChunk is a continuation of the same row as the previous\nCellChunk in the response stream, even if that CellChunk was in a\nprevious ReadRowsResponse message."}]},{"id":"row_key=-instance","type":"instance","name":"row_key=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#row_key="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The row key for this chunk of data.  If the row key is empty,\nthis CellChunk is a continuation of the same row as the previous\nCellChunk in the response stream, even if that CellChunk was in a\nprevious ReadRowsResponse message."}]},{"id":"family_name-instance","type":"instance","name":"family_name","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#family_name"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/stringvalue\">Google::Protobuf::StringValue</a>"],"description":"The column family name for this chunk of data.  If this message\nis not present this CellChunk is a continuation of the same column\nfamily as the previous CellChunk.  The empty string can occur as a\ncolumn family name in a response so clients must check\nexplicitly for the presence of this message, not just for\n+family_name.value+ being non-empty."}]},{"id":"family_name=-instance","type":"instance","name":"family_name=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#family_name="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/stringvalue\">Google::Protobuf::StringValue</a>"],"description":"The column family name for this chunk of data.  If this message\nis not present this CellChunk is a continuation of the same column\nfamily as the previous CellChunk.  The empty string can occur as a\ncolumn family name in a response so clients must check\nexplicitly for the presence of this message, not just for\n+family_name.value+ being non-empty."}]},{"id":"qualifier-instance","type":"instance","name":"qualifier","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#qualifier"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/bytesvalue\">Google::Protobuf::BytesValue</a>"],"description":"The column qualifier for this chunk of data.  If this message\nis not present, this CellChunk is a continuation of the same column\nas the previous CellChunk.  Column qualifiers may be empty so\nclients must check for the presence of this message, not just\nfor +qualifier.value+ being non-empty."}]},{"id":"qualifier=-instance","type":"instance","name":"qualifier=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#qualifier="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/protobuf/bytesvalue\">Google::Protobuf::BytesValue</a>"],"description":"The column qualifier for this chunk of data.  If this message\nis not present, this CellChunk is a continuation of the same column\nas the previous CellChunk.  Column qualifiers may be empty so\nclients must check for the presence of this message, not just\nfor +qualifier.value+ being non-empty."}]},{"id":"timestamp_micros-instance","type":"instance","name":"timestamp_micros","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#timestamp_micros"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"The cell’s stored timestamp, which also uniquely identifies it\nwithin its column.  Values are always expressed in\nmicroseconds, but individual tables may set a coarser\ngranularity to further restrict the allowed values. For\nexample, a table which specifies millisecond granularity will\nonly allow values of +timestamp_micros+ which are multiples of</p>\n<ol>\n  <li>Timestamps are only set in the first CellChunk per cell\n(for cells split into multiple chunks).</li>\n</ol>"}]},{"id":"timestamp_micros=-instance","type":"instance","name":"timestamp_micros=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#timestamp_micros="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"The cell’s stored timestamp, which also uniquely identifies it\nwithin its column.  Values are always expressed in\nmicroseconds, but individual tables may set a coarser\ngranularity to further restrict the allowed values. For\nexample, a table which specifies millisecond granularity will\nonly allow values of +timestamp_micros+ which are multiples of</p>\n<ol>\n  <li>Timestamps are only set in the first CellChunk per cell\n(for cells split into multiple chunks).</li>\n</ol>"}]},{"id":"labels-instance","type":"instance","name":"labels","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#labels"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;String&gt;"],"description":"Labels applied to the cell by a\n<a data-custom-type=\"google/bigtable/v2/rowfilter\">RowFilter</a>.  Labels are only set\non the first CellChunk per cell."}]},{"id":"labels=-instance","type":"instance","name":"labels=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#labels="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;String&gt;"],"description":"Labels applied to the cell by a\n<a data-custom-type=\"google/bigtable/v2/rowfilter\">RowFilter</a>.  Labels are only set\non the first CellChunk per cell."}]},{"id":"value-instance","type":"instance","name":"value","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#value"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The value stored in the cell.  Cell values can be split across\nmultiple CellChunks.  In that case only the value field will be\nset in CellChunks after the first: the timestamp and labels\nwill only be present in the first CellChunk, even if the first\nCellChunk came in a previous ReadRowsResponse."}]},{"id":"value=-instance","type":"instance","name":"value=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#value="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The value stored in the cell.  Cell values can be split across\nmultiple CellChunks.  In that case only the value field will be\nset in CellChunks after the first: the timestamp and labels\nwill only be present in the first CellChunk, even if the first\nCellChunk came in a previous ReadRowsResponse."}]},{"id":"value_size-instance","type":"instance","name":"value_size","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#value_size"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"If this CellChunk is part of a chunked cell value and this is\nnot the final chunk of that cell, value_size will be set to the\ntotal length of the cell value.  The client can use this size\nto pre-allocate memory to hold the full cell value."}]},{"id":"value_size=-instance","type":"instance","name":"value_size=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#value_size="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"If this CellChunk is part of a chunked cell value and this is\nnot the final chunk of that cell, value_size will be set to the\ntotal length of the cell value.  The client can use this size\nto pre-allocate memory to hold the full cell value."}]},{"id":"reset_row-instance","type":"instance","name":"reset_row","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#reset_row"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["true","false"],"description":"Indicates that the client should drop all previous chunks for\n+row_key+, as it will be re-read from the beginning."}]},{"id":"reset_row=-instance","type":"instance","name":"reset_row=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#reset_row="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["true","false"],"description":"Indicates that the client should drop all previous chunks for\n+row_key+, as it will be re-read from the beginning."}]},{"id":"commit_row-instance","type":"instance","name":"commit_row","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#commit_row"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["true","false"],"description":"Indicates that the client can safely process all previous chunks for\n+row_key+, as its data has been fully read."}]},{"id":"commit_row=-instance","type":"instance","name":"commit_row=","title":["Google","Bigtable","V2","ReadRowsResponse","CellChunk#commit_row="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/bigtable/v2/bigtable.rb#L113","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["true","false"],"description":"Indicates that the client can safely process all previous chunks for\n+row_key+, as its data has been fully read."}]}]}