{"id":"google/cloud/spanner/snapshot","name":"Snapshot","title":["Google","Cloud","Spanner","Snapshot"],"description":"<h1 id=\"snapshot\">Snapshot</h1>\n\n<p>A snapshot in Cloud Spanner is a set of reads that execute atomically at\na single logical point in time across columns, rows, and tables in a\ndatabase.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L43","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\n  end\nend"}],"methods":[{"id":"transaction_id-instance","type":"instance","name":"transaction_id","title":["Google","Cloud","Spanner","Snapshot#transaction_id"],"description":"<p>Identifier of the transaction results were run in.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L50","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"The transaction id."}]},{"id":"timestamp-instance","type":"instance","name":"timestamp","title":["Google","Cloud","Spanner","Snapshot#timestamp"],"description":"<p>The read timestamp chosen for snapshots.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L58","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Time"],"description":"The chosen timestamp."}]},{"id":"execute-instance","type":"instance","name":"execute","title":["Google","Cloud","Spanner","Snapshot#execute"],"description":"<p>Executes a SQL query.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L217","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users\"\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\n  end\nend"},{"caption":"<p>Query using query parameters:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.execute \"SELECT * FROM users \" \\\n                        \"WHERE active = @active\",\n                        params: { active: true }\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\n  end\nend"},{"caption":"<p>Query with a SQL STRUCT query parameter as a Hash:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n   user_hash = { id: 1, name: \"Charlie\", active: false }\n\n  results = snp.execute \"SELECT * FROM users WHERE \" \\\n                        \"ID = @user_struct.id \" \\\n                        \"AND name = @user_struct.name \" \\\n                        \"AND active = @user_struct.active\",\n                        params: { user_struct: user_hash }\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\n  end\nend"},{"caption":"<p>Specify the SQL STRUCT type using Fields object:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n   user_type = snp.fields id: :INT64, name: :STRING, active: :BOOL\n   user_hash = { id: 1, name: nil, active: false }\n\n  results = snp.execute \"SELECT * FROM users WHERE \" \\\n                        \"ID = @user_struct.id \" \\\n                        \"AND name = @user_struct.name \" \\\n                        \"AND active = @user_struct.active\",\n                        params: { user_struct: user_hash },\n                        types: { user_struct: user_type }\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\n  end\nend"},{"caption":"<p>Or, query with a SQL STRUCT as a typed Data object:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n   user_type = snp.fields id: :INT64, name: :STRING, active: :BOOL\nuser_data = user_type.struct id: 1, name: nil, active: false\n\n  results = snp.execute \"SELECT * FROM users WHERE \" \\\n                        \"ID = @user_struct.id \" \\\n                        \"AND name = @user_struct.name \" \\\n                        \"AND active = @user_struct.active\",\n                        params: { user_struct: user_data }\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\n  end\nend"}],"params":[{"name":"sql","types":["String"],"description":"The SQL query string. See <a href=\"https://cloud.google.com/spanner/docs/query-syntax\">Query\nsyntax</a>.</p>\n\n<p>The SQL query string can contain parameter placeholders. A parameter\nplaceholder consists of “@” followed by the parameter name.\nParameter names consist of any combination of letters, numbers, and\nunderscores.","optional":false,"nullable":false},{"name":"params","types":["Hash"],"description":"SQL parameters for the query string. The\nparameter placeholders, minus the “@”, are the the hash keys, and\nthe literal values are the hash values. If the query string contains\nsomething like “WHERE id &gt; @msg_id”, then the params must contain\nsomething like <code>:msg_id =&gt; 1</code>.</p>\n\n<p>Ruby types are mapped to Spanner types as follows:</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Spanner</th>\n      <th>Ruby</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>BOOL</code></td>\n      <td><code>true</code>/<code>false</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>INT64</code></td>\n      <td><code>Integer</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>FLOAT64</code></td>\n      <td><code>Float</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>STRING</code></td>\n      <td><code>String</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>DATE</code></td>\n      <td><code>Date</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>TIMESTAMP</code></td>\n      <td><code>Time</code>, <code>DateTime</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>BYTES</code></td>\n      <td><code>File</code>, <code>IO</code>, <code>StringIO</code>, or similar</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ARRAY</code></td>\n      <td><code>Array</code></td>\n      <td>Nested arrays are not supported.</td>\n    </tr>\n    <tr>\n      <td><code>STRUCT</code></td>\n      <td><code>Hash</code>, <a data-custom-type=\"google/cloud/spanner/data\">Data</a></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-definition-language#data_types\">Data\ntypes</a>.</p>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-types#constructing-a-struct\">Data Types - Constructing a\nSTRUCT</a>.","optional":true,"default":"nil","nullable":true},{"name":"types","types":["Hash"],"description":"Types of the SQL parameters in <code>params</code>. It is not\nalways possible for Cloud Spanner to infer the right SQL type from a\nvalue in <code>params</code>. In these cases, the <code>types</code> hash must be used to\nspecify the SQL type for these values.</p>\n\n<p>The keys of the hash should be query string parameter placeholders,\nminus the “@”. The values of the hash should be Cloud Spanner type\ncodes from the following list:</p>\n\n<ul>\n  <li><code>:BOOL</code></li>\n  <li><code>:BYTES</code></li>\n  <li><code>:DATE</code></li>\n  <li><code>:FLOAT64</code></li>\n  <li><code>:INT64</code></li>\n  <li><code>:STRING</code></li>\n  <li><code>:TIMESTAMP</code></li>\n  <li><code>Array</code> - Lists are specified by providing the type code in an\narray. For example, an array of integers are specified as\n<code>[:INT64]</code>.</li>\n  <li><a data-custom-type=\"google/cloud/spanner/fields\">Fields</a> - Types for STRUCT values (<code>Hash</code>/<a data-custom-type=\"google/cloud/spanner/data\">Data</a> objects) are\nspecified using a <a data-custom-type=\"google/cloud/spanner/fields\">Fields</a> object.</li>\n</ul>\n\n<p>Types are optional.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":"The results of the query\nexecution."}]},{"id":"read-instance","type":"instance","name":"read","title":["Google","Cloud","Spanner","Snapshot#read"],"description":"<p>Read rows from a database table, as a simple alternative to\n<a data-custom-type=\"google/cloud/spanner/snapshot\" data-method=\"execute-instance\">#execute</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L261","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  results = snp.read \"users\", [:id, :name]\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\n  end\nend"}],"params":[{"name":"table","types":["String"],"description":"The name of the table in the database to be\nread.","optional":false,"nullable":false},{"name":"columns","types":["Array<String, Symbol>"],"description":"The columns of table to be\nreturned for each row matching this request.","optional":false,"nullable":false},{"name":"keys","types":["Object","Array<Object>"],"description":"A single, or list of keys or key\nranges to match returned data to. Values should have exactly as many\nelements as there are columns in the primary key.","optional":true,"default":"nil","nullable":true},{"name":"index","types":["String"],"description":"The name of an index to use instead of the\ntable’s primary key when interpreting <code>id</code> and sorting result rows.\nOptional.","optional":true,"default":"nil","nullable":true},{"name":"limit","types":["Integer"],"description":"If greater than zero, no more than this number\nof rows will be returned. The default is no limit.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/results\">Google::Cloud::Spanner::Results</a>"],"description":"The results of the read\noperation."}]},{"id":"fields-instance","type":"instance","name":"fields","title":["Google","Cloud","Spanner","Snapshot#fields"],"description":"<p>Creates a configuration object (<a data-custom-type=\"google/cloud/spanner/fields\">Fields</a>) that may be provided to\nqueries or used to create STRUCT objects. (The STRUCT will be\nrepresented by the <a data-custom-type=\"google/cloud/spanner/data\">Data</a> class.) See <a data-custom-type=\"google/cloud/spanner/client\" data-method=\"execute-instance\">Client#execute</a> and/or\n<a data-custom-type=\"google/cloud/spanner/fields\" data-method=\"struct-instance\">Fields#struct</a>.</p>\n\n<p>For more information, see <a href=\"https://cloud.google.com/spanner/docs/data-types#constructing-a-struct\">Data Types - Constructing a\nSTRUCT</a>.</p>\n\n<p>See <a href=\"https://cloud.google.com/spanner/docs/data-types#constructing-a-struct\">Data Types - Constructing a\nSTRUCT</a>.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L345","resources":[],"examples":[{"caption":"<p>Create a STRUCT value with named fields using Fields object:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  named_type = snp.fields(\n    { id: :INT64, name: :STRING, active: :BOOL }\n  )\n  named_data = named_type.struct(\n    { id: 42, name: nil, active: false }\n  )\nend"},{"caption":"<p>Create a STRUCT value with anonymous field names:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  anon_type = snp.fields [:INT64, :STRING, :BOOL]\n  anon_data = anon_type.struct [42, nil, false]\nend"},{"caption":"<p>Create a STRUCT value with duplicate field names:</p>","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  dup_type = snp.fields [[:x, :INT64], [:x, :STRING], [:x, :BOOL]]\n  dup_data = dup_type.struct [42, nil, false]\nend"}],"params":[{"name":"types","types":["Array","Hash"],"description":"Accepts an array or hash types.</p>\n\n<p>Arrays can contain just the type value, or a sub-array of the\nfield’s name and type value. Hash keys must contain the field name\nas a <code>Symbol</code> or <code>String</code>, or the field position as an <code>Integer</code>.\nHash values must contain the type value. If a Hash is used the\nfields will be created using the same order as the Hash keys.</p>\n\n<p>Supported type values incude:</p>\n\n<ul>\n  <li><code>:BOOL</code></li>\n  <li><code>:BYTES</code></li>\n  <li><code>:DATE</code></li>\n  <li><code>:FLOAT64</code></li>\n  <li><code>:INT64</code></li>\n  <li><code>:STRING</code></li>\n  <li><code>:TIMESTAMP</code></li>\n  <li><code>Array</code> - Lists are specified by providing the type code in an\narray. For example, an array of integers are specified as\n<code>[:INT64]</code>.</li>\n  <li><a data-custom-type=\"google/cloud/spanner/fields\">Fields</a> - Nested Structs are specified by providing a Fields\nobject.</li>\n</ul>","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/fields\">Fields</a>"],"description":"The fields of the given types."}]},{"id":"range-instance","type":"instance","name":"range","title":["Google","Cloud","Spanner","Snapshot#range"],"description":"<p>Creates a Cloud Spanner Range. This can be used in place of a Ruby\nRange when needing to exclude the beginning value.</p>","source":"google-cloud-spanner/lib/google/cloud/spanner/snapshot.rb#L378","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/spanner\"\n\nspanner = Google::Cloud::Spanner.new\ndb = spanner.client \"my-instance\", \"my-database\"\n\ndb.snapshot do |snp|\n  key_range = db.range 1, 100\n  results = snp.read \"users\", [:id, :name], keys: key_range\n\n  results.rows.each do |row|\n    puts \"User #{row[:id]} is #{row[:name]}\"\n  end\nend"}],"params":[{"name":"beginning","types":["Object"],"description":"The object that defines the beginning of the\nrange.","optional":false,"nullable":false},{"name":"ending","types":["Object"],"description":"The object that defines the end of the range.","optional":false,"nullable":false},{"name":"exclude_begin","types":["Boolean"],"description":"Determines if the range excludes its\nbeginning value. Default is <code>false</code>.","optional":true,"default":"false","nullable":false},{"name":"exclude_end","types":["Boolean"],"description":"Determines if the range excludes its\nending value. Default is <code>false</code>.","optional":true,"default":"false","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/spanner/range\">Google::Cloud::Spanner::Range</a>"],"description":"The new Range instance."}]}]}