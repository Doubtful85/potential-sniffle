{"id":"google/cloud/errorreporting","name":"ErrorReporting","title":["Google","Cloud","ErrorReporting"],"description":"<h1 id=\"ruby-client-for-stackdriver-error-reporting-api-beta\">Ruby Client for Stackdriver Error Reporting API (<a href=\"https://github.com/GoogleCloudPlatform/google-cloud-ruby#versioning\">Beta</a>)</h1>\n\n<p><a href=\"https://cloud.google.com/error-reporting\">Stackdriver Error Reporting API</a>:\nStackdriver Error Reporting groups and counts similar errors from cloud\nservices. The Stackdriver Error Reporting API provides a way to report new\nerrors and read access to error groups and their associated errors.</p>\n<ul>\n  <li><a href=\"https://cloud.google.com/error-reporting\">Product Documentation</a></li>\n</ul>\n\n<h2 id=\"quick-start\">Quick Start</h2>\n<p>In order to use this library, you first need to go through the following\nsteps:</p>\n\n<ol>\n  <li><a href=\"https://console.cloud.google.com/project\">Select or create a Cloud Platform project.</a></li>\n  <li><a href=\"https://console.cloud.google.com/apis/api/error-reporting\">Enable the Stackdriver Error Reporting API.</a></li>\n  <li><a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud/master/guides/authentication\">Setup Authentication.</a></li>\n</ol>\n\n<h3 id=\"installation\">Installation</h3>\n<pre><code>$ gem install google-cloud-error_reporting\n</code></pre>\n\n<h3 id=\"preview\">Preview</h3>\n<h4 id=\"reporterrorsserviceclient\">ReportErrorsServiceClient</h4>\n<pre><code class=\"language-rb\">require \"google/cloud/error_reporting\"\n\nreport_errors_service_client = Google::Cloud::ErrorReporting::ReportErrors.new\nformatted_project_name = Google::Cloud::ErrorReporting::V1beta1::ReportErrorsServiceClient.project_path(project_id)\nmessage = \"[MESSAGE]\"\nservice = \"[SERVICE]\"\nservice_context = { service: service }\nfile_path = \"path/to/file.lang\"\nline_number = 42\nfunction_name = \"meaningOfLife\"\nreport_location = {\n  file_path: file_path,\n  line_number: line_number,\n  function_name: function_name\n}\ncontext = { report_location: report_location }\nevent = {\n  message: message,\n  service_context: service_context,\n  context: context\n}\nresponse = report_errors_service_client.report_error_event(formatted_project_name, event)\n</code></pre>\n\n<h3 id=\"next-steps\">Next Steps</h3>\n<ul>\n  <li>Read the <a href=\"https://cloud.google.com/error-reporting\">Stackdriver Error Reporting API Product documentation</a>\nto learn more about the product and see How-to Guides.</li>\n  <li>View this <a href=\"https://github.com/GoogleCloudPlatform/google-cloud-ruby/blob/master/README.md\">repository’s main README</a>\nto see the full list of Cloud APIs that we cover.</li>\n</ul>","source":"google-cloud-error_reporting/lib/google/cloud/error_reporting.rb#L110","resources":[],"examples":[],"methods":[{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","ErrorReporting.new"],"description":"<p>Creates a new object for connecting to the Stackdriver Error Reporting\nservice. Each call creates a new connection.</p>\n\n<p>For more information on connecting to Google Cloud see the\n<a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/guides/authentication\">Authentication\nGuide</a>.</p>","source":"google-cloud-error_reporting/lib/google/cloud/error_reporting.rb#L154","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/error_reporting\"\n\nerror_reporting = Google::Cloud::ErrorReporting.new\n# ..."}],"params":[{"name":"project_id","types":["String"],"description":"Google Cloud Platform project identifier for\nthe Stackdriver Error Reporting service you are connecting to. If not\npresent, the default project for the credentials is used.","optional":true,"default":"nil","nullable":true},{"name":"credentials","types":["String","Hash","Google::Auth::Credentials"],"description":"The path to\nthe keyfile as a String, the contents of the keyfile as a Hash, or a\nGoogle::Auth::Credentials object. (See <a data-custom-type=\"google/cloud/errorreporting/credentials\">ErrorReporting::Credentials</a>)","optional":true,"default":"nil","nullable":true},{"name":"scope","types":["String","Array<String>"],"description":"The OAuth 2.0 scopes controlling\nthe set of resources and operations that the connection can access.\nSee <a href=\"https://developers.google.com/identity/protocols/OAuth2\">Using OAuth 2.0 to Access Google\nAPIs</a>.</p>\n\n<p>The default scope is:</p>\n\n<ul>\n  <li><code>https://www.googleapis.com/auth/cloud-platform</code></li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Integer"],"description":"Default timeout to use in requests. Optional.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A hash of values to override the default\nbehavior of the API client. Optional.","optional":true,"default":"nil","nullable":true},{"name":"project","types":["String"],"description":"Alias for the <code>project_id</code> argument. Deprecated.","optional":true,"default":"nil","nullable":true},{"name":"keyfile","types":["String"],"description":"Alias for the <code>credentials</code> argument.\nDeprecated.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"ArgumentError","description":""}],"returns":[{"types":["<a data-custom-type=\"google/cloud/errorreporting/project\">Google::Cloud::ErrorReporting::Project</a>"],"description":""}]},{"id":"configure-class","type":"class","name":"configure","title":["Google","Cloud","ErrorReporting.configure"],"description":"<p>Configure the default <a data-custom-type=\"google/cloud/errorreporting/project\">Google::Cloud::ErrorReporting::Project</a>\nclient, allows the <a data-custom-type=\"google/cloud/errorreporting\" data-method=\"report-class\">.report</a> public method to reuse these\nconfigured parameters.</p>\n\n<p>The following Stackdriver ErrorReporting configuration parameters are\nsupported:</p>\n\n<ul>\n  <li><code>project_id</code> - (String)  Google Cloud Platform project identifier for\nthe Stackdriver Error Reporting service you are connecting to. (The\nparameter <code>project</code> is considered deprecated, but may also be used.)</li>\n  <li><code>credentials</code> - (String, Hash, Google::Auth::Credentials) The path to\nthe keyfile as a String, the contents of the keyfile as a Hash, or a\nGoogle::Auth::Credentials object. (See <a data-custom-type=\"google/cloud/errorreporting/credentials\">ErrorReporting::Credentials</a>)\n(The parameter <code>keyfile</code> is considered deprecated, but may also be\nused.)</li>\n  <li><code>scope</code> - (String, Array<String>) The OAuth 2.0 scopes controlling\nthe set of resources and operations that the connection can access.</String></li>\n  <li><code>timeout</code> - (Integer) Default timeout to use in requests.</li>\n  <li><code>client_config</code> - (Hash) A hash of values to override the default\nbehavior of the API client.</li>\n  <li><code>service_name</code> - (String) Name for the application.</li>\n  <li><code>service_version</code> - (String) Version identifier for the application.</li>\n  <li><code>ignore_classes</code> - (Array<Exception>) Array of exception types that\nshould not be reported.</Exception></li>\n</ul>\n\n<p>See the <a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/stackdriver/guides/instrumentation_configuration\">Configuration\nGuide</a>\nfor full configuration parameters.</p>","source":"google-cloud-error_reporting/lib/google/cloud/error_reporting.rb#L229","resources":[],"examples":[{"caption":"","code":"# in app.rb\nrequire \"google/cloud/error_reporting\"\n\nGoogle::Cloud::ErrorReporting.configure do |config|\n  config.project_id = \"my-project\"\n  config.credentials = \"/path/to/keyfile.json\"\n  config.service_name = \"my-service\"\n  config.service_version = \"v8\"\nend\n\nbegin\n  fail \"boom\"\nrescue => exception\n  # Report exception using configuration parameters provided above\n  Google::Cloud::ErrorReporting.report exception\nend"}],"params":[{"name":"yield","types":["block"],"description":"","optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Google::Cloud::Config"],"description":"The configuration object\nthe Google::Cloud::ErrorReporting module uses."}]},{"id":"report-class","type":"class","name":"report","title":["Google","Cloud","ErrorReporting.report"],"description":"<p>Provides an easy-to-use interface to Report a Ruby exception object to\nStackdriver ErrorReporting service. This method helps users to\ntransform the Ruby exception into an Stackdriver ErrorReporting\nErrorEvent gRPC structure, so users don’t need to. This should be the\nprefered method to use when users wish to report captured exception in\napplications.</p>\n\n<p>This public method creates a default Stackdriver ErrorReporting client\nand reuse that between calls. The default client is initialized with\nparameters defined in <a data-custom-type=\"google/cloud/errorreporting\" data-method=\"configure-class\">.configure</a>.</p>\n\n<p>The error event can be customized before reporting. See the example\nbelow and <a data-custom-type=\"google/cloud/errorreporting/errorevent\">Google::Cloud::ErrorReporting::ErrorEvent</a> class for avaiable\nerror event fields.</p>","source":"google-cloud-error_reporting/lib/google/cloud/error_reporting.rb#L280","resources":[],"examples":[{"caption":"<p>Basic usage</p>","code":"# in app.rb\nrequire \"google/cloud/error_reporting\"\n\nbegin\n  fail \"boom\"\nrescue => exception\n  # Report exception using configuration parameters provided above\n  Google::Cloud::ErrorReporting.report exception\nend"},{"caption":"<p>The error event can be customized if needed</p>","code":"require \"google/cloud/error_reporting\"\n\nbegin\n  fail \"boom\"\nrescue => exception\n  Google::Cloud::ErrorReporting.report exception do |error_event|\n    error_event.user = \"johndoh@example.com\"\n    error_event.http_status = \"502\"\n  end\nend"}],"params":[{"name":"exception","types":["Exception"],"description":"The captured Ruby Exception object","optional":false,"nullable":false},{"name":"service_name","types":["String"],"description":"An identifier for running service.\nOptional.","optional":true,"default":"nil","nullable":true},{"name":"service_version","types":["String"],"description":"A version identifier for running\nservice.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"","optional":true,"nullable":false}],"exceptions":[],"returns":[]}]}