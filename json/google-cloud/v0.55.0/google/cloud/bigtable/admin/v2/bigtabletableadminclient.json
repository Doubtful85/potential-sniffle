{"id":"google/cloud/bigtable/admin/v2/bigtabletableadminclient","name":"BigtableTableAdminClient","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient"],"description":"<p>Service for creating, configuring, and deleting Cloud Bigtable tables.</p>\n\n<p>Provides access to the table schemas only, not the data stored within\nthe tables.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L45","resources":[],"examples":[],"methods":[{"id":"bigtable_table_admin_stub-instance","type":"instance","name":"bigtable_table_admin_stub","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#bigtable_table_admin_stub"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L45","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Bigtable::Admin::V2::BigtableTableAdmin::Stub"],"description":""}]},{"id":"instance_path-class","type":"class","name":"instance_path","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient.instance_path"],"description":"<p>Returns a fully-qualified instance resource name string.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L119","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"instance","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"cluster_path-class","type":"class","name":"cluster_path","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient.cluster_path"],"description":"<p>Returns a fully-qualified cluster resource name string.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L131","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"instance","types":["String"],"description":"","optional":false,"nullable":false},{"name":"cluster","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"snapshot_path-class","type":"class","name":"snapshot_path","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient.snapshot_path"],"description":"<p>Returns a fully-qualified snapshot resource name string.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L145","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"instance","types":["String"],"description":"","optional":false,"nullable":false},{"name":"cluster","types":["String"],"description":"","optional":false,"nullable":false},{"name":"snapshot","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"table_path-class","type":"class","name":"table_path","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient.table_path"],"description":"<p>Returns a fully-qualified table resource name string.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L159","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"instance","types":["String"],"description":"","optional":false,"nullable":false},{"name":"table","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#initialize"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L196","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/admin/v2/bigtabletableadminclient\">BigtableTableAdminClient</a>"],"description":"a new instance of BigtableTableAdminClient"}]},{"id":"create_table-instance","type":"instance","name":"create_table","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#create_table"],"description":"<p>Creates a new table in the specified instance.\nThe table can be created with a full set of initial column families,\nspecified in the request.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L441","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_parent = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.instance_path(\"[PROJECT]\", \"[INSTANCE]\")\n\n# TODO: Initialize +table_id+:\ntable_id = ''\n\n# TODO: Initialize +table+:\ntable = {}\nresponse = bigtable_table_admin_client.create_table(formatted_parent, table_id, table)"}],"params":[{"name":"parent","types":["String"],"description":"The unique name of the instance in which to create the table.\nValues are of the form +projects/<project>/instances/<instance>+.</instance></project>","optional":false,"nullable":false},{"name":"table_id","types":["String"],"description":"The name by which the new table should be referred to within the parent\ninstance, e.g., +foobar+ rather than +<parent>/tables/foobar+.</parent>","optional":false,"nullable":false},{"name":"table","types":["Google::Bigtable::Admin::V2::Table | Hash"],"description":"The Table to create.\nA hash of the same form as <code>Google::Bigtable::Admin::V2::Table</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"initial_splits","types":["Array<Google::Bigtable::Admin::V2::CreateTableRequest::Split | Hash>"],"description":"The optional list of row keys that will be used to initially split the\ntable into several tablets (tablets are similar to HBase regions).\nGiven two split keys, +s1+ and +s2+, three tablets will be created,\nspanning the key ranges: +[, s1), [s1, s2), [s2, )+.</p>\n\n<p>Example:</p>\n\n<ul>\n  <li>Row keys := +[“a”, “apple”, “custom”, “customer_1”, “customer_2”,+\n+”other”, “zz”]+</li>\n  <li>initial_split_keys := +[“apple”, “customer_1”, “customer_2”, “other”]+</li>\n  <li>Key assignment:\n    <ul>\n      <li>Tablet 1 +[, apple)                =&gt; “a”.+\n        <ul>\n          <li>Tablet 2 +[apple, customer_1)      =&gt; “apple”,.+</li>\n          <li>Tablet 3 +[customer_1, customer_2) =&gt; “customer_1”.+</li>\n          <li>Tablet 4 +[customer_2, other)      =&gt; “customer_2”.+</li>\n          <li>Tablet 5 +[other, )                =&gt; “other”,.+\nA hash of the same form as <code>Google::Bigtable::Admin::V2::CreateTableRequest::Split</code>\ncan also be provided.</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::Admin::V2::Table"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/admin/v2/table\">Google::Bigtable::Admin::V2::Table</a>"],"description":""}]},{"id":"create_table_from_snapshot-instance","type":"instance","name":"create_table_from_snapshot","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#create_table_from_snapshot"],"description":"<p>Creates a new table from the specified snapshot. The target table must\nnot exist. The snapshot and the table must be in the same instance.</p>\n\n<p>Note: This is a private alpha release of Cloud Bigtable snapshots. This\nfeature is not currently available to most Cloud Bigtable customers. This\nfeature might be changed in backward-incompatible ways and is not\nrecommended for production use. It is not subject to any SLA or deprecation\npolicy.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L522","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_parent = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.instance_path(\"[PROJECT]\", \"[INSTANCE]\")\n\n# TODO: Initialize +table_id+:\ntable_id = ''\n\n# TODO: Initialize +source_snapshot+:\nsource_snapshot = ''\n\n# Register a callback during the method call.\noperation = bigtable_table_admin_client.create_table_from_snapshot(formatted_parent, table_id, source_snapshot) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"parent","types":["String"],"description":"The unique name of the instance in which to create the table.\nValues are of the form +projects/<project>/instances/<instance>+.</instance></project>","optional":false,"nullable":false},{"name":"table_id","types":["String"],"description":"The name by which the new table should be referred to within the parent\ninstance, e.g., +foobar+ rather than +<parent>/tables/foobar+.</parent>","optional":false,"nullable":false},{"name":"source_snapshot","types":["String"],"description":"The unique name of the snapshot from which to restore the table. The\nsnapshot and the table must be in the same instance.\nValues are of the form\n+projects/<project>/instances/<instance>/clusters/<cluster>/snapshots/<snapshot>+.</snapshot></cluster></instance></project>","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]},{"id":"list_tables-instance","type":"instance","name":"list_tables","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#list_tables"],"description":"<p>Lists all tables served from a specified instance.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L583","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_parent = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.instance_path(\"[PROJECT]\", \"[INSTANCE]\")\n\n# Iterate over all results.\nbigtable_table_admin_client.list_tables(formatted_parent).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\nbigtable_table_admin_client.list_tables(formatted_parent).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"parent","types":["String"],"description":"The unique name of the instance for which tables should be listed.\nValues are of the form +projects/<project>/instances/<instance>+.</instance></project>","optional":false,"nullable":false},{"name":"view","types":["Google::Bigtable::Admin::V2::Table::View"],"description":"The view to be applied to the returned tables’ fields.\nDefaults to +NAME_ONLY+ if unspecified; no others are currently supported.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Bigtable::Admin::V2::Table>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/bigtable/admin/v2/table\">Google::Bigtable::Admin::V2::Table</a>&gt;"],"description":"An enumerable of Google::Bigtable::Admin::V2::Table instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"get_table-instance","type":"instance","name":"get_table","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#get_table"],"description":"<p>Gets metadata information about the specified table.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L620","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\nresponse = bigtable_table_admin_client.get_table(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the requested table.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"view","types":["Google::Bigtable::Admin::V2::Table::View"],"description":"The view to be applied to the returned table’s fields.\nDefaults to +SCHEMA_VIEW+ if unspecified.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::Admin::V2::Table"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/admin/v2/table\">Google::Bigtable::Admin::V2::Table</a>"],"description":""}]},{"id":"delete_table-instance","type":"instance","name":"delete_table","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#delete_table"],"description":"<p>Permanently deletes a specified table and all of its data.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L653","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\nbigtable_table_admin_client.delete_table(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the table to be deleted.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":null,"description":"[]","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"modify_column_families-instance","type":"instance","name":"modify_column_families","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#modify_column_families"],"description":"<p>Performs a series of column family modifications on the specified table.\nEither all or none of the modifications will occur before this method\nreturns, but data requests received prior to that point may see a table\nwhere only some modifications have taken effect.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L699","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\n\n# TODO: Initialize +modifications+:\nmodifications = []\nresponse = bigtable_table_admin_client.modify_column_families(formatted_name, modifications)"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the table whose families should be modified.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"modifications","types":["Array<Google::Bigtable::Admin::V2::ModifyColumnFamiliesRequest::Modification | Hash>"],"description":"Modifications to be atomically applied to the specified table’s families.\nEntries are applied in order, meaning that earlier modifications can be\nmasked by later ones (in the case of repeated updates to the same family,\nfor example).\nA hash of the same form as <code>Google::Bigtable::Admin::V2::ModifyColumnFamiliesRequest::Modification</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::Admin::V2::Table"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/admin/v2/table\">Google::Bigtable::Admin::V2::Table</a>"],"description":""}]},{"id":"drop_row_range-instance","type":"instance","name":"drop_row_range","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#drop_row_range"],"description":"<p>Permanently drop/delete a row range from a specified table. The request can\nspecify whether to delete all rows in a table, or only those that match a\nparticular prefix.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L739","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\nbigtable_table_admin_client.drop_row_range(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the table on which to drop a range of rows.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"row_key_prefix","types":["String"],"description":"Delete all rows that start with this row key prefix. Prefix cannot be\nzero length.","optional":true,"default":"nil","nullable":true},{"name":"delete_all_data_from_table","types":["true","false"],"description":"Delete all rows in the table. Setting this to false is a no-op.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":null,"description":"[]","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]},{"id":"generate_consistency_token-instance","type":"instance","name":"generate_consistency_token","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#generate_consistency_token"],"description":"<p>Generates a consistency token for a Table, which can be used in\nCheckConsistency to check whether mutations to the table that finished\nbefore this call started have been replicated. The tokens will be available\nfor 90 days.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L779","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\nresponse = bigtable_table_admin_client.generate_consistency_token(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the Table for which to create a consistency token.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::Admin::V2::GenerateConsistencyTokenResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/admin/v2/generateconsistencytokenresponse\">Google::Bigtable::Admin::V2::GenerateConsistencyTokenResponse</a>"],"description":""}]},{"id":"check_consistency-instance","type":"instance","name":"check_consistency","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#check_consistency"],"description":"<p>Checks replication consistency based on a consistency token, that is, if\nreplication has caught up based on the conditions specified in the token\nand the check request.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L818","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\n\n# TODO: Initialize +consistency_token+:\nconsistency_token = ''\nresponse = bigtable_table_admin_client.check_consistency(formatted_name, consistency_token)"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the Table for which to check replication consistency.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"consistency_token","types":["String"],"description":"The token created using GenerateConsistencyToken for the Table.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::Admin::V2::CheckConsistencyResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/admin/v2/checkconsistencyresponse\">Google::Bigtable::Admin::V2::CheckConsistencyResponse</a>"],"description":""}]},{"id":"snapshot_table-instance","type":"instance","name":"snapshot_table","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#snapshot_table"],"description":"<p>Creates a new snapshot in the specified cluster from the specified\nsource table. The cluster and the table must be in the same instance.</p>\n\n<p>Note: This is a private alpha release of Cloud Bigtable snapshots. This\nfeature is not currently available to most Cloud Bigtable customers. This\nfeature might be changed in backward-incompatible ways and is not\nrecommended for production use. It is not subject to any SLA or deprecation\npolicy.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L909","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.table_path(\"[PROJECT]\", \"[INSTANCE]\", \"[TABLE]\")\n\n# TODO: Initialize +cluster+:\ncluster = ''\n\n# TODO: Initialize +snapshot_id+:\nsnapshot_id = ''\n\n# TODO: Initialize +description+:\ndescription = ''\n\n# Register a callback during the method call.\noperation = bigtable_table_admin_client.snapshot_table(formatted_name, cluster, snapshot_id, description) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the table to have the snapshot taken.\nValues are of the form\n+projects/<project>/instances/<instance>/tables/&lt;table&gt;+.</instance></project>","optional":false,"nullable":false},{"name":"cluster","types":["String"],"description":"The name of the cluster where the snapshot will be created in.\nValues are of the form\n+projects/<project>/instances/<instance>/clusters/<cluster>+.</cluster></instance></project>","optional":false,"nullable":false},{"name":"snapshot_id","types":["String"],"description":"The ID by which the new snapshot should be referred to within the parent\ncluster, e.g., +mysnapshot+ of the form: +[<em>a-zA-Z0-9][-</em>.a-zA-Z0-9]*+\nrather than\n+projects/<project>/instances/<instance>/clusters/<cluster>/snapshots/mysnapshot+.</cluster></instance></project>","optional":false,"nullable":false},{"name":"description","types":["String"],"description":"Description of the snapshot.","optional":false,"nullable":false},{"name":"ttl","types":["Google::Protobuf::Duration | Hash"],"description":"The amount of time that the new snapshot can stay active after it is\ncreated. Once ‘ttl’ expires, the snapshot will get deleted. The maximum\namount of time a snapshot can stay active is 7 days. If ‘ttl’ is not\nspecified, the default value of 24 hours will be used.\nA hash of the same form as <code>Google::Protobuf::Duration</code>\ncan also be provided.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]},{"id":"get_snapshot-instance","type":"instance","name":"get_snapshot","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#get_snapshot"],"description":"<p>Gets metadata information about the specified snapshot.</p>\n\n<p>Note: This is a private alpha release of Cloud Bigtable snapshots. This\nfeature is not currently available to most Cloud Bigtable customers. This\nfeature might be changed in backward-incompatible ways and is not\nrecommended for production use. It is not subject to any SLA or deprecation\npolicy.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L962","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.snapshot_path(\"[PROJECT]\", \"[INSTANCE]\", \"[CLUSTER]\", \"[SNAPSHOT]\")\nresponse = bigtable_table_admin_client.get_snapshot(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the requested snapshot.\nValues are of the form\n+projects/<project>/instances/<instance>/clusters/<cluster>/snapshots/<snapshot>+.</snapshot></cluster></instance></project>","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Bigtable::Admin::V2::Snapshot"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/bigtable/admin/v2/snapshot\">Google::Bigtable::Admin::V2::Snapshot</a>"],"description":""}]},{"id":"list_snapshots-instance","type":"instance","name":"list_snapshots","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#list_snapshots"],"description":"<p>Lists all snapshots associated with the specified cluster.</p>\n\n<p>Note: This is a private alpha release of Cloud Bigtable snapshots. This\nfeature is not currently available to most Cloud Bigtable customers. This\nfeature might be changed in backward-incompatible ways and is not\nrecommended for production use. It is not subject to any SLA or deprecation\npolicy.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L1024","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_parent = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.cluster_path(\"[PROJECT]\", \"[INSTANCE]\", \"[CLUSTER]\")\n\n# Iterate over all results.\nbigtable_table_admin_client.list_snapshots(formatted_parent).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\nbigtable_table_admin_client.list_snapshots(formatted_parent).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"parent","types":["String"],"description":"The unique name of the cluster for which snapshots should be listed.\nValues are of the form\n+projects/<project>/instances/<instance>/clusters/<cluster>+.\nUse +<cluster> = '-'+ to list snapshots for all clusters in an instance,\ne.g., +projects/<project>/instances/<instance>/clusters/-+.</instance></project></cluster></cluster></instance></project>","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Gax::PagedEnumerable<Google::Bigtable::Admin::V2::Snapshot>"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/bigtable/admin/v2/snapshot\">Google::Bigtable::Admin::V2::Snapshot</a>&gt;"],"description":"An enumerable of Google::Bigtable::Admin::V2::Snapshot instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"delete_snapshot-instance","type":"instance","name":"delete_snapshot","title":["Google","Cloud","Bigtable","Admin","V2","BigtableTableAdminClient#delete_snapshot"],"description":"<p>Permanently deletes the specified snapshot.</p>\n\n<p>Note: This is a private alpha release of Cloud Bigtable snapshots. This\nfeature is not currently available to most Cloud Bigtable customers. This\nfeature might be changed in backward-incompatible ways and is not\nrecommended for production use. It is not subject to any SLA or deprecation\npolicy.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/admin/v2/bigtable_table_admin_client.rb#L1063","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable/admin\"\n\nbigtable_table_admin_client = Google::Cloud::Bigtable::Admin::BigtableTableAdmin.new(version: :v2)\nformatted_name = Google::Cloud::Bigtable::Admin::V2::BigtableTableAdminClient.snapshot_path(\"[PROJECT]\", \"[INSTANCE]\", \"[CLUSTER]\", \"[SNAPSHOT]\")\nbigtable_table_admin_client.delete_snapshot(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"The unique name of the snapshot to be deleted.\nValues are of the form\n+projects/<project>/instances/<instance>/clusters/<cluster>/snapshots/<snapshot>+.</snapshot></cluster></instance></project>","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":null,"description":"[]","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[]}]}