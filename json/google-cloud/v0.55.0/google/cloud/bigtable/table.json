{"id":"google/cloud/bigtable/table","name":"Table","title":["Google","Cloud","Bigtable","Table"],"description":"<h1 id=\"table\">Table</h1>\n\n<p>A collection of user data indexed by row, column, and timestamp.\nEach table is served using the resources of its parent cluster.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L56","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\", perform_lookup: true)\n\ntable.column_families.each do |cf|\n  p cf.name\n  p cf.gc_rule\nend\n\n# Get column family by name\ncf1 = table.column_families.find_by_name(\"cf1\")\n\n# Create column family\ngc_rule = Google::Cloud::Bigtable::GcRule.max_versions(3)\ncf2 = table.column_families.create(\"cf2\", gc_rule)\n\n# Delete table\ntable.delete"}],"methods":[{"id":"app_profile_id-instance","type":"instance","name":"app_profile_id","title":["Google","Cloud","Bigtable","Table#app_profile_id"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L68","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"App profile id for request routing."}]},{"id":"app_profile_id=-instance","type":"instance","name":"app_profile_id=","title":["Google","Cloud","Bigtable","Table#app_profile_id="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L68","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"App profile id for request routing."}]},{"id":"project_id-instance","type":"instance","name":"project_id","title":["Google","Cloud","Bigtable","Table#project_id"],"description":"<p>The unique identifier for the project.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L82","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"instance_id-instance","type":"instance","name":"instance_id","title":["Google","Cloud","Bigtable","Table#instance_id"],"description":"<p>The unique identifier for the instance.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L89","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"name-instance","type":"instance","name":"name","title":["Google","Cloud","Bigtable","Table#name"],"description":"<p>The unique identifier for the table.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L96","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"path-instance","type":"instance","name":"path","title":["Google","Cloud","Bigtable","Table#path"],"description":"<p>The full path for the table resource. Values are of the form\n<code>projects/&lt;project_id&gt;/instances/&lt;instance_id&gt;/table/&lt;table_id&gt;</code>.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L105","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"reload!-instance","type":"instance","name":"reload!","title":["Google","Cloud","Bigtable","Table#reload!"],"description":"<p>Reload table information.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L122","resources":[],"examples":[],"params":[{"name":"view","types":["Symbol"],"description":"Table view type.\nDefault view type is <code>:SCHEMA_VIEW</code>\nValid view types are.</p>\n\n<ul>\n  <li><code>:NAME_ONLY</code> - Only populates <code>name</code></li>\n  <li><code>:SCHEMA_VIEW</code> - Only populates <code>name</code> and fields related to the table’s schema</li>\n  <li><code>:REPLICATION_VIEW</code> - Only populates <code>name</code> and fields related to the table’s replication state.</li>\n  <li><code>:FULL</code> - Populates all fields</li>\n</ul>","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/table\">Google::Cloud::Bigtable::Table</a>"],"description":""}]},{"id":"cluster_states-instance","type":"instance","name":"cluster_states","title":["Google","Cloud","Bigtable","Table#cluster_states"],"description":"<p>Map from cluster ID to per-cluster table state.\nIf it could not be determined whether or not the table has data in a\nparticular cluster (for example, if its zone is unavailable), then\nthere will be an entry for the cluster with UNKNOWN <code>replication_status</code>.\nViews: <code>FULL</code></p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L135","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigtable/table/clusterstate\">Google::Cloud::Bigtable::Table::ClusterState</a>&gt;"],"description":""}]},{"id":"column_families-instance","type":"instance","name":"column_families","title":["Google","Cloud","Bigtable","Table#column_families"],"description":"<p>The column families configured for this table, mapped by column family ID.\nAvailable column families data only in table view types: <code>SCHEMA_VIEW</code>, <code>FULL</code></p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L148","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;Google::Bigtable::ColumnFamily&gt;"],"description":""}]},{"id":"granularity-instance","type":"instance","name":"granularity","title":["Google","Cloud","Bigtable","Table#granularity"],"description":"<p>The granularity (e.g. <code>MILLIS</code>, <code>MICROS</code>) at which timestamps are stored in\nthis table. Timestamps not matching the granularity will be rejected.\nIf unspecified at creation time, the value will be set to <code>MILLIS</code>.\nViews: <code>SCHEMA_VIEW</code>, <code>FULL</code></p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L168","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Symbol"],"description":""}]},{"id":"granularity_millis?-instance","type":"instance","name":"granularity_millis?","title":["Google","Cloud","Bigtable","Table#granularity_millis?"],"description":"<p>The table keeps data versioned at a granularity of 1ms.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L177","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"delete-instance","type":"instance","name":"delete","title":["Google","Cloud","Bigtable","Table#delete"],"description":"<p>Permanently deletes the table from a instance.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L193","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstance = bigtable.table(\"my-instance\", \"my-table\")\ntable.delete"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code>true</code> if the table was deleted."}]},{"id":"exists?-instance","type":"instance","name":"exists?","title":["Google","Cloud","Bigtable","Table#exists?"],"description":"<p>Check table existence.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L231","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\")\n\nif table.exists?\n  p \"Table is exists.\"\nelse\n  p \"Table is not exists\"\nend"},{"caption":"<p>Using bigtable instance</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstance = bigtable.instance(\"my-instance\")\ntable = bigtable.table(\"my-table\")\n\nif table.exists?\n  p \"Table is exists.\"\nelse\n  p \"Table is not exists\"\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"column_family-instance","type":"instance","name":"column_family","title":["Google","Cloud","Bigtable","Table#column_family"],"description":"<p>Create column family object to perform create,update or delete operation.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L281","resources":[],"examples":[{"caption":"<p>Create column family</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", my-table)\n\n# OR get table from Instance object.\ninstance = bigtable.instance(\"my-instance\")\ntable = instance.table(\"my-table\")\n\ngc_rule = Google::Cloud::Bigtable::GcRule.max_versions(5)\ncolumn_family = table.column_family(\"cf1\", gc_rule)\ncolumn_family.create"},{"caption":"<p>Update column family</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\")\n\ngc_rule = Google::Cloud::Bigtable::GcRule.max_age(1800)\ncolumn_family = table.column_family(\"cf2\", gc_rule)\ncolumn_family.save\n# OR Using alias method update.\ncolumn_family.update"},{"caption":"<p>Delete column family</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\")\n\ncolumn_family = table.column_family(\"cf3\")\ncolumn_family.delete"}],"params":[{"name":"name","types":["String"],"description":"Name of the column family","optional":false,"nullable":false},{"name":"gc_rule","types":["Google::Cloud::Bigtable::GcRule"],"description":"Optional.\nGC Rule only required for create and update.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[]},{"id":"modify_column_families-instance","type":"instance","name":"modify_column_families","title":["Google","Cloud","Bigtable","Table#modify_column_families"],"description":"<p>Apply multitple column modifications\nPerforms a series of column family modifications on the specified table.\nEither all or none of the modifications will occur before this method\nreturns, but data requests received prior to that point may see a table\nwhere only some modifications have taken effect.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L341","resources":[],"examples":[{"caption":"<p>Apply multiple modificationss</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstance = bigtable.instance(\"my-instance\")\ntable = instance.table(\"my-table\")\n\nmodifications = []\nmodifications << Google::Cloud::Bigtable::ColumnFamily.create_modification(\n  \"cf1\", Google::Cloud::Bigtable::GcRule.max_age(600))\n)\n\nmodifications << Google::Cloud::Bigtable::ColumnFamily.update_modification(\n  \"cf2\", Google::Cloud::Bigtable::GcRule.max_versions(5)\n)\n\ngc_rule_1 = Google::Cloud::Bigtable::GcRule.max_versions(3)\ngc_rule_2 = Google::Cloud::Bigtable::GcRule.max_age(600)\nmodifications << Google::Cloud::Bigtable::ColumnFamily.update_modification(\n  \"cf3\", Google::Cloud::Bigtable::GcRule.union(gc_rule_1, gc_rule_2)\n)\n\nmax_age_gc_rule = Google::Cloud::Bigtable::GcRule.max_age(300)\nmodifications << Google::Cloud::Bigtable::ColumnFamily.update_modification(\n  \"cf4\", Google::Cloud::Bigtable::GcRule.union(max_version_gc_rule)\n)\n\nmodifications << Google::Cloud::Bigtable::ColumnFamily.drop_modification(\"cf5\")\n\ntable = bigtable.modify_column_families(modifications)\n\np table.column_families"}],"params":[{"name":"modifications","types":["Array<Google::Cloud::Bigtable::ColumnFamilyModification>"],"description":"Modifications to be atomically applied to the specified table’s families.\nEntries are applied in order, meaning that earlier modifications can be\nmasked by later ones (in the case of repeated updates to the same family,\nfor example).","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/table\">Google::Cloud::Bigtable::Table</a>"],"description":"Table with updated column families."}]},{"id":"generate_consistency_token-instance","type":"instance","name":"generate_consistency_token","title":["Google","Cloud","Bigtable","Table#generate_consistency_token"],"description":"<p>Generates a consistency token for a Table, which can be used in\nCheckConsistency to check whether mutations to the table that finished\nbefore this call started have been replicated. The tokens will be available\nfor 90 days.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L438","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstance = bigtable.instance(\"my-instance\")\ntable = instance.table(\"my-table\")\n\ntable.generate_consistency_token # \"l947XelENinaxJQP0nnrZJjHnAF7YrwW8HCJLotwrF\""}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"Generated consistency token"}]},{"id":"check_consistency-instance","type":"instance","name":"check_consistency","title":["Google","Cloud","Bigtable","Table#check_consistency"],"description":"<p>Checks replication consistency based on a consistency token, that is, if\nreplication has caught up based on the conditions specified in the token\nand the check request.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L464","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstance = bigtable.instance(\"my-instance\")\ntable = instance.table(\"my-table\")\n\ntoken = \"l947XelENinaxJQP0nnrZJjHnAF7YrwW8HCJLotwrF\"\n\nif table.check_consistency(token)\n  puts \"Replication is consistent\"\nend"}],"params":[{"name":"token","types":["String"],"description":"Consistency token","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Replication is consistent or not."}]},{"id":"wait_for_replication-instance","type":"instance","name":"wait_for_replication","title":["Google","Cloud","Bigtable","Table#wait_for_replication"],"description":"<p>Wait for replication to check replication consistency of table\nChecks replication consistency by generating consistency token and\ncalling +check_consistency+ api call 5 times(default).\nIf the response is consistent then return true. Otherwise try again.\nIf consistency checking will run for more than 10 minutes and still\nnot got the +true+ response then return +false+.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L499","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"instance_id\", \"my-table\", perform_lookup: true)\n\nif table.wait_for_replication\n  puts \"Replication done\"\nend\n\n# With custom timeout and interval\nif table.wait_for_replication(timeout: 300, check_interval: 10)\n  puts \"Replication done\"\nend"}],"params":[{"name":"timeout","types":["Integer"],"description":"Timeout in seconds. Defaults value is 600 seconds.","optional":true,"default":"600","nullable":false},{"name":"check_interval","types":["Integer"],"description":"Consistency check interval in seconds. Default is 5 seconds.","optional":true,"default":"5","nullable":false}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Replication is consistent or not."}]},{"id":"delete_all_rows-instance","type":"instance","name":"delete_all_rows","title":["Google","Cloud","Bigtable","Table#delete_all_rows"],"description":"<p>Delete all rows</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L547","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstance = bigtable.instance(\"my-instance\")\ntable = instance.table(\"my-table\")\ntable.delete_all_rows\n\n# With timeout\ntable.delete_all_rows(timeout: 120) # 120 seconds."}],"params":[{"name":"timeout","types":["Integer"],"description":"Call timeout in seconds\nUse in case of : Insufficient deadline for DropRowRange then\ntry again with a longer request deadline.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"delete_rows_by_prefix-instance","type":"instance","name":"delete_rows_by_prefix","title":["Google","Cloud","Bigtable","Table#delete_rows_by_prefix"],"description":"<p>Delete rows using row key prefix.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L568","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\")\n\ntable.delete_rows_by_prefix(\"user-100\")\n\n# With timeout\ntable.delete_all_rows(\"user-1\", timeout: 120) # 120 seconds."}],"params":[{"name":"prefix","types":["String"],"description":"Row key prefix. i.e “user”","optional":false,"nullable":false},{"name":"timeout","types":["Integer"],"description":"Call timeout in seconds","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"drop_row_range-instance","type":"instance","name":"drop_row_range","title":["Google","Cloud","Bigtable","Table#drop_row_range"],"description":"<p>Drop row range by row key prefix or delete all.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/table.rb#L591","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\")\n\n# Delete rows using row key prefix.\ntable.drop_row_range(\"user-100\")\n\n# Delete all data With timeout\ntable.drop_row_range(delete_all_data: true, timeout: 120) # 120 seconds."}],"params":[{"name":"row_key_prefix","types":["String"],"description":"Row key prefix. i.e “user”","optional":true,"default":"nil","nullable":true},{"name":"delete_all_data","types":["Boolean"],"description":"","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]}]}