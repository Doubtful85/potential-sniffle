{"id":"google/cloud/bigtable/project","name":"Project","title":["Google","Cloud","Bigtable","Project"],"description":"<h1 id=\"project\">Project</h1>\n\n<p>Projects are top-level containers in Google Cloud Platform. They store\ninformation about billing and authorized users, and they contain\nCloud Bigtable data. Each project has a friendly name and a unique ID.</p>\n\n<p>Google::Cloud::Bigtable::Project is the main object for interacting with\nCloud Bigtable.</p>\n\n<p><a data-custom-type=\"google/cloud/bigtable/cluster\">Google::Cloud::Bigtable::Cluster</a>, <a data-custom-type=\"google/cloud/bigtable/instance\">Google::Cloud::Bigtable::Instance</a>\nobjects are created, accessed, and managed by Google::Cloud::Bigtable::Project.</p>\n\n<p>See Google::Cloud::Bigtable.new and Google::Cloud#bigtable.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L51","resources":[],"examples":[{"caption":"<p>Obtaining an instance and the clusters from a project.</p>","code":"require \"google/cloud\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstance = bigtable.instance(\"my-instance\")\nclusters = bigtable.clusters # All clusters in the project"}],"methods":[{"id":"project_id-instance","type":"instance","name":"project_id","title":["Google","Cloud","Bigtable","Project#project_id"],"description":"<p>The identifier for the Cloud Bigtable project.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L78","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\nbigtable = Google::Cloud::Bigtable.new(\n  project_id: \"my-project\",\n  credentials: \"/path/to/keyfile.json\"\n)\n\nbigtable.project_id #=> \"my-project\""}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"Project id."}]},{"id":"instances-instance","type":"instance","name":"instances","title":["Google","Cloud","Bigtable","Project#instances"],"description":"<p>Retrieves the list of Bigtable instances for the project.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L101","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstances = bigtable.instances\ninstances.all do |instance|\n  puts instance.instance_id\nend"}],"params":[{"name":"token","types":["String"],"description":"The <code>token</code> value returned by the last call to\n<code>instances</code>; indicates that this is a continuation of a call,\nand that the system should return the next page of data.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigtable/instance\">Google::Cloud::Bigtable::Instance</a>&gt;"],"description":"The list of instances.\n(See <a data-custom-type=\"google/cloud/bigtable/instance/list\">Google::Cloud::Bigtable::Instance::List</a>)"}]},{"id":"instance-instance","type":"instance","name":"instance","title":["Google","Cloud","Bigtable","Project#instance"],"description":"<p>Get existing Bigtable instance.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L123","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninstance = bigtable.instance(\"my-instance\")\n\nif instance\n  puts instance.instance_id\nend"}],"params":[{"name":"instance_id","types":["String"],"description":"Existing instance id.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/instance\">Google::Cloud::Bigtable::Instance</a>","nil"],"description":""}]},{"id":"create_instance-instance","type":"instance","name":"create_instance","title":["Google","Cloud","Bigtable","Project#create_instance"],"description":"<p>Create a Bigtable instance.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L222","resources":[{"title":"for cluster zone locations","link":"https://cloud.google.com/compute/docs/regions-zones"}],"examples":[{"caption":"<p>Create development instance.</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\njob = bigtable.create_instance(\n  \"my-instance\",\n  display_name: \"Instance for user data\",\n  type: :DEVELOPMENT,\n  labels: { \"env\" => \"dev\"}\n) do |clusters|\n  clusters.add(\"test-cluster\", \"us-east1-b\", nodes: 1)\nend\n\njob.done? #=> false\n\n# Reload job until completion.\njob.wait_until_done\njob.done? #=> true\n\nif job.error?\n  status = job.error\nelse\n  instance = job.instance\nend"},{"caption":"<p>Create production instance.</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\njob = bigtable.create_instance(\n  \"my-instance\",\n  display_name: \"Instance for user data\",\n  labels: { \"env\" => \"dev\"}\n) do |clusters|\n  clusters.add(\"test-cluster\", \"us-east1-b\", nodes: 3, storage_type: :SSD)\nend\n\njob.done? #=> false\n\n# To block until the operation completes.\njob.wait_until_done\njob.done? #=> true\n\nif job.error?\n  status = job.error\nelse\n  instance = job.instance\nend"}],"params":[{"name":"instance_id","types":["String"],"description":"The unique identifier for the instance,\nwhich cannot be changed after the instance is created. Values are of\nthe form <code>[a-z][-a-z0-9]*[a-z0-9]</code> and must be between 6 and 30\ncharacters in length. Required.","optional":false,"nullable":false},{"name":"display_name","types":["String"],"description":"The descriptive name for this instance as it\nappears in UIs. Must be unique per project and between 4 and 30\ncharacters in length.","optional":true,"default":"nil","nullable":true},{"name":"type","types":["Symbol"],"description":"The type of the instance.\nValid values are <code>:DEVELOPMENT</code> or <code>:PRODUCTION</code>.\nDefault <code>:PRODUCTION</code> instance will created if left blank.","optional":true,"default":"nil","nullable":true},{"name":"labels","types":["Hash{String=>String}"],"description":"labels Cloud Labels are a flexible and lightweight\nmechanism for organizing cloud resources into groups that reflect a\ncustomer’s organizational needs and deployment strategies. Cloud\nLabels can be used to filter collections of resources. They can be\nused to control how resource metrics are aggregated. And they can be\nused as arguments to policy management rules (e.g. route, firewall,\nload balancing, etc.).</p>\n\n<ul>\n  <li>Label keys must be between 1 and 63 characters long and must\nconform to the following regular expression:\n<code>[a-z]([-a-z0-9]*[a-z0-9])?</code>.</li>\n  <li>Label values must be between 0 and 63 characters long and must\nconform to the regular expression <code>([a-z]([-a-z0-9]*[a-z0-9])?)?</code>.</li>\n  <li>No more than 64 labels can be associated with a given resource.</li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"clusters","types":["Hash{String => Google::Cloud::Bigtable::Cluster}"],"description":"(See <a data-custom-type=\"google/cloud/bigtable/instance/clustermap\">Google::Cloud::Bigtable::Instance::ClusterMap</a>)\nIf passed as an empty use code block to add clusters.\nMinimum one cluster must be specified.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"A block for adding clusters.","optional":true,"nullable":false},{"name":"yield.Cluster","types":["Hash{String => Google::Cloud::Bigtable::Cluster}"],"description":"map of cluster name and cluster object.\n(See <a data-custom-type=\"google/cloud/bigtable/instance/clustermap\">Google::Cloud::Bigtable::Instance::ClusterMap</a>)","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/instance/job\">Google::Cloud::Bigtable::Instance::Job</a>"],"description":"The job representing the long-running, asynchronous processing of\nan instance create operation."}]},{"id":"clusters-instance","type":"instance","name":"clusters","title":["Google","Cloud","Bigtable","Project#clusters"],"description":"<p>List all clusters in project.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L270","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\nbigtable.clusters.all do |cluster|\n  puts cluster.cluster_id\n  puts cluster.ready?\nend"}],"params":[{"name":"token","types":["String"],"description":"The <code>token</code> value returned by the last call to\n<code>clusters</code>; indicates that this is a continuation of a call,\nand that the system should return the next page of data.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigtable/cluster\">Google::Cloud::Bigtable::Cluster</a>&gt;"],"description":"(See <a data-custom-type=\"google/cloud/bigtable/cluster/list\">Google::Cloud::Bigtable::Cluster::List</a>)"}]},{"id":"tables-instance","type":"instance","name":"tables","title":["Google","Cloud","Bigtable","Project#tables"],"description":"<p>List all tables for given instance.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L292","resources":[],"examples":[{"caption":"<p>Get tables</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\nbigtable.tables(\"my-instance\").all do |table|\n  puts table.name\n  puts table.column_families\nend"}],"params":[{"name":"instance_id","types":["String"],"description":"Existing instance Id.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/bigtable/table\">Google::Cloud::Bigtable::Table</a>&gt;"],"description":"(See <a data-custom-type=\"google/cloud/bigtable/table/list\">Google::Cloud::Bigtable::Table::List</a>)"}]},{"id":"table-instance","type":"instance","name":"table","title":["Google","Cloud","Bigtable","Project#table"],"description":"<p>Get table information.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L377","resources":[],"examples":[{"caption":"<p>Get table with schema only view</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\", perform_lookup: true, view: :SCHEMA_VIEW)\nif table\n  p table.name\n  p table.column_families\nend"},{"caption":"<p>Get table object without calling get table admin api.</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\")"},{"caption":"<p>Get table with all fields. Clusters states, column families</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\", view: :FULL, perform_lookup: true)\niftruee\n  puts table.name\n  p table.column_families\n  p table.cluster_states\nend"},{"caption":"<p>Mutate rows</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\")\n\nentry = table.new_mutation_entry(\"user-1\")\nentry.set_cell(\n  \"cf-1\",\n  \"field-1\",\n  \"XYZ\"\n  timestamp: Time.now.to_i * 1000 # Time stamp in milli seconds.\n).delete_from_column(\"cf2\", \"field02\")\n\ntable.mutate_row(entry)"},{"caption":"<p>Read rows using app profile routing</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.table(\"my-instance\", \"my-table\", app_profile_id: \"my-app-profile\")\n\ntable.read_rows(limit: 5).each do |row|\n  row\nend"}],"params":[{"name":"instance_id","types":["String"],"description":"Existing instance Id.","optional":false,"nullable":false},{"name":"table_id","types":["String"],"description":"Existing table Id.","optional":false,"nullable":false},{"name":"view","types":["Symbol"],"description":"Optional. Table view type. Default <code>:SCHEMA_VIEW</code>\nValid view types are.</p>\n<ul>\n  <li><code>:NAME_ONLY</code> - Only populates <code>name</code></li>\n  <li><code>:SCHEMA_VIEW</code> - Only populates <code>name</code> and fields related to the table’s schema</li>\n  <li><code>:REPLICATION_VIEW</code> - Only populates <code>name</code> and fields related to the table’s replication state.</li>\n  <li><code>:FULL</code> - Populates all fields</li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"perform_lookup","types":["Boolean"],"description":"Get table object without verifying that the table resource exists.\nCalls made on this object will raise errors if the table does not exist.\nDefault value is <code>false</code>. Optional.\nIt helps to reduce admin apis calls.","optional":true,"default":"nil","nullable":true},{"name":"app_profile_id","types":["String"],"description":"The unique identifier for the app profile. Optional.\nIt is used only in data operations.\nThis value specifies routing for replication. If not specified, the\n“default” application profile will be used.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/table\">Google::Cloud::Bigtable::Table</a>","nil"],"description":""}]},{"id":"create_table-instance","type":"instance","name":"create_table","title":["Google","Cloud","Bigtable","Project#create_table"],"description":"<p>Creates a new table in the specified instance.\nThe table can be created with a full set of initial column families,\nspecified in the request.</p>\n\n<p>(See Google::Cloud::Bigtable::Instance::ColumnFamilyMap)\n  GC Rules for column family see <a data-custom-type=\"google/cloud/bigtable/gcrule\">Google::Cloud::Bigtable::GcRule</a>)</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L472","resources":[],"examples":[{"caption":"<p>Create table without column family</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ntable = bigtable.create_table(\"my-instance\", \"my-table\")\nputs table.name"},{"caption":"<p>Create table with column families and initial splits.</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\ninitial_splits = [\"user-00001\", \"user-100000\", \"others\"]\ntable = bigtable.create_table(\"my-instance\", \"my-table\", initial_splits: initial_splits) do |column_families|\n  column_families.add('cf1', Google::Cloud::Bigtable::GcRule.max_versions(5))\n  column_families.add('cf2', Google::Cloud::Bigtable::GcRule.max_age(600))\n\n  gc_rule = Google::Cloud::Bigtable::GcRule.union(\n    Google::Cloud::Bigtable::GcRule.max_age(1800),\n    Google::Cloud::Bigtable::GcRule.max_versions(3)\n  )\n  column_families.add('cf3', gc_rule)\nend\n\np table"}],"params":[{"name":"instance_id","types":["String"],"description":"The unique Id of the instance in which to create the table.","optional":false,"nullable":false},{"name":"table_id","types":["String"],"description":"The name by which the new table should be referred to within the parent\ninstance, e.g., +foobar+","optional":false,"nullable":false},{"name":"column_families","types":["Hash{String => Google::Cloud::Bigtable::ColumnFamily}"],"description":"(See <a data-custom-type=\"google/cloud/bigtable/table/columnfamilymap\">Google::Cloud::Bigtable::Table::ColumnFamilyMap</a>)\nIf passed as an empty use code block to add column families.","optional":true,"default":"nil","nullable":true},{"name":"granularity","types":["Symbol"],"description":"The granularity at which timestamps are stored in this table.\nTimestamps not matching the granularity will be rejected.\nValid values are <code>:MILLIS</code>.\nIf unspecified, the value will be set to <code>:MILLIS</code>","optional":true,"default":"nil","nullable":true},{"name":"initial_splits","types":["Array<String>"],"description":"The optional list of row keys that will be used to initially split the\ntable into several tablets (tablets are similar to HBase regions).\nGiven two split keys, +s1+ and +s2+, three tablets will be created,\nspanning the key ranges: +[, s1), [s1, s2), [s2, )+.</p>\n\n<p>Example:</p>\n\n<ul>\n  <li>Row keys := [“a”, “apple”, “custom”, “customer_1”, “customer_2”,+\n+”other”, “zz”]</li>\n  <li>initial_split_keys := +[“apple”, “customer_1”, “customer_2”, “other”]+</li>\n  <li>Key assignment:\n    <ul>\n      <li>Tablet 1 : +[, apple)                =&gt; “a”.+</li>\n      <li>Tablet 2 : +[apple, customer_1)      =&gt; “apple”,.+</li>\n      <li>Tablet 3 : +[customer_1, customer_2) =&gt; “customer_1”.+</li>\n      <li>Tablet 4 : +[customer_2, other)      =&gt; “customer_2”.+</li>\n      <li>Tablet 5 : +[other, )                =&gt; “other”,.+\nA hash of the same form as <code>Google::Bigtable::Admin::V2::CreateTableRequest::Split</code>\ncan also be provided.</li>\n    </ul>\n  </li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"A block for adding column_families.","optional":true,"nullable":false},{"name":"yield.Map","types":["Hash{String => Google::Cloud::Bigtable::ColumnFamily}"],"description":"of family name and column family object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/table\">Google::Cloud::Bigtable::Table</a>"],"description":""}]},{"id":"delete_table-instance","type":"instance","name":"delete_table","title":["Google","Cloud","Bigtable","Project#delete_table"],"description":"<p>Permanently deletes a specified table and all of its data.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L506","resources":[],"examples":[{"caption":"<p>Create table with column families and initial splits.</p>","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\nbigtable.delete_table(\"my-instance\", \"my-table\")"}],"params":[{"name":"instance_id","types":["String"],"description":"The unique Id of the instance in which table is exists.","optional":false,"nullable":false},{"name":"table_id","types":["String"],"description":"The unique name of the table to be deleted.\ne.g., +foobar+","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"modify_column_families-instance","type":"instance","name":"modify_column_families","title":["Google","Cloud","Bigtable","Project#modify_column_families"],"description":"<p>Performs a series of column family modifications on the specified table.\nEither all or none of the modifications will occur before this method\nreturns, but data requests received prior to that point may see a table\nwhere only some modifications have taken effect.</p>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/project.rb#L558","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/bigtable\"\n\nbigtable = Google::Cloud::Bigtable.new\n\nmodifications = []\nmodifications << Google::Cloud::Bigtable::ColumnFamily.create_modification(\n  \"cf1\", Google::Cloud::Bigtable::GcRule.max_age(600))\n)\n\nmodifications << Google::Cloud::Bigtable::ColumnFamily.update_modification(\n  \"cf2\", Google::Cloud::Bigtable::GcRule.max_versions(5)\n)\n\ngc_rule_1 = Google::Cloud::Bigtable::GcRule.max_versions(3)\ngc_rule_2 = Google::Cloud::Bigtable::GcRule.max_age(600)\nmodifications << Google::Cloud::Bigtable::ColumnFamily.update_modification(\n  \"cf3\", Google::Cloud::Bigtable::GcRule.union(gc_rule_1, gc_rule_2)\n)\n\nmax_age_gc_rule = Google::Cloud::Bigtable::GcRule.max_age(300)\nmodifications << Google::Cloud::Bigtable::ColumnFamily.update_modification(\n  \"cf4\", Google::Cloud::Bigtable::GcRule.union(max_version_gc_rule)\n)\n\nmodifications << Google::Cloud::Bigtable::ColumnFamily.drop_modification(\"cf5\")\n\ntable = bigtable.modify_column_families(\"my-instance\", \"my-table\", modifications)\n\np table.column_families"}],"params":[{"name":"instance_id","types":["String"],"description":"The unique Id of the instance in which table is exists.","optional":false,"nullable":false},{"name":"table_id","types":["String"],"description":"The unique Id of the table whose families should be modified.","optional":false,"nullable":false},{"name":"modifications","types":["Array<Google::Bigtable::Admin::V2::ModifyColumnFamiliesRequest::Modification> | Google::Bigtable::Admin::V2::ModifyColumnFamiliesRequest::Modification"],"description":"Modifications to be atomically applied to the specified table’s families.\nEntries are applied in order, meaning that earlier modifications can be\nmasked by later ones (in the case of repeated updates to the same family,\nfor example).","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/bigtable/table\">Google::Cloud::Bigtable::Table</a>"],"description":"Table with updated column families."}]}]}