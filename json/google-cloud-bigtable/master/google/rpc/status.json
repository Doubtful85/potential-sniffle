{"id":"google/rpc/status","name":"Status","title":["Google","Rpc","Status"],"description":"<p>The +Status+ type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n<a href=\"https://github.com/grpc\">gRPC</a>. The error model is designed to be:</p>\n\n<ul>\n  <li>Simple to use and understand for most users</li>\n  <li>Flexible enough to meet unexpected needs</li>\n</ul>\n\n<p>= Overview</p>\n\n<p>The +Status+ message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\nGoogle::Rpc::Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers <em>understand</em> and <em>resolve</em> the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package +google.rpc+ that can be used for common error conditions.</p>\n\n<p>= Language mapping</p>\n\n<p>The +Status+ message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the +Status+ message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.</p>\n\n<p>= Other uses</p>\n\n<p>The error model and the +Status+ message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.</p>\n\n<p>Example uses of this error model include:</p>\n\n<ul>\n  <li>\n    <p>Partial errors. If a service needs to return partial errors to the client,\nit may embed the +Status+ in the normal response to indicate the partial\nerrors.</p>\n  </li>\n  <li>\n    <p>Workflow errors. A typical workflow has multiple steps. Each step may\nhave a +Status+ message for error reporting.</p>\n  </li>\n  <li>\n    <p>Batch operations. If a client uses batch request and batch response, the\n+Status+ message should be used directly inside batch response, one for\neach error sub-response.</p>\n  </li>\n  <li>\n    <p>Asynchronous operations. If an API call embeds asynchronous operation\nresults in its response, the status of those operations should be\nrepresented directly using the +Status+ message.</p>\n  </li>\n  <li>\n    <p>Logging. If some API errors are stored in logs, the message +Status+ could\nbe used directly after any stripping needed for security/privacy reasons.</p>\n  </li>\n</ul>","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/rpc/status.rb#L81","resources":[],"examples":[],"methods":[{"id":"code-instance","type":"instance","name":"code","title":["Google","Rpc","Status#code"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/rpc/status.rb#L81","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"The status code, which should be an enum value of Google::Rpc::Code."}]},{"id":"code=-instance","type":"instance","name":"code=","title":["Google","Rpc","Status#code="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/rpc/status.rb#L81","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Integer"],"description":"The status code, which should be an enum value of Google::Rpc::Code."}]},{"id":"message-instance","type":"instance","name":"message","title":["Google","Rpc","Status#message"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/rpc/status.rb#L81","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\nGoogle::Rpc::Status#details field, or localized by the client."}]},{"id":"message=-instance","type":"instance","name":"message=","title":["Google","Rpc","Status#message="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/rpc/status.rb#L81","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\nGoogle::Rpc::Status#details field, or localized by the client."}]},{"id":"details-instance","type":"instance","name":"details","title":["Google","Rpc","Status#details"],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/rpc/status.rb#L81","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/protobuf/any\">Google::Protobuf::Any</a>&gt;"],"description":"A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."}]},{"id":"details=-instance","type":"instance","name":"details=","title":["Google","Rpc","Status#details="],"description":"","source":"google-cloud-bigtable/lib/google/cloud/bigtable/v2/doc/google/rpc/status.rb#L81","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/protobuf/any\">Google::Protobuf::Any</a>&gt;"],"description":"A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."}]}]}