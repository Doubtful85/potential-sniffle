{"id":"google/cloud/redis/v1beta1/cloudredisclient","name":"CloudRedisClient","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient"],"description":"<p>Configures and manages Cloud Memorystore for Redis instances</p>\n\n<p>Google Cloud Memorystore for Redis v1beta1</p>\n\n<p>The +redis.googleapis.com+ service implements the Google Cloud Memorystore\nfor Redis API and defines the following resource model for managing Redis\ninstances:</p>\n<ul>\n  <li>The service works with a collection of cloud projects, named: +/projects/*+</li>\n  <li>Each project has a collection of available locations, named: +/locations/*+</li>\n  <li>Each location has a collection of Redis instances, named: +/instances/*+</li>\n  <li>As such, Redis instances are resources of the form:\n+/projects/project_id/locations/location_id/instances/instance_id+</li>\n</ul>\n\n<p>Note that location_id must be refering to a GCP +region+; for example:</p>\n<ul>\n  <li>+projects/redpepper-1290/locations/us-central1/instances/my-redis+</li>\n</ul>","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L54","resources":[],"examples":[],"methods":[{"id":"cloud_redis_stub-instance","type":"instance","name":"cloud_redis_stub","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient#cloud_redis_stub"],"description":"","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L54","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Google::Cloud::Redis::V1beta1::CloudRedis::Stub"],"description":""}]},{"id":"location_path-class","type":"class","name":"location_path","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient.location_path"],"description":"<p>Returns a fully-qualified location resource name string.</p>","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L100","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"location","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"instance_path-class","type":"class","name":"instance_path","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient.instance_path"],"description":"<p>Returns a fully-qualified instance resource name string.</p>","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L112","resources":[],"examples":[],"params":[{"name":"project","types":["String"],"description":"","optional":false,"nullable":false},{"name":"location","types":["String"],"description":"","optional":false,"nullable":false},{"name":"instance","types":["String"],"description":"","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["String"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient#initialize"],"description":"","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L144","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/redis/v1beta1/cloudredisclient\">CloudRedisClient</a>"],"description":"a new instance of CloudRedisClient"}]},{"id":"list_instances-instance","type":"instance","name":"list_instances","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient#list_instances"],"description":"<p>Lists all Redis instances owned by a project in either the specified\nlocation (region) or all locations.</p>\n\n<p>The location should have the following format:</p>\n<ul>\n  <li>+projects/project_id/locations/location_id+</li>\n</ul>\n\n<p>If +location_id+ is specified as +-+ (wildcard), then all regions\navailable to the project are queried, and the results are aggregated.</p>","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L293","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/redis/v1beta1\"\n\ncloud_redis_client = Google::Cloud::Redis::V1beta1.new\nformatted_parent = Google::Cloud::Redis::V1beta1::CloudRedisClient.location_path(\"[PROJECT]\", \"[LOCATION]\")\n\n# Iterate over all results.\ncloud_redis_client.list_instances(formatted_parent).each do |element|\n  # Process element.\nend\n\n# Or iterate over results one page at a time.\ncloud_redis_client.list_instances(formatted_parent).each_page do |page|\n  # Process each page at a time.\n  page.each do |element|\n    # Process element.\n  end\nend"}],"params":[{"name":"parent","types":["String"],"description":"Required. The resource name of the instance location using the form:\n    +projects/project_id/locations/location_id+\nwhere +location_id+ refers to a GCP region","optional":false,"nullable":false},{"name":"page_size","types":["Integer"],"description":"The maximum number of resources contained in the underlying API\nresponse. If page streaming is performed per-resource, this\nparameter does not affect the return value. If page streaming is\nperformed per-page, this determines the maximum number of\nresources in a page.","optional":true,"default":"nil","nullable":true},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::PagedEnumerable&lt;<a data-custom-type=\"google/cloud/redis/v1beta1/instance\">Google::Cloud::Redis::V1beta1::Instance</a>&gt;"],"description":"An enumerable of Google::Cloud::Redis::V1beta1::Instance instances.\nSee Google::Gax::PagedEnumerable documentation for other\noperations such as per-page iteration or access to the response\nobject."}]},{"id":"get_instance-instance","type":"instance","name":"get_instance","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient#get_instance"],"description":"<p>Gets the details of a specific Redis instance.</p>","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L323","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/redis/v1beta1\"\n\ncloud_redis_client = Google::Cloud::Redis::V1beta1.new\nformatted_name = Google::Cloud::Redis::V1beta1::CloudRedisClient.instance_path(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\")\nresponse = cloud_redis_client.get_instance(formatted_name)"}],"params":[{"name":"name","types":["String"],"description":"Required. Redis instance resource name using the form:\n    +projects/project_id/locations/location_id/instances/instance_id+\nwhere +location_id+ refers to a GCP region","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/redis/v1beta1/instance\">Google::Cloud::Redis::V1beta1::Instance</a>"],"description":""}]},{"id":"create_instance-instance","type":"instance","name":"create_instance","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient#create_instance"],"description":"<p>Creates a Redis instance based on the specified tier and memory size.</p>\n\n<p>By default, the instance is peered to the projectâ€™s\n<a href=\"https://cloud.google.com/compute/docs/networks-and-firewalls#networks\">default network</a>.</p>\n\n<p>The creation is executed asynchronously and callers may check the returned\noperation to track its progress. Once the operation is completed the Redis\ninstance will be fully functional. Completed longrunning.Operation will\ncontain the new instance object in the response field.</p>\n\n<p>The returned operation is automatically deleted after a few hours, so there\nis no need to call DeleteOperation.</p>","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L405","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/redis/v1beta1\"\n\ncloud_redis_client = Google::Cloud::Redis::V1beta1.new\nformatted_parent = Google::Cloud::Redis::V1beta1::CloudRedisClient.location_path(\"[PROJECT]\", \"[LOCATION]\")\ninstance_id = \"test_instance\"\ntier = :BASIC\nmemory_size_gb = 1\ninstance = { tier: tier, memory_size_gb: memory_size_gb }\n\n# Register a callback during the method call.\noperation = cloud_redis_client.create_instance(formatted_parent, instance_id, instance) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"parent","types":["String"],"description":"Required. The resource name of the instance location using the form:\n    +projects/project_id/locations/location_id+\nwhere +location_id+ refers to a GCP region","optional":false,"nullable":false},{"name":"instance_id","types":["String"],"description":"Required. The logical name of the Redis instance in the customer project\nwith the following restrictions:</p>\n\n<ul>\n  <li>Must contain only lowercase letters, numbers, and hyphens.</li>\n  <li>Must start with a letter.</li>\n  <li>Must be between 1-40 characters.</li>\n  <li>Must end with a number or a letter.</li>\n  <li>Must be unique within the customer project / location</li>\n</ul>","optional":false,"nullable":false},{"name":"instance","types":["Google::Cloud::Redis::V1beta1::Instance | Hash"],"description":"Required. A Redis [Instance] resource\nA hash of the same form as <code>Google::Cloud::Redis::V1beta1::Instance</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]},{"id":"update_instance-instance","type":"instance","name":"update_instance","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient#update_instance"],"description":"<p>Updates the metadata and configuration of a specific Redis instance.</p>\n\n<p>Completed longrunning.Operation will contain the new instance object\nin the response field. The returned operation is automatically deleted\nafter a few hours, so there is no need to call DeleteOperation.</p>","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L492","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/redis/v1beta1\"\n\ncloud_redis_client = Google::Cloud::Redis::V1beta1.new\npaths_element = \"display_name\"\npaths_element_2 = \"memory_size_gb\"\npaths = [paths_element, paths_element_2]\nupdate_mask = { paths: paths }\ndisplay_name = \"UpdatedDisplayName\"\nmemory_size_gb = 4\ninstance = { display_name: display_name, memory_size_gb: memory_size_gb }\n\n# Register a callback during the method call.\noperation = cloud_redis_client.update_instance(update_mask, instance) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"update_mask","types":["Google::Protobuf::FieldMask | Hash"],"description":"Required. Mask of fields to update. At least one path must be supplied in\nthis field. The elements of the repeated paths field may only include these\nfields from CloudRedis::Instance:</p>\n<ul>\n  <li>+display_name+</li>\n  <li>+labels+</li>\n  <li>+memory_size_gb+</li>\n  <li>+redis_config+\nA hash of the same form as <code>Google::Protobuf::FieldMask</code>\ncan also be provided.</li>\n</ul>","optional":false,"nullable":false},{"name":"instance","types":["Google::Cloud::Redis::V1beta1::Instance | Hash"],"description":"Required. Update description.\nOnly fields specified in update_mask are updated.\nA hash of the same form as <code>Google::Cloud::Redis::V1beta1::Instance</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]},{"id":"delete_instance-instance","type":"instance","name":"delete_instance","title":["Google","Cloud","Redis","V1beta1","CloudRedisClient#delete_instance"],"description":"<p>Deletes a specific Redis instance.  Instance stops serving and data is\ndeleted.</p>","source":"google-cloud-redis/lib/google/cloud/redis/v1beta1/cloud_redis_client.rb#L557","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/redis/v1beta1\"\n\ncloud_redis_client = Google::Cloud::Redis::V1beta1.new\nformatted_name = Google::Cloud::Redis::V1beta1::CloudRedisClient.instance_path(\"[PROJECT]\", \"[LOCATION]\", \"[INSTANCE]\")\n\n# Register a callback during the method call.\noperation = cloud_redis_client.delete_instance(formatted_name) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"name","types":["String"],"description":"Required. Redis instance resource name using the form:\n    +projects/project_id/locations/location_id/instances/instance_id+\nwhere +location_id+ refers to a GCP region","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]}]}