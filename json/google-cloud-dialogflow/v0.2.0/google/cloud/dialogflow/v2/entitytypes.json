{"id":"google/cloud/dialogflow/v2/entitytypes","name":"EntityTypes","title":["Google","Cloud","Dialogflow","V2","EntityTypes"],"description":"","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2.rb#L237","resources":[],"examples":[],"methods":[{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","Dialogflow","V2","EntityTypes.new"],"description":"<p>Entities are extracted from user input and represent parameters that are\nmeaningful to your application. For example, a date range, a proper name\nsuch as a geographic location or landmark, and so on. Entities represent\nactionable data for your application.</p>\n\n<p>When you define an entity, you can also include synonyms that all map to\nthat entity. For example, “soft drink”, “soda”, “pop”, and so on.</p>\n\n<p>There are three types of entities:</p>\n\n<ul>\n  <li>\n    <p><strong>System</strong> - entities that are defined by the Dialogflow API for common\ndata types such as date, time, currency, and so on. A system entity is\nrepresented by the +EntityType+ type.</p>\n  </li>\n  <li>\n    <p><strong>Developer</strong> - entities that are defined by you that represent\nactionable data that is meaningful to your application. For example,\nyou could define a +pizza.sauce+ entity for red or white pizza sauce,\na +pizza.cheese+ entity for the different types of cheese on a pizza,\na +pizza.topping+ entity for different toppings, and so on. A developer\nentity is represented by the +EntityType+ type.</p>\n  </li>\n  <li>\n    <p><strong>User</strong> - entities that are built for an individual user such as\nfavorites, preferences, playlists, and so on. A user entity is\nrepresented by the <a data-custom-type=\"google/cloud/dialogflow/v2/sessionentitytype\">SessionEntityType</a> type.</p>\n  </li>\n</ul>\n\n<p>For more information about entity types, see the\n<a href=\"https://dialogflow.com/docs/entities\">Dialogflow documentation</a>.</p>","source":"google-cloud-dialogflow/lib/google/cloud/dialogflow/v2.rb#L296","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"nil","nullable":true},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"nil","nullable":true},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[]}]}