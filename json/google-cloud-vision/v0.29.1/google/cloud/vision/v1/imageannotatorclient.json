{"id":"google/cloud/vision/v1/imageannotatorclient","name":"ImageAnnotatorClient","title":["Google","Cloud","Vision","V1","ImageAnnotatorClient"],"description":"<p>Service that performs Google Cloud Vision API detection tasks over client\nimages, such as face, landmark, logo, label, and text detection. The\nImageAnnotator service returns detected entities from the images.</p>","source":"google-cloud-vision/lib/google/cloud/vision/v1/image_annotator_client.rb#L42","resources":[],"examples":[],"methods":[{"id":"image_annotator_stub-instance","type":"instance","name":"image_annotator_stub","title":["Google","Cloud","Vision","V1","ImageAnnotatorClient#image_annotator_stub"],"description":"","source":"google-cloud-vision/lib/google/cloud/vision/v1/image_annotator_client.rb#L42","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/vision/v1/imageannotator/stub\">Google::Cloud::Vision::V1::ImageAnnotator::Stub</a>"],"description":""}]},{"id":"initialize-constructor","type":"constructor","name":"initialize","title":["Google","Cloud","Vision","V1","ImageAnnotatorClient#initialize"],"description":"","source":"google-cloud-vision/lib/google/cloud/vision/v1/image_annotator_client.rb#L97","resources":[],"examples":[],"params":[{"name":"credentials","types":["Google::Auth::Credentials","String","Hash","GRPC::Core::Channel","GRPC::Core::ChannelCredentials","Proc"],"description":"Provides the means for authenticating requests made by the client. This parameter can\nbe many types.\nA <code>Google::Auth::Credentials</code> uses a the properties of its represented keyfile for\nauthenticating requests made by this client.\nA <code>String</code> will be treated as the path to the keyfile to be used for the construction of\ncredentials for this client.\nA <code>Hash</code> will be treated as the contents of a keyfile to be used for the construction of\ncredentials for this client.\nA <code>GRPC::Core::Channel</code> will be used to make calls through.\nA <code>GRPC::Core::ChannelCredentials</code> for the setting up the RPC client. The channel credentials\nshould already be composed with a <code>GRPC::Core::CallCredentials</code> object.\nA <code>Proc</code> will be used as an updater_proc for the Grpc channel. The proc transforms the\nmetadata for requests, generally, to give OAuth credentials.","optional":true,"default":"nil","nullable":true},{"name":"scopes","types":["Array<String>"],"description":"The OAuth scopes for this service. This parameter is ignored if\nan updater_proc is supplied.","optional":true,"default":"ALL_SCOPES","nullable":false},{"name":"client_config","types":["Hash"],"description":"A Hash for call options for each method. See\nGoogle::Gax#construct_settings for the structure of\nthis data. Falls back to the default config if not specified\nor the specified config is missing data points.","optional":true,"default":"{}","nullable":false},{"name":"timeout","types":["Numeric"],"description":"The default timeout, in seconds, for calls made through this client.","optional":true,"default":"DEFAULT_TIMEOUT","nullable":false},{"name":"metadata","types":["Hash"],"description":"Default metadata to be sent with each request. This can be overridden on a per call basis.","optional":true,"default":"nil","nullable":true},{"name":"exception_transformer","types":["Proc"],"description":"An optional proc that intercepts any exceptions raised during an API call to inject\ncustom error handling.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/vision/v1/imageannotatorclient\">ImageAnnotatorClient</a>"],"description":"a new instance of ImageAnnotatorClient"}]},{"id":"batch_annotate_images-instance","type":"instance","name":"batch_annotate_images","title":["Google","Cloud","Vision","V1","ImageAnnotatorClient#batch_annotate_images"],"description":"<p>Run image detection and annotation for a batch of images.</p>","source":"google-cloud-vision/lib/google/cloud/vision/v1/image_annotator_client.rb#L216","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/vision/v1\"\n\nimage_annotator_client = Google::Cloud::Vision::V1.new\n\n# TODO: Initialize +requests+:\nrequests = []\nresponse = image_annotator_client.batch_annotate_images(requests)"}],"params":[{"name":"requests","types":["Array<Google::Cloud::Vision::V1::AnnotateImageRequest | Hash>"],"description":"Individual image annotation requests for this batch.\nA hash of the same form as <code>Google::Cloud::Vision::V1::AnnotateImageRequest</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"Access the result along with the RPC operation","optional":true,"nullable":false},{"name":"yield.result","types":["Google::Cloud::Vision::V1::BatchAnnotateImagesResponse"],"description":"","optional":false,"nullable":false},{"name":"yield.operation","types":["GRPC::ActiveCall::Operation"],"description":"","optional":false,"nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["<a data-custom-type=\"google/cloud/vision/v1/batchannotateimagesresponse\">Google::Cloud::Vision::V1::BatchAnnotateImagesResponse</a>"],"description":""}]},{"id":"async_batch_annotate_files-instance","type":"instance","name":"async_batch_annotate_files","title":["Google","Cloud","Vision","V1","ImageAnnotatorClient#async_batch_annotate_files"],"description":"<p>Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and multiple\nimages per page. Progress and results can be retrieved through the\n+google.longrunning.Operations+ interface.\n+Operation.metadata+ contains +OperationMetadata+ (metadata).\n+Operation.response+ contains +AsyncBatchAnnotateFilesResponse+ (results).</p>","source":"google-cloud-vision/lib/google/cloud/vision/v1/image_annotator_client.rb#L278","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/vision/v1\"\n\nimage_annotator_client = Google::Cloud::Vision::V1.new\n\n# TODO: Initialize +requests+:\nrequests = []\n\n# Register a callback during the method call.\noperation = image_annotator_client.async_batch_annotate_files(requests) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"requests","types":["Array<Google::Cloud::Vision::V1::AsyncAnnotateFileRequest | Hash>"],"description":"Individual async file annotation requests for this batch.\nA hash of the same form as <code>Google::Cloud::Vision::V1::AsyncAnnotateFileRequest</code>\ncan also be provided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"nil","nullable":true}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]}]}