{"id":"google/cloud/vision/project","name":"Project","title":["Google","Cloud","Vision","Project"],"description":"<h1 id=\"project\">Project</h1>\n\n<p>Google Cloud Vision allows developers to easily integrate vision\ndetection features within applications, including image labeling, face\nand landmark detection, optical character recognition (OCR), and tagging\nof explicit content.</p>\n\n<p>See Google::Cloud#vision</p>","source":"google-cloud-vision/lib/google/cloud/vision/project.rb#L48","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nimage = vision.image \"path/to/landmark.jpg\"\n\nannotation = vision.annotate image, labels: true\n\nannotation.labels.map &:description\n# [\"stone carving\", \"ancient history\", \"statue\", \"sculpture\",\n#  \"monument\", \"landmark\"]"}],"methods":[{"id":"project_id-instance","type":"instance","name":"project_id","title":["Google","Cloud","Vision","Project#project_id"],"description":"<p>The Vision project connected to.</p>","source":"google-cloud-vision/lib/google/cloud/vision/project.rb#L71","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new(\n  project_id: \"my-project\",\n  credentials: \"/path/to/keyfile.json\"\n)\n\nvision.project_id #=> \"my-project\""}],"params":[],"exceptions":[],"returns":[]},{"id":"image-instance","type":"instance","name":"image","title":["Google","Cloud","Vision","Project#image"],"description":"<p>Returns a new image from the given source.</p>\n\n<p>Cloud Vision sets upper limits on file size as well as on the total\ncombined size of all images in a request. Reducing your file size can\nsignificantly improve throughput; however, be careful not to reduce\nimage quality in the process. See <a href=\"https://cloud.google.com/vision/docs/best-practices#image_sizing\">Best Practices - Image\nSizing</a>\nfor current file size limits.</p>\n\n<p>Note that an object in Google Cloud Storage is a single entity;\npermissions affect only that object. “Directory permissions” do not\nexist (though default bucket permissions do exist). Make sure the code\nwhich performs your request has access to that image.</p>","source":"google-cloud-vision/lib/google/cloud/vision/project.rb#L124","resources":[{"title":"Best\nPractices","link":"https://cloud.google.com/vision/docs/best-practices"}],"examples":[{"caption":"<p>With a publicly-accessible image HTTP/HTTPS URL:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nimage = vision.image \"https://www.example.com/images/landmark.jpg\""},{"caption":"<p>With a Google Cloud Storage URI:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nimage = vision.image \"gs://bucket-name/path_to_image_object\""},{"caption":"<p>With a local file path:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nimage = vision.image \"path/to/landmark.jpg\""}],"params":[{"name":"source","types":["String","IO","StringIO","Tempfile","Google::Cloud::Storage::File"],"description":"A string file path, publicly-accessible image HTTP/HTTPS URL,\nor Cloud Storage URI of the form\n<code>\"gs://bucketname/path/to/image_filename\"</code>; or a File, IO, StringIO,\nor Tempfile instance; or an instance of\nGoogle::Cloud::Storage::File.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/vision/image\">Image</a>"],"description":"An image for the Vision service."}]},{"id":"annotate-instance","type":"instance","name":"annotate","title":["Google","Cloud","Vision","Project#annotate"],"description":"<p>Performs detection of Cloud Vision\n<a href=\"https://cloud.google.com/vision/reference/rest/v1/images/annotate#Feature\">features</a>\non the given image(s). If no options for features are provided,\n<strong>all</strong> image detection features will be performed, with a default of\n<code>100</code> results for faces, landmarks, logos, labels, crop_hints, and\nweb. If any feature option is provided, only the specified feature\ndetections will be performed. Please review\n<a href=\"https://cloud.google.com/vision/docs/pricing\">Pricing</a> before use, as\na separate charge is incurred for each feature performed on an image.</p>\n\n<p>Cloud Vision sets upper limits on file size as well as on the total\ncombined size of all images in a request. Reducing your file size can\nsignificantly improve throughput; however, be careful not to reduce\nimage quality in the process. See <a href=\"https://cloud.google.com/vision/docs/best-practices#image_sizing\">Best Practices - Image\nSizing</a>\nfor current file size limits.</p>","source":"google-cloud-vision/lib/google/cloud/vision/project.rb#L257","resources":[{"title":"Cloud\nVision API Requests and Responses","link":"https://cloud.google.com/vision/docs/requests-and-responses"},{"title":"AnnotateImageRequest","link":"https://cloud.google.com/vision/reference/rest/v1/images/annotate#AnnotateImageRequest"},{"title":"Cloud Vision Pricing","link":"https://cloud.google.com/vision/docs/pricing"}],"examples":[{"caption":"<p>With a single image:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nimage = vision.image \"path/to/landmark.jpg\"\n\nannotation = vision.annotate image, labels: true\n\nannotation.labels.map &:description\n# [\"stone carving\", \"ancient history\", \"statue\", \"sculpture\",\n#  \"monument\", \"landmark\"]"},{"caption":"<p>With multiple images:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nface_img = vision.image \"path/to/face.jpg\"\nlandmark_img = vision.image \"path/to/landmark.jpg\"\n\nannotations = vision.annotate face_img, landmark_img, labels: true\n\nannotations[0].labels.count #=> 4\nannotations[1].labels.count #=> 6"},{"caption":"<p>With multiple images and configurations passed in a block:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nface_img = vision.image \"path/to/face.jpg\"\nlandmark_img = vision.image \"path/to/landmark.jpg\"\ntext_image = vision.image \"path/to/text.png\"\n\nannotations = vision.annotate do |annotate|\n   annotate.annotate face_img, faces: true, labels: true\n   annotate.annotate landmark_img, landmarks: true\n   annotate.annotate text_image, text: true\nend\n\nannotations[0].faces.count #=> 1\nannotations[0].labels.count #=> 4\nannotations[1].landmarks.count #=> 1\nannotations[2].text.pages.count #=> 1"},{"caption":"<p>Maximum result values can also be provided:</p>","code":"require \"google/cloud/vision\"\n\nvision = Google::Cloud::Vision.new\n\nimage = vision.image \"path/to/landmark.jpg\"\n\nannotation = vision.annotate image, labels: 3\n\nannotation.labels.map &:description\n# [\"stone carving\", \"ancient history\", \"statue\"]"}],"params":[{"name":"images","types":["Image","Object"],"description":"The image or images to annotate. This\ncan be an <a data-custom-type=\"google/cloud/vision/image\">Image</a> instance, or any other type that converts to an\n<a data-custom-type=\"google/cloud/vision/image\">Image</a>: A string file path, publicly-accessible image HTTP/HTTPS\nURL, or Cloud Storage URI of the form\n<code>\"gs://bucketname/path/to/image_filename\"</code>; or a File, IO, StringIO,\nor Tempfile instance; or an instance of\nGoogle::Cloud::Storage::File.","optional":false,"nullable":false},{"name":"faces","types":["Boolean","Integer"],"description":"Whether to perform the facial\ndetection feature. The maximum number of results is configured in\nGoogle::Cloud::Vision.default_max_faces, or may be provided here.\nOptional.","optional":true,"default":"false","nullable":false},{"name":"landmarks","types":["Boolean","Integer"],"description":"Whether to perform the landmark\ndetection feature. The maximum number of results is configured in\nGoogle::Cloud::Vision.default_max_landmarks, or may be provided\nhere. Optional.","optional":true,"default":"false","nullable":false},{"name":"logos","types":["Boolean","Integer"],"description":"Whether to perform the logo detection\nfeature. The maximum number of results is configured in\nGoogle::Cloud::Vision.default_max_logos, or may be provided here.\nOptional.","optional":true,"default":"false","nullable":false},{"name":"labels","types":["Boolean","Integer"],"description":"Whether to perform the label\ndetection feature. The maximum number of results is configured in\nGoogle::Cloud::Vision.default_max_labels, or may be provided here.\nOptional.","optional":true,"default":"false","nullable":false},{"name":"text","types":["Boolean"],"description":"Whether to perform the text detection feature\n(OCR for shorter documents with sparse text). Optional.","optional":true,"default":"false","nullable":false},{"name":"document","types":["Boolean"],"description":"Whether to perform the document text\ndetection feature (OCR for longer documents with dense text).\nOptional.","optional":true,"default":"false","nullable":false},{"name":"safe_search","types":["Boolean"],"description":"Whether to perform the safe search\nfeature. Optional.","optional":true,"default":"false","nullable":false},{"name":"properties","types":["Boolean"],"description":"Whether to perform the image properties\nfeature (currently, the image’s dominant colors.) Optional.","optional":true,"default":"false","nullable":false},{"name":"crop_hints","types":["Boolean","Integer"],"description":"Whether to perform the crop hints\nfeature. Optional.","optional":true,"default":"false","nullable":false},{"name":"web","types":["Boolean","Integer"],"description":"Whether to perform the web annotation\nfeature. Optional.","optional":true,"default":"false","nullable":false},{"name":"yield","types":["block"],"description":"A block for requests that involve multiple feature\nconfigurations. See <a data-custom-type=\"google/cloud/vision/annotate\" data-method=\"annotate-instance\">Annotate#annotate</a>.","optional":true,"nullable":false},{"name":"yield.annotate","types":["Annotate"],"description":"the Annotate object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/vision/annotation\">Annotation</a>","Array&lt;<a data-custom-type=\"google/cloud/vision/annotation\">Annotation</a>&gt;"],"description":"The results for all image\ndetections, returned as a single <a data-custom-type=\"google/cloud/vision/annotation\">Annotation</a> instance for one\nimage, or as an array of <a data-custom-type=\"google/cloud/vision/annotation\">Annotation</a> instances, one per image, for\nmultiple images."}]},{"id":"async_batch_annotate_files-instance","type":"instance","name":"async_batch_annotate_files","title":["Google","Cloud","Vision","Project#async_batch_annotate_files"],"description":"<p>Run asynchronous image detection and annotation for a list of generic\nfiles, such as PDF files, which may contain multiple pages and\nmultiple images per page. Progress and results can be retrieved\nthrough the google.longrunning.Operations interface.\nOperation.metadata contains OperationMetadata (metadata).\nOperation.response contains AsyncBatchAnnotateFilesResponse\n(results).</p>","source":"google-cloud-vision/lib/google/cloud/vision/project.rb#L345","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/vision\"\n\n# Create a new vision client.\nvision_client = Google::Cloud::Vision.new project_id: 'project_id'\nrequests = [{\n  input_config: {\n    gcs_source: { uri: 'source_uri' },\n    mime_type: \"application/pdf\"\n  },\n  features: [{ type: :DOCUMENT_TEXT_DETECTION }],\n  output_config: {\n    gcs_destination: { uri: 'destination_uri' },\n    batch_size: 2\n  }\n}]\n\n# Register a callback during the method call.\noperation = vision_client\n  .async_batch_annotate_files(requests) do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Or use the return value to register a callback.\noperation.on_done do |op|\n  raise op.results.message if op.error?\n  op_results = op.results\n  # Process the results.\n\n  metadata = op.metadata\n  # Process the metadata.\nend\n\n# Manually reload the operation.\noperation.reload!\n\n# Or block until the operation completes, triggering callbacks on\n# completion.\noperation.wait_until_done!"}],"params":[{"name":"requests","types":["Array<Google::Cloud::Vision::V1::AsyncAnnotateFileRequest|Hash>"],"description":"Individual async file annotation requests for this batch.\nA hash of the same form as\n  <code>Google::Cloud::Vision::V1::AsyncAnnotateFileRequest</code> can also be\nprovided.","optional":false,"nullable":false},{"name":"options","types":["Google::Gax::CallOptions"],"description":"Overrides the default settings for this call, e.g, timeout,\nretries, etc.","optional":true,"default":"{}","nullable":false}],"exceptions":[{"type":"Google::Gax::GaxError","description":"if the RPC is aborted."}],"returns":[{"types":["Google::Gax::Operation"],"description":""}]}]}